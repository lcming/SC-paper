%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: SystemOverview_architecture_v03.pdf
%%Creator: Adobe Acrobat 10.0.0
%%For: pllab
%%CreationDate: 2015/7/8, ¤U¤È 06:10:24
%%BoundingBox: 0 0 289 471
%%HiResBoundingBox: 0 0 288.9332 470.2635
%%CropBox: 0 0 288.9332 470.2635
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1175 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2015-07-08T18:09:39+08:00"
   xmp:CreatorTool="MicrosoftÂ® VisioÂ® 2010"
   xmp:ModifyDate="2015-07-08T18:10:14+08:00"
   xmp:MetadataDate="2015-07-08T18:10:14+08:00"
   pdf:Keywords=""
   pdf:Producer="MicrosoftÂ® VisioÂ® 2010"
   xmpMM:DocumentID="uuid:8c9697aa-e99b-4cd5-823e-8c57d762262d"
   xmpMM:InstanceID="uuid:38899b50-6725-42e9-b9ce-1e4085ea2ef4">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>pllab</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -470.263 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 470.263 li
288.933 470.263 li
288.933 0 li
cp
clp
gsave
-.840088 471.08 mo
289.16 471.08 li
289.16 -.92041 li
-.840088 -.92041 li
cp
clp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /TimesNewRomanPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3213555865000000cc000000606376
7420fe30def00000012c000007da6670676dc3a61d010000090800000631
676c7966c0654f9a000094780009235268656164de49adde00000f3c0000
00366868656112ef167c00000f7400000024686d7478be8c30e200000f98
0000355c6c6f636140b6bf44000044f4000035606d617870142b06ad0000
7a54000000206e616d658855476200007a7400000aba7072657039e6c80d
0000853000000f4567646972000000000000000000000000000303350190
00050008059a053300000125059a0533000003a000660212010502020603
050405020304e0002affc00078410000000900000000544d432000400020
fffc058cfe460133072101bb400001ffffff00000394054c000000200004
058e0000054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4a
fffc056b0023fe6affe00313000000ad000000ad0000000000250096009f
002400f0013100c200c0004a00a6004100500094004700cf00af000e0079
01cb00040023004400a80025011f0002004600170105009900d9005c0072
00e500e00028004b00de011200240045007000160039ffe90016004b0088
ffb900d9000a004300ae00ba016c0153002f00430048022c012b0025008f
ffc000170028ffcdffd80025009d00e50124ffb10048009d00e600110027
007f00910012006a00cafffc00000024006200a7017c01e900210060008b
0434048aff6b003b00b500d5014bff6b004d007905d809b5006c009100a3
011701c0ffdfffe700be04010065007f00820088009900b200c0022e0343
05a000200026003d004e00610065007b00d9011301310340ff27ff42ff99
004e00a700f2022b02c603070011002b0049005f008d00a100af00d600e4
00f5010b0135019d01ab01ab01d101ee05d80000004b0075007a0080009d
00a600a700ac00b9013101310217021700020017002900550080008f00a5
00b200b300d0014b015901c001c103a50530fe3fff14ff15ffe7ffff002a
00580099009f00c100e400f40130015901ab01ab03220374041e04740532
fd81004d0064009c00d000d100d600de00e500f500f8012a012a01e1027e
027fff57ffa8ffe500000008001f00380051005a006f0076007700a200c0
00c200c400f101fb0209027e02cf04c5057a05f0ff92001200260042004b
004f005100530064008b00ae00b200b800b800d600f50111012001310138
014e01520167018f019601b801d901d902060221027102ea03b003cb03dc
04360505ff3a00120016001e001f002300570068006c007e0088009200a5
00a800c500c901150126012d013001d601d901f6023b0244024402a302cf
02de0385038f04fc0586fee0feebfefbff8a0007004400470058007500aa
00e400ef011601200129016a017301e3027e029002b4030e031003230335
0341035403590388039403c803ce047204ab04da0549056105ab0761fe6e
fed1ff4bff84000000010006001e0027002c0034003700620066006a006b
006c007000700072007c0081008a008e0091009200a000ab00b800bf00c9
00d500dd00ec00f40100012101300169016a016d017c0185018e018e0199
01ac01c101c501c901e101f601f601f60222022202280236023f02430246
026702850285029402d002d602e8031c0363037f03800380039e03b603d9
0400040404ff053205320548058b05a706cb07280748076208ccfcedfd2a
fd59fddefe00fe1afe5bfe96fec1fee7ff56ff7900010025002d002e007c
00870091009900a100a500a500aa00af00b600c600cc00d700dd00ec00f2
01020105011701180123012a012c0131013f014701490149014d01510151
015501550157015a015a0161016201680168017f0180018201830184018d
0195019501950198019901a501a901b601b601b701ba01ba01d501df01e6
01ea01f2020002000203021702250227022f0239024302430247024f0252
02520267026f026f027002720276027e02a702b302b902d603130325032d
03610371039903ae03c203d403f90402042c042f043c04560467048304cf
04d104d804fb051f05450568059e05c2061b06340655066a069806af06e8
06fc070607500762077c07d407ff082500ad00c700aa00b5000000000000
000000000000002f06cf01730514047802df009c00180370058701550025
00060254036c038e03d2056601f0032001da018a0369036bffa3034602f8
036f015602bf0122031f053a0366008c00ff01ab02e102f402e704150154
02e90128049101b7026f034302060000000005d30415048305e8000002d7
003a027d01c002c503830383ffbd003a059e01df059e02d1002004e00213
00df01c001870297000000ce0269028b0058043405fb0069015a01a90578
0182013e0288012a03d4049e00e5032302f301f00196007a00cd014a0424
025e023901ab00cf00fd011e00ed017100700195004001bb01dd01b80001
01a803a7014c020c018d01b0020d0137010000cd032101d4030a00590000
000001260215015002f0025503bc06d00335010100d000d2007a01030130
007c000000000000000000fe006e006600940227002b0045004d00d30132
00180097004100f4febcffe9001605d8058b009100a1032c00520030005d
02cb003a009200e500e500580086003200ba0099008800300298007cff80
01640028004d0065000200b8016a002f010b001100170100007f00040016
022200a6005f000000f8000a00ca0043004b01ee0077012000f401c00028
045f0000008c044500c20060007b008b008b0064005d00c2009c009206b5
05d3004f011700000420fe9e00cc00dc005e004600e30032001a003c0091
005a00a1042c0041002000490071009c009cfe4800400040008600cb0102
007d003a003e006a0050044800290096ff6a0097006900e0004c001b00c9
0069ff970043ffbd0052ff83ff8b005fffa1ff5c00670053ffa8002a0076
ffb20036008705590256052b043400de00c901c4004800db018b00b30048
00da01160125011800ea00ea00ae0000003e05bb008a04d70053003fff8c
ffd500150028002200990062004a00e4006d00ee00e5004803c00033fe4e
02b1ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a50705
00ab0080001e05a50025008b04660230006900290016012f0080005c059f
000040425554403f3e3d3c3b3a393837363534333231302f2e2d2c2b2a29
2827262524232221201f1e1d1c1b1a1918171614131211100f0e0d0c0b0a
090807060504030201002c4523466020b02660b004262348482d2c452346
236120b02661b004262348482d2c45234660b0206120b04660b004262348
482d2c4523462361b0206020b02661b02061b004262348482d2c45234660
b0406120b06660b004262348482d2c4523462361b0406020b02661b04061
b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a5158
2320b08d44235920b0ed51582320b04d44235920b09051582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b017
2370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b003
25456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d
2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20
b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb017
2344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb017
2344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb017
2344b0177ae41b21b0177ae45959182d2cb0022546608a46b040618c482d
2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a23
444565234520b00325606a20b009234223688a6a606120b01a8ab0005279
21b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a52
79b31940201945208a54582321b03f1b235961442d2cb110114323430b2d
2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb1
0e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c
0120b003252349b04060b0206320b000525823b002253823b00225653800
8a63381b212121212159012d2c4bb06451584569b00943608a103a1b2121
10592d2c01b005251023208af500b0016023edec2d2c01b005251023208a
f500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c00
3c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b00643
0b2d2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b0005058b0
0161593a2f182d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb40001
00000015b00826b00826b00826b008260f10161345683ab001162d2cb400
0100000015b00826b00826b00826b008260f1016134568653ab001162d2c
4b53234b515a5820458a60441b2121592d2c4b545820458a60441b212159
2d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2c014b5323
4b515ab00225b00425b006254923451869525a58b00225b00225b0052546
2345696048592121212d2cb0134358031b02592d2cb0134358021b03592d
2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b01060482046b010604859
0a21211b2121592d2cb012435c580cb00425b00425060c6423646164b807
085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b
1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54
b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46
2320468a608a61b8ff8062232010238ab9035803588a70456020b0005058
b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1
400188535a58b910000020885458b202010243604259b12401885158b920
000040885458b2020202436042b12401885458b2022002436042004b014b
5258b2020802436042591bb940000080885458b202040243604259b94000
008063b80100885458b202080243604259b94000010063b80200885458b2
02100243604259b94000020063b80400885458b202400243604259595959
592d2cb0024354584b53234b515a58381b2121591b21212121592d000000
00010000000511ecf99ed9a45f0f3cf50819080000000000a2e31dc20000
0000c8c23397fb74fd8c1000080e00000009000100010000000000010000
0721fe4500571000fb74fadf100000010000000000000000000000000000
0d570639011c00000000020000000200000002aa00e40344008504000025
0400006c06aa00480639004b0171005102aa005402aa002e040000910483
00250200006e02aa005302000091023900030400004a040000f00400002c
040000530400002004000062040000580400004c0400007c040000510239
00b00239008e048300250483002504830025038d005c075e006105c70010
055600220556004a05c7002304e3002a0473002105c7004805c7002302aa
0033031d002a05c7002204e30029071d002205c7ffe505c7004804730022
05c70048055600230473008004e3003e05c7000b05c70012078d001b05c7
000f05c7001304e3001a02aa00a80239000302aa004b03c100250400ffef
02aa0076038d00490400fffb038d004604000044038d004c02aa004f0400
003d0400000d0239003c0239ff63040000110239003d063900110400000c
040000450400fff90400004402aa000d031d006402390014040000020400
001105c7000d0400001b0400000c038d002903d7011b019a00a103d700b1
0454001405c7001005c7000e0556004a04e3002a05c7ffe505c7004805c7
000b038d0049038d0049038d0049038d0049038d0049038d0049038d0046
038d004c038d004c038d004c038d004c0239003c0239003c0239000d0239
00020400000c040000450400004504000045040000450400004504000002
0400000204000002040000020400006503330062040000810400003d0400
009c02cd007003a0fff204000023061400450614004507d7001e02aa00ec
02aa003904640019071dffe805c7004905b4003504640008046400180464
001804000002049c008603f4004005b4002b0696002e0464003e02310000
0235fffa027b001d062500470556004904000027038d005902aa00e40483
002404640053040000020464001e04e5001a0400004004000040080000e6
05c7000e05c7000e05c70048071d004b05c700430400ffee0800ffed038d
0043038d004302aa00b902aa00c10464001703f4002f0400000c05c70013
0156feab0400ffe902aa007702aa007304730019047300170400008b0200
009102aa00c1038d00430800004105c7000e04e3002a05c7001004e3002a
04e3002a02aa003302aa003202aa003202aa003205c7004805c7004805c7
004805c7000b05c7000b05c7000b0239003c02aa003c02aa001602aa0017
02aa003702aa00e902aa009602aa00bb02aa004e02aa001d02aa003c04e3
00160239001e0473007e031d006404e3001a038d0029019a00a105c70023
0400004405c700130400000c047300240400fff904830025048300a50266
0088026600140266002c06000086060000860600002a0400002105c70048
0400003d02aa003304730080031d00640556004a038d00460556004a038d
0046040000260400ffef02aa00ec05c70010038d004905c70010038d0049
05c70023052c004405c7002304e3002a038d004c04e3002a038d004c04e3
00290239003d04e300290340003c04e3002902c0003d05c7ffe50400000c
05c7ffe50400000c05c70048040000450556002302aa000d0556002302aa
000d04730080031d006404e3003e0239001404e3003e036b001305c7000b
0400000205c7000b0400000204e3001a038d002904e3001a038d002904a0
002505c7004c05d900470431005703c50046035c0047045000460337000c
049e00450400ffef049500e40285000207c0002c0800004f040000990800
004f040000990800004f040000980400009807d5016a05c700c004830026
04cd00990483002604d5022204d5010505abffe905ab027e05ab027e05ab
ffe905ab027e05abffe905ab027e05abffe905abffe905abffe905abffe9
05abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905ab
ffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e
05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d5
00920800000007eb013007eb012007eb013007eb012004d500b204d50080
04d5002a082b0198086b01b807550010060000f40600006f0440003a0540
003704c0003f04150040040000250600005505ab002f046b003b04d50003
01c00089035500a206ab003403d5006404d5009202d6008302d6008304d5
00b202d6007005c70010038d00490556004a038d00460556004a038d0046
04e3002a038d004c04e3002a038d004c04e3002a038d004c05c700480400
003d05c700480400003d05c700480400003d05c700230400000d05c70023
0400000d02aa00160239ffde02aa00170239ffdf02aa00330239fffe02aa
00330239003c031d002a0239ff6305c70022040000110400001104e30029
0239003d05c7ffe50400000c059d002603f5000c05c700480400004505c7
0048040000450556002302aa000d04730080031d006404e3003b02390010
05c7000b0400000205c7000b0400000205c7000b0400000205c7000b0400
0002078d001b05c7000d05c700130400000c0239001605c7000f038d0049
071dffe80556004905c7004904000027023900b2078d001b05c7000d078d
001b05c7000d078d001b05c7000d05c700130400000c02aa00b802aaffdb
0400003d04cd005a060000860600002a060000310600002502aa00c302aa
00bb02aa00ec02aaffea05c70010058dff5c0677ff5c034aff5c05c7ffb6
0687ff5c05f2ffb30227ffb105c70010055600220525003204e3002a04e3
001a05c7002302aa003305c7002205cd001c071d002205c7ffe50525004f
05c7004805c700250473002204a8002004e3003e05c7001305c7000f05e7
001805f2003c02aa003205c7001304310057035c0047042f000b02270025
03f6fffa0412006e0389000003500046042f000b03d50051022700250408
001503e10019044a0074039effd3039100460400004503fe0059032b0046
03f6fffa038d00180502001c0544004b0227000003f6fffa0400004503f6
fffa0544004b04e3002a0604003704a000250548004b0473008002aa0033
02aa0032031d002a06fa000d06fa002705ee00360556002505aa001a05c7
002505c70010049800240556002204a000250575001a04e3002a072b0012
0402002b05c7002505c7002505560025056d0012071d002205c7002305c7
004805c70025047300220556004a04e3003e05aa001a0652004c05c7000f
05c700250533fffa081200390812003905a6003606fa0025049800240548
003a083900260556ffee038d00490412004e03c700300348001f0412001a
038d004c05870017032900180448002e0448002e03e3002e03fe000c0510
002e0448002e040000450448002e0400fff9038d0046037f000c0400000c
052f00570400001b0448002e0406001e0629002e0629002e0423000c0560
002d03a6002e036f001b05fa002d03aeffff038d004c03dd00110348001f
036f0046031d00640239003c023900020239ff6305d1000c05c9002d0400
000d03e3002e0400000c0448002e039a002502cf001f0800004107a20010
040a000d000001010000001c0000003200000012000001020000008f0000
008f0000008f00000090000001020000001c000001020000012102d90056
0000008f025400e0000002af0000ff6b023900b003da005f03a4003302af
0021035a004303c5004e023b0043024a004e03d0005803ce004302220043
039e0043037600330374000f040f006403e2004e023200430270002103cd
005f03a2004303a200430386005803dc004303ae003d03ca006903c00043
04e200430400002104750043045d00430444004301ac006b02f9006b0636
0096023bff9d039e0043039e00430374ff5b0374ff5b03a2003304e20043
04e2004304e2004304e2004303da005f03da005f03da005f03a4003302af
0021035a004303c5004e023b00430279000c03ce004302220043039e0043
037600330374000f03e2004e0270002103cd005f03a200430386005803ae
003d03ca006903c0004304e2004304000021023b004303a4003303760033
038600580404000f0000ffdc0000ff250000ffdc0000fe51028d00ab028d
00a002da0043034d007901a8ffba00000046000000460000004600000046
000000480000004600000046000000460435017c0435012e043500b70435
00810435012c043500be043500af043500810435009a043500db04350085
028d00c1043500b3060001000600010002420036060001000435009e0435
0098043500cb060001000600010006000100060001000600010000000046
060001000600010006000100060001000600010006000100060001000600
0100051bffba06000100060001000600010005b5003a05b5003a01f4ffba
01f4ffba060001000600010006000100060001000481003604350036043d
ffba043dffba03e9004a03e9004a067f0014077600140327ffba041effba
067f0014077600140327ffba041effba051b003204b500240300fff70600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000000
003000000046000000460000004000000046060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0400001b0800000006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
028d007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a8
005601d60010037500320375003201a8002d01d60013051b003204b50024
01f4ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4
ffba024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9
004a0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba
04a7ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a
00360435ffba0327ffba064f0027064f00270224ffba021affba04a70046
04a700460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d
0047040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba
043500450435004501f4ffba01f4ffba024200360300fff7039affba0327
ffba0375003203750032051b003204b50024051b003204b5002401f4ffba
01f4ffba045a004004ce0040045a002604ce0030045a005304ce0041045a
005304ce0041060001000600010000000046000000460600010006000100
060001000000004600000046060001000600010000000048000000460600
010006000100060001000000004600000046000000460000004600000040
000000300600010000000046000000460600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100060001000600010006000100028d00ca028d00c7
028d00c60600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000100ffba0800ffba1000ffba05c70048043b0045
0635000b045600020000fdcc0000fc140000fd130000fe420000fce00000
fdd40000fe620000fe2b0000fdb70000fc980000fd880000fc080000fcfe
0000feff0000ff030000fe9e041a00a206000088060000140000fe700000
fdd40000fdf60000fd770000fe620000fdbb0000fbd80000fbd80000fb74
0000fcfe0000fc8c0000fc460000fd270000fcb40000fca80000fcae0000
fc440000fe140000fe700000fd910000fc710000fdc30000fe470000fe62
0000fcc30000fde10000fd870000fd4b0000fd970000fd4b0000fc8a0000
fc620000fc090000fbd70239003c05c70010038d004905c70010038d0049
05c70010038d004905c70010038d004905c70010038d004905c70010038d
004905c70010038d004905c70010038d004905c70010038d004905c70010
038d004905c70010038d004905c70010038d004904e3002a038d004c04e3
002a038d004c04e3002a038d004c04e3002a038d004c04e3002a038d004c
04e3002a038d004c04e3002a038d004c04e3002a038d004c02aa00330239
003c02aa00330239003c05c700480400004505c700480400004505c70048
0400004505c700480400004505c700480400004505c700480400004505c7
00480400004505c70048043b004505c70048043b004505c70048043b0045
05c70048043b004505c70048043b004505c7000b0400000205c7000b0400
00020635000b045600020635000b045600020635000b045600020635000b
045600020635000b0456000205c700130400000c05c700130400000c05c7
00130400000c05c70010038d004902aa00330239000605c7004804000045
05c7000b0400000205c7000b0400000205c7000b0400000205c7000b0400
000205c7000b040000020000ff090000ff090000ff090000ff0904a00023
0348001f072b0012058700170556002503e3002e0556002503e3002e05c7
00230448002e05c700130400000205c700130400000205c7000f0400001b
0533fffa0406001e053300250400000d05c7002b038d004c05c700480400
004505b5003a01f4ffba0224ffba021affba04a7004601f4009e01f40010
01f4001b01f4001001f4006b01f4fff90227ffce0000000f01a8fff502aa
00a402aa00a40000000e01a80056000000560000ffcf01a8000f01d6ffbf
01a8fff501d6ffcd01a8001d01d6fff501a8009301d60013037500320375
00320375003203750032051b003204b5002405b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba02b3003202b3003202b3005f02b3
005f02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f
02b3005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5
ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba
045a002a039a00360435ffba0327ffba064f0027064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba064f0027064f
00270224ffba021affba04a7004604a7004604a7004604a70046093e0032
093e00320740ffba0740ffba067f0014077600140327ffba041effba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
04cf002d04cf002d0327ffba0327ffba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d
004701a8ffba01a8ffba043500450435004501f4ffba01f4ffba04350045
043500450435004504350045043500450435004501f4ffba01f4ffba0435
0045043500450481003604350036043dffba043dffba024200360300fff7
031a001a031a001a031a001a037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
03750032037500320375003203750032051bffba04b5ffba051b003204b5
002401f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba
01f4ffba051b003204b50024067f0045067f0045067f0045067f004501a8
00280000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e
08fc003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000
ff9f018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff58
0000ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5
ffba06c5ffba045a002a039a00360435ffba0327ffba034d007902b40023
0242003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4
006d067f001407760014022200430000fee702bc000004440043045afff5
04cefff5045a005304ce0041045a005304ce0041045a005304ce0041045a
005304ce0041045a005304ce0041045a005304ce004104350071043500ad
045a000f04ce000f0400fffb061400000498002404000096049800240400
00000556004a0556004a038d004605c70023068500000498004404000044
03c5004604e3002f040200550473ff6d05c7004805c700120629000d0207
fffe02aa002305c70022040000110239002d03e100190688002305c7ff7a
0400000c05c700480766004a05880045053300000400fff9047300240473
006e031d004804a8002002c000040239001404e300000239001404e3003e
05f2003c05c7000b063f00440400000c04e3001a038d00290450002b0450
003f038d0046038d00500400002c0400002a038c0034036000140400fff9
019a00a1023f00a101fe000a02aa00e40aaa002309540023078d00440800
0029071c00290472003d08e4ffe50800ffe50639000c038d004c05c70010
038d00490000ff0905c70010038d0049071dffe80556004905c700480400
000005c700480400003d05c700220400001105c700480400004505c70048
040000450450002b038d00210239ff630aaa002309540023078d004405c7
00480400003d07990023047b002205c7ffe50400000c05c70010038d0049
05c70010038d004904e3002a038d004c04e3002a038d004c02aaffd30239
ffa102aa00330239fffe05c700480400004505c700480400004505560023
02aa000d0556002302aa000d05c7000b0400000205c7000b040000020473
0080031d006404e3003e023900140481004b0329005405c700230400000d
0533002504d400480400004504e3001a038d002905c70010038d004904e3
002a038d004c05c70048040000450000feec05c700480400004505c70048
0400004505c700480400004505c700130400000c038d0004042f0044042f
fff704000096038d0043038d00460400004404000044038d003a0504004c
035c0047035c004004b40040038b004502aaff30040000440400004403a0
004504000011038d00000400000d0400001b0400001b0239002d02270025
02390036023900280239003d0239003d049f003d06390009063900090639
00110400ff300400000c03fa000c04000045050a00450544004b046d0045
02aafff302aafff302aafff302aa000c02aa000d02aa001702aafff303e7
003603e70036031d006402aaff3002aaff30037dff9402aaffe302390014
02390014040000020464006603c200020400001105c7000d0400000c03f1
0004038d002903f70029038d0021038d003c038d005d038d0046038d005d
038d004605c7004803c70030038b004503a000450448002e0239ff7f0400
fff40370003604000044038d005d038d0046066b004406c2004406d30044
0485001403ae001405310014064d004f0487003d047a003d041d001403d9
003c0292001e02920026013effd201bd001e01bd000501bd00050259001e
036d00040260000401c0008902ec008902aa00b902aa00c102aa00b802aa
00f702aa00f701fc001e01fc001e04830027048300250483005304830053
02aa012102aa00ec02aa007602aa012102aa001d02aa007602aa00ec0239
00b6023900b602aa00f702aa00f702aa00a602aa00a602aa00a602aa001d
02aaffef030e002d025800040154001e01b3001e0250000401fc001e0310
00960310009603100096031000960310009602aa006202aa006202aa003c
02aa0017038d004304570096045700960457009604570096045700430457
0043045700430457004304570043031000430457002f0457002f0457002f
0457002f0457002f0310002f045700250457002504570025045700250457
00250310002f0457001a0457001a0457001a0457001a0457001a0310001a
045700420457004204570042045700420457004203100042045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457002f0457002f0457002f0457002f0457002f0310002f0457
002f0457002f0457002f0457002f0457002f0310002f0457002604570026
045700260457002604570026031000260457004204570042045700420457
004204570042031000420457009604570096045700960457009604570042
045700420457004204570042045700420310004204570026045700260457
002604570026045700260310002604570023045700230457002304570023
04570023031000230457002f0457002f0457002f0457002f0457002f0310
002f0457004b0457004b0457004b0457004b0457004b0310004b04570096
045700960457009604570096045700420457004204570042045700420457
0042031000420457001a0457001a0457001a0457001a0457001a0310001a
0457002404570024045700240457002404570024031000240457002f0457
002f0457002f0457002f0457002f0310002f0457004e0457004e0457004e
0457004e0457004e0310004e045700960457009604570096045700960000
fee60000febf0000fdee0000fee00000ff940000fee60000ff440000fee3
0000fee50000ffce0000ff660000fee30000fee00000fee00000ff880000
ff880000ff88000000000000ff5b0000ff5d0000ff440000ff5f0000fe87
0000ffec0000ffa40000ff510000ff510000ff510000fec10000fe8a0000
00000000fee60000ff440000ff860000ff650000ff580000ffce0000fe87
0000febb0000fee50000fee60000fee00000fee00000fec10000febf0000
fdee0000fec10000fec10000febf0000fdee0000fe160000feb50000ffa4
0000fe870000ff440000feba0000ff230000ff9a0000fdee0000feb70000
00000000fec20000ff880000fe980000ff820000fe870000fde40000ff66
0000ff440000fec20000fec20000fec20000ff030000ff520000fd1f0000
ffb70000ffcb0000ff530000ff070000ff150000ff770000fef90000fecf
0000ff190000fede0000fed40000fe2a0000ff350000ff5b0000fed90000
fedc02aa00ec02aa007602aa00da0412005103f6000005c70013071f0000
05c700130436004505440000047b000a05c70048040000450556006e035c
001d0473002103930017049b0014039c001405da000a046e000006a00023
0639001104ed0046042b0045054a001e038d001d04560046045600460540
004504a60014059800480412004e03cd001e03160014047b000a0412004e
038d00460239ff6305c70048033d0046033d002804e3002a05c70025038d
004c0448002e0961004805110023055e00140458001e07be0027056b002d
05c7000004b800000843002306ac002d072b00120587001709ab0023077b
002d040200090329000005e700120502001c05c70048040000450682003a
04b600390682003a04b6003908c30048070a0045061a002a0487004509b4
0048065600460000fe3709610048051100230556004a038d004602ac001e
0000fea60000febc0000ff860000ff860000fc2b0000fc4c05c700250448
002e0498002403c3002e047300220400fff9050d0025041f001f0402002b
032900180556002503e3001f064900360496000c06ce002304fc002e0842
00250650002e0556004b038d00460556004a038d004604e3003e037f000c
0660003604d3000c0533fffa0406001e0707000a045f000a0707000a045f
000a02aa0033072b00120587001705560025041f002e056d001203fe000c
05c700230448002e05c700230448002e0533fffa0406001e071d00220510
002e044800dc05c70010038d004905c70010038d0049071dffe805560049
04e3002a038d004c05c7002b038d004c072b0012058700170402002b0329
00180402002b038d002105c700250448002e05c700250448002e05c70048
0400004505c70048040000450548003b036f001b05aa001a0400000c05aa
001a0400000c05aa001a0400000c0533fffa0406001e06fa00250560002d
0498004404000044066e0044062a0044066b006605a5005404970066039f
0054074100120604000c07990023064d002e05c7004803a000450591003e
04d0000c0000ff430000fec90000ff770000ffb00000ff470000ff560000
ff740000fed70000feac000000000000ff520000ff56000000000000feac
0000fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000
ff7f0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae
0000ff8c000001020000ff090000ff090000fee20000fee20000ff8f0000
ff210000ff0905c70010038d0049055600220400fffb055600220400fffb
055600220400fffb0556004a038d004605c700230400004405c700230400
004405c700230400004405c700230400004405c700230400004404e3002a
038d004c04e3002a038d004c04e3002a038d004c04e3002a038d004c04e3
002a038d004c0473002102aa004f05c700480400003d05c700230400000d
05c700230400000d05c700230400000d05c700230400000d05c700230400
000d02aa001b0239ffea02aa00330239000205c700220400001105c70022
0400001105c700220400001104e300290239003d04e300290239ffe904e3
00290239ffe704e300290239000f071d002206390011071d002206390011
071d00220639001105c7ffe50400000c05c7ffe50400000c05c7ffe50400
000c05c7ffe50400000c05c700480400004505c700480400004505c70048
0400004505c7004804000045047300220400fff9047300220400fff90556
002302aa000d0556002302aa000d0556002302aa000d0556002302aa000d
04730080031d006404730080031d006404730080031d006404730080031d
006004730080031d006404e3003e0239001404e3003e0239001404e3003e
0239fff504e3003e0239001405c7000b0400000205c7000b0400000205c7
000b0400000205c7000b0400000205c7000b0400000205c7001204000011
05c7001204000011078d001b05c7000d078d001b05c7000d05c7000f0400
001b05c7000f0400001b05c700130400000c04e3001a038d002904e3001a
038d002904e3001a038d00290400000d0239ffff05c7000d0400000c038d
004902390016043100570431005704310057043100570431005704310057
043100570431005705c7001005c700100654000006540000065400000654
00000654000006540000035c0047035c0047035c0047035c0047035c0047
035c004705fc000005fc0000073c0000073c0000073c0000073c0000042f
000b042f000b042f000b042f000b042f000b042f000b042f000b042f000b
06e0000006e0000008200000082000000820000008200000082000000820
000002270025022700250227ffaf0227ffaf0227ffff0227ffff0227ffd3
0227ffd303c3000003c30000050300000503000005030000050300000503
000005030000040000450400004504000045040000450400004504000045
065400000654000007f8000007f80000073000000730000003f6fffa03f6
fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa06e00000
082a0000082a0000082a00000544004b0544004b0544004b0544004b0544
004b0544004b0544004b0544004b067f0000067f000007fb000007fb0000
076f0000076f0000076f0000076f00000431005704310057035c0047035c
0047042f000b042f000b0227002502270025040000450400004503f6fffa
03f6fffa0544004b0544004b043100570431005704310057043100570431
005704310057043100570431005705c7001005c700100654000006540000
06540000065400000654000006540000042f000b042f000b042f000b042f
000b042f000b042f000b042f000b042f000b06e0000006e0000008200000
08200000082000000820000008200000082000000544004b0544004b0544
004b0544004b0544004b0544004b0544004b0544004b067f0000067f0000
07fb000007fb0000076f0000076f0000076f0000076f0000043100570431
0057043100570431005704310057043100570431005705c7001005c70010
05c7001005c7001005c7001002aa00db02aa00d802aa00db02aa001602aa
0016042f000b042f000b042f000b042f000b042f000b05fc000006130000
06e1000006f7000005c7002302aa002702aa002702aa00160227fff10227
ffd10227fff30227fff30227ffd00227ffd002aa003302aa001603c40000
03da000002aa002702aa002702aa001603f6fffa03f6fffa03f6fffa03f6
fffa03fe005903fe005903f6fffa03f6fffa05c7001305c7001307090000
07330000058c000002aaffea02aaffea02aa00760544004b0544004b0544
004b0544004b0544004b06cd0000062f000006e400000632000005f2003c
02aa00ec02aa00db04ef00460556004a0556004a0639001105c7ffe508d0
0023078d001b05c7002204e3003e080000290400003004c100660000ffcb
0000ffcb0000ffb70000ffb70239002d0239ff630400000f047300220400
00440239003d0400000c0289001404ff001e04ed001e02aa009202aa0092
02aa00d102aa00d102aa009702aa007602aa004e02aa004e02aa00150239
00b002aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a
0000ff7b0000ffa00000fee00000ff230000ff7b0000ff7b0000feb20000
ffa00000ffcb0000ffcb0000ffcb047300240400fff90405000505290005
0556004903b8002d03d300450432002d0432002d038e002d032900180239
003c025f00190451002d038f00230510002e0448002e0400004503d3002d
04550045044d00450455002105c7003e037e0045040000450400004503a6
002e03aeffff03aeffff037f000c044c002d040a002d053d002d0409002d
0400001105c7000d038d002903290018032e0045044f000f0348001f0400
00110448002e03a6002e043a000f03fe000c03600000044e00000318001e
0318001e0370001e02f6001e02f6001e0376001e0386001e0199001e01f9
001e03aa001e02f8001e0452001e03b3001e0387001e0358001e02b0001e
02a7001e0347001e02e6001e03a0001e046e00000230001e0230001e0283
001e031f001e027a001e027d001e020d001e020d001e01ef001e01ef001e
0268001e014f001e0286001e03e9001e0241001e024e001e020c001e024e
001e024e001e027d001e0188001e029f001e0272001e03e9001e025a0005
028d00050242001e021f0005022b001e02ad001e02420005014f001e01d6
001e029f001e025a00050242001e021f0005025e001e02ad001e02420005
05ed00460a66004606130046075b00460541ffba01e9003c045a00110000
ff0d0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e
0000feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039a
ffba0327ffba0506005f0486004304f1004e04a2003304a0000f053b0064
04ec0043052c0021048300250000fe4b0000fe4c0000fe4c0400ffee038d
00430355000701a8ffba01a8ffba01a8ffba01a8ffba0658001509c50047
0400000008000000040000000800000002ab000002000000015500000400
000002000000019a000000ab0000000000000556004a071d00220510002e
0616000206310044062e004405c700100556004a0400008104e3002904e3
003e031d0064038d00290445005d000001020000ff420000fea40000ff3a
0000ffcb03fe000a055600470556004a0556004704a000250348001f0000
ff430000ff6b0000ffae027000580000ff39021affba0250001e0000ff3a
0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a05b5
003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba02b3003202b3003202b3005f
02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba045a
002a039a00360435ffba0327ffba045a002a039a00360435ffba0327ffba
045a002a039a00360435ffba0327ffba064f0027064f00270224ffba021a
ffba064f0027064f00270224ffba021affba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba02b4002302b400230327ffba0327ffba02b4002302b40023
0327ffba0327ffba043500450435004501f4ffba01f4ffba043500450435
004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d0047
040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a0692
003e0692003e043fffba043fffba0400ffa80400004402aa001406390011
0400000c0400ffae02aaffbc02aaffbc031d001e0239ffbd038d00290400
003d0296001e03c50041062100140239002c022700250400fff9044c002d
046400190400fffb0400004402aa004f04c6003d040000110239003d0639
00110400000c0400fff902aa000d031d00640365ff30040000110400001b
038d0029038d0049042f004404000044038d004c035c0047035c0040038d
004c0239003c038d00430384000a04000002038d002102830005020c001e
020c001e024d001e01ef001e01ab001e01abffa60221001e0292001e014f
00150175001e0151001e0151001a018b0000014f001e014f001e022a001e
0395001e03e9001e029fffa4029f001e0293001e024e001e0291001e01b3
001e01b9ff920188001e029f001f0289001e029a001e0253001e025a0005
0231001e0231001e026e001e0220001e0228001e0000fe930000fe930000
ff730000febc023900b00230001e020d001e024e001e02520005020d001e
05c7004805c700100473003c0556004a02aa005304310057043100570431
005704310057043100570431005704310057043100570227ffcd0227ffd1
0227ffd10227ffd10227ffcd0227fff10227ffcd0227fff103f6fffa03f6
fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa03f6fffa0227ffd1
0227ffd10227fff10227fff103f6fffa03f6fffa03f6fffa03f6fffa045a
005304ce004a032e00130556002205c7000b05cd001c04e3002a038d004c
031d002a0239ff63059e004a040000440556002302aa000d05c700130400
000c038d0043038d0046038d00430239003d04a000230348001f05c7000f
0400001b05c7000f0400001b0402005503290042056d001203fe000c0000
fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff350000ff7b
0000feb2070e000503550045038d004304e300290239002d04e3000a0473
002205560023038d00490239000e05c700230400000d05c7002204000011
04e3001a038d002903c60041054600230409002e049e00450000ff3b0000
ff510000ff080000fef90000fea40000fea40239003c059d002605c7ffe5
059d00260000fee00000ff590000feeb0000ff0f0000fee60000ff090000
feed0000fef50000ff0e0000feed0000fdcc05c7004804000044078d001b
05c7000d05b500230000fe9205c9004804c6001107fc001b0697000d0239
00b002f300260171005101710051040000990400009902aa00e402aa00e4
02aa00e402aa003c04e30037000000000000007600000076000000760000
00760000013000000228000003f60000062e0000083a00000a6e00000af2
00000b7600000bf800000dd000000ea000000f3e00000f9800000ff00000
10620000119400001278000014480000162600001738000018c400001a3e
00001b3400001d4800001ece00001f5e0000202c0000214a000021ec0000
231c0000248c0000276e000029f600002d1a00002e9400003006000031d8
0000338800003582000037bc000038de00003a3200003da800003ebe0000
411a00004354000044700000466a000047f200004a9200004d8c00004ee2
000050ea0000536c0000574200005b3a00005da000005eea00005f920000
6014000060be000061a6000061e200006238000066320000687600006ad4
00006da6000071860000740a000078a200007bd200007e88000080ca0000
85340000871000008bda00008f42000091ae0000947a000096d400009904
00009dc80000a01e0000a2c20000a5f00000aa520000aeec0000b1aa0000
b3a60000b49a0000b5080000b5fa0000b6b80000b7080000b73a0000b786
0000b7bc0000b7f80000b82e0000b8780000b8ae0000b8ee0000b9360000
b9760000b9a40000b9da0000ba060000ba3a0000ba760000bab80000baee
0000bb280000bb580000bb900000bbc80000bc040000bc3c0000bc6e0000
bcac0000bce80000bd260000bd600000bd960000bddc0000be200000bf7c
0000c0540000c24a0000c4b40000c71c0000c7780000c8140000c9b00000
ccc80000ceca0000d1360000d18e0000d2240000d3880000d5a40000d748
0000d89c0000d99e0000dada0000dc360000de6c0000dfee0000e1160000
e1f00000e2da0000e4040000e4ea0000e6800000e76e0000e9020000ec6c
0000ee8e0000efea0000f0920000f0ea0000f1b00000f3320000f49a0000
f5480000f5e00000f67c0000f77e0000f7ba0000f7f80000f82e0000fa6e
0000fe020000fe3a0000fe720000ff780000ff9e0001004a000100ec0001
01d0000102e20001032c0001035e000103ba0001052000010584000105e4
0001084800010a7000010d0a00010d5a00010d7c00010e90000111680001
11b0000112040001124200011282000112b2000112e60001133a00011380
000113b2000113e60001141e0001145000011480000114c6000114f60001
1664000116e0000117a2000117de0001185a000118b4000119ce00011aa4
00011b4200011bc000011c2a00011da200011fa800011fe6000120240001
205c000120a60001212a00012270000124b4000124e400012526000126a2
00012896000128dc000129fe00012ab600012bd400012cfa00012ef80001
3088000132760001343a00013474000134b0000134e0000135260001357a
000135b6000135f600013632000136660001390a000139480001398c0001
39ca00013a0c00013a3200013a5800013a9000013d3e00013e6800013e90
00013eb600013eee00013f2c00013f5c00013f90000140be000142620001
4296000142cc000143020001434000014382000143be000143f000014436
0001446c000144a2000144e0000145140001455800014594000145ba0001
45de000146220001486e000148b0000148e20001491a0001494c0001497c
000149b2000149f200014a3200014ad400014c9c00014e2400014f340001
50d60001523a000153240001543000015596000156080001563c00015788
00015aaa00015b5600015c1a00015cc800015d8600015ea200015fba0001
611600016172000162ae0001639400016472000164d000016554000165da
0001661c00016658000166a8000166f8000167480001679a000167fa0001
685a000168bc00016922000169ac00016a1400016a7a00016af000016b66
00016bf400016c6a00016cde00016d6a00016de000016e5a00016ee80001
6f6000016fd600017064000170e80001716c0001722a000172b200017342
000173fc0001748a00017514000175d200017662000176ee000177ac0001
78860001796600017a8800017acc00017b0800017b4600017b8a00017bce
00017ff60001878a00018eb800018ef400018f3200018f7800018fc00001
90060001904c00019134000191bc0001928a0001943600019598000197d0
000198be000199e800019ae200019bfa00019c9800019d1c00019dca0001
9e9800019ef200019fa00001a0220001a08e0001a0c20001a24c0001a3a6
0001a41e0001a46c0001a4ec0001a5500001a5d60001a6120001a6440001
a67a0001a6b80001a6fa0001a7280001a76c0001a79a0001a7d40001a802
0001a83a0001a8680001a8b40001a8fc0001a93c0001a96c0001a9920001
a9c80001a9f80001aa2e0001ac1c0001aed00001af000001af4a0001af7c
0001afc20001aff20001b02c0001b0520001b0760001b0b40001b2560001
b28c0001b2bc0001b4de0001b5040001b5540001b57e0001b5ae0001b6f8
0001b89c0001b8d20001b9080001b93c0001b9800001b9a60001b9d60001
ba060001ba380001bb900001bd7c0001bdac0001bde00001be120001be46
0001be760001bea60001becc0001bef20001bf220001bf560001bf860001
bfb60001c0a40001c0e40001c1240001c1540001c1840001c1b40001c1e4
0001c22e0001c25e0001c28e0001c2be0001c2ee0001c3220001c3560001
c38c0001c3c60001c43c0001c4760001c64e0001c71c0001c9260001cba6
0001cdf40001cffa0001d0740001d10e0001d11e0001d2320001d25e0001
d3e00001d5460001d6080001d6420001d7b60001d7f00001d82c0001d83c
0001d84c0001d9640001d9740001d9840001d9940001d9a40001d9b40001
db1e0001db2e0001db3e0001dcc20001dcd20001ddd80001dde80001def0
0001df000001df100001df200001e08e0001e2480001e27c0001e2ae0001
e2de0001e30e0001e33e0001e36c0001e3a20001e53e0001e6340001e7d4
0001e8fa0001ea2c0001eb2a0001ecd80001ee1a0001ef800001f0860001
f2800001f2900001f3ea0001f5380001f6580001f7dc0001f9680001fafa
0001fb320001fb680001fba00001fbd00001fc000001fc340001fda60001
fdd60001fefc0001ff0c0001ff1c0001ff500001ff60000200c6000202a2
0002043000020460000206400002079e000207ae000208d0000208e00002
098200020ab000020ac000020d6800020f040002107c0002125c000213d6
000214c8000214d8000214e8000214f80002150800021518000215280002
1538000216a200021850000218600002199400021ae400021ccc00021ed8
000220140002218c00022284000222be0002242000022450000224600002
25cc000227680002284e000229c4000229d400022c9c00022dfc00022fdc
0002323200023444000235a8000237f00002399c000239ac00023b0e0002
3b1e00023b2e00023c3800023c4800023e6000023e7000023ffc00024174
000243560002456e000246f0000248e800024a2a00024a6400024c1e0002
4dcc00024e12000250220002505000025192000251a2000251b2000251ee
000251fe000253dc000255f20002583a0002586a00025ad600025c760002
5d1400025df200025e3800025ff6000261800002621e0002638000026448
0002656c000265c20002665c000267480002677c00026822000268780002
6970000269c600026a0600026a4800026a8400026ab600026b0000026b48
00026bd000026dc000026e9600026fa40002707a000271a0000272340002
730200027424000275b00002764a00027704000277b8000278ea000279ce
00027b1c00027bca00027ca400027d9400027f4c00028062000281880002
83400002850a0002864a000286f40002891200028a3400028b5000028c76
00028d9c00028df600028ea600028fde0002901000029056000290a40002
90e800029158000292d60002930400029332000293600002938e000293bc
000293ea00029692000296ca0002971800029756000297a2000298020002
990c0002994000029a4200029a7a00029ab400029afa00029b3e00029b82
00029bb000029d4a00029ef200029f3800029f8e00029fc60002a24e0002
a2820002a2b00002a2de0002a30a0002a33c0002a5860002a5b00002a6cc
0002a77e0002a82a0002a8ac0002a9680002aa800002ab8e0002abc20002
ac480002ada40002ae260002ae700002af7a0002afc20002b0c60002b142
0002b19a0002b21c0002b3080002b41e0002b50c0002b5b60002b6b60002
b7960002b8860002b96e0002ba1e0002baa00002bcfe0002bd280002bd52
0002be0a0002be340002bf760002c07c0002c1660002c1900002c1ba0002
c1e40002c20e0002c2380002c3b80002c3e20002c40c0002c4360002c460
0002c48a0002c4b40002c4de0002c5080002c53c0002c5660002c5900002
c5ba0002c7340002c7440002c85e0002c86e0002c8980002c8c20002c8ec
0002c9160002cabe0002ccce0002cdfc0002ce0c0002cf880002cf980002
d0de0002d2aa0002d3b00002d5300002d6d80002d9040002da660002dc50
0002dd940002dec20002dfb00002dfda0002e0040002e02e0002e0580002
e0820002e0ac0002e0d60002e1000002e12a0002e1540002e17e0002e1a8
0002e1d20002e1fc0002e2260002e4620002e5de0002e7220002e90a0002
ea520002ea7c0002eaa60002ead00002eafa0002eb240002eb4e0002eb78
0002eba20002ebcc0002ebf60002ec200002ec4a0002ec740002ec9e0002
ecc80002ecf20002ed1c0002ed460002ef820002f2c80002f2f20002f31c
0002f3460002f3700002f39a0002f3c40002f3ee0002f4180002f4420002
f46c0002f4960002f4c00002f4ea0002f5140002f53e0002f5680002f592
0002f5bc0002f5e60002f6100002f63a0002f6640002f68e0002f6b80002
f6e20002f70c0002f7360002f7600002f7fa0002f8100002f83a0002fb1a
0002fb2a0002fc440002fd660002fea40002ffe60003018c0003019c0003
02de0003042e0003061e000307f20003090a0003091a0003099c00030a2a
00030b2a00030b3a00030bda00030bea00030d0000030e5400030f840003
0f940003106200031072000311e8000311f80003130c0003131c00031450
000315e6000316a2000316b2000317b00003190a00031996000319a60003
1ad000031c5c00031d1800031d2800031dc000031dd000031e9c00031eac
00031f8400031f940003209c000320ac0003227200032282000323da0003
23ea00032654000326640003285e0003286e000329d8000329e800032ad8
00032ae800032c8000032c9000032dae00032dbe00032efe00032f0e0003
2f1e00032f2e000330a6000330b6000330c6000330d60003322800033378
000334460003352a000336aa0003382e0003392e00033a4200033b860003
3b9600033c8400033d5e00033efa00033f0a000340280003412e00034326
000343360003434600034356000344a0000344b000034568000345780003
4686000346960003478200034792000348b0000348c00003495e0003496e
0003497e00034a6c00034be000034d0c00034e0600034e1600034e260003
4e3600034fd40003518e0003525c0003526c000354cc000357160003599c
00035c0400035e8a00036100000362d00003648a000364b4000364de0003
64ee000364fe00036528000365520003657c0003658c0003659c000365c6
000365f000036600000366100003663a000366640003668e0003669e0003
66ae000366be000366ce000366de000366ee000367180003672800036738
000367620003678c000367b6000367e00003680a000368340003685e0003
6888000368b2000368dc00036906000369300003695a00036984000369ae
000369d800036a0200036a2c00036a5600036a8000036aaa00036ad40003
6afe00036b2800036b5200036b7c00036ba600036bd000036bfa00036c24
00036c4e00036c7800036ca200036ccc00036cf600036d2000036d4a0003
6d7400036d9e00036dc800036df200036e1c00036e4600036e7000036e9a
00036ec400036eee00036f1800036f4200036f6c00036f9600036fc00003
6fea00037014000370b4000370f80003716e00037198000371c2000371ec
00037216000372400003726a00037294000372be000372e8000373120003
733c0003736600037390000373ba000373e40003740e0003743800037462
0003748c000374b6000374e00003750a000375340003755e000375920003
75c6000375fa000377a8000379b800037ba800037db600037e4800037ea2
00037f0c00037fa600038036000380a60003817a000382680003833c0003
842c000384c60003859a00038634000386e200038788000387da00038938
00038986000389d400038a2c00038a8400038ad600038b2800038be40003
8ca000038d3600038dcc00038e6200038efe00038f9a0003903600039048
0003905a0003906c0003907e00039090000390ea0003914a000391e60003
91f80003920a0003921a0003922a0003923c0003924e0003926000039272
000392840003929600039332000393c800039464000394fa000396160003
963c0003966200039688000396b2000396ee0003975c000397a40003981a
0003985a000398c600039902000399660003999e00039a0200039a420003
9a9800039ad800039b4400039b8e00039be600039c1e00039c7000039ca8
00039cfc00039d2a00039d5000039d7a00039db400039de400039e140003
9e6a00039ecc00039f3000039f980003a0000003a0600003a0b20003a10a
0003a1640003a1bc0003a1ec0003a22a0003a2500003a2840003a2ae0003
a2d40003a2fa0003a3200003a35c0003a3b40003a4100003a4720003a4c4
0003a5220003a55a0003a5aa0003a5e60003a6360003a6660003a69e0003
a6ce0003a7020003a7280003a74e0003a77e0003a7ae0003a7d40003a7fa
0003a8240003a8500003a8760003a8b20003a8e20003a9120003a9420003
a9720003a9980003a9d40003aa040003aa440003aa6e0003aa9a0003aacc
0003aaf60003ab220003ab500003ab860003abc40003ac0c0003ac4a0003
ac7a0003acca0003ad040003ad460003ad760003adcc0003adf60003aec2
0003aeec0003afac0003afd60003b08c0003b0b60003b17a0003b26e0003
b39c0003b5040003b6340003b7100003b8340003baf00003bde40003bf94
0003c1c60003c3e80003c6d80003c8840003ca800003ca900003cbf40003
ce620003cfe80003d3dc0003d6f20003d8a00003da940003dbfc0003dc0c
0003dd720003dee60003dff60003e1680003e2420003e2b80003e36e0003
e4140003e5840003e5bc0003e6360003e6f80003e7b20003e81a0003e920
0003ea560003eb340003ec920003ed0c0003ed860003ee4e0003ef080003
efbc0003f0180003f0720003f0ba0003f12a0003f1a60003f1f00003f22a
0003f2700003f2b40003f3060003f3580003f3da0003f45c0003f49e0003
f4de0003f5140003f54a0003f5780003f5a60003f5da0003f60e0003f650
0003f6920003f6ce0003f70a0003f7440003f77e0003f7b00003f7e20003
f8140003f8460003f8800003f8ba0003f8fc0003f93e0003f9800003f9c2
0003fa100003fa5e0003faa00003fae20003fb220003fb620003fb9c0003
fbd60003fc220003fc6e0003fcac0003fcec0003fd320003fd780003fdb4
0003fe0a0003fe460003fe820003fec20003ff020003ff3e0003ff7a0003
ffba0003fffa0004003e00040082000400d600040164000401a6000401e8
00040250000402b8000402ea0004031c000403540004038c000404220004
04b8000405020004054c00040588000405c40004061a00040670000406ba
000407040004075c000407b4000407f4000408340004086c000408a40004
08ee0004093800040976000409b4000409f600040a3800040a8c00040ae0
00040b2600040b6c00040bb200040bf800040c4e00040ca400040cfa0004
0d5000040d9c00040de800040e3400040e8000040ef400040f6800040fdc
000410500004108e000410cc0004110a0004114800041186000411c40004
12080004124c00041298000412e40004134400041390000413ce0004141c
0004152c0004157c000415cc000416040004163c00041692000416e80004
175c000417c000041802000418440004189a000418e80004193400041980
000419c000041a0000041a4800041a9000041afc00041b5600041b8e0004
1bc600041c0600041c4600041d1600041e1200041ed200041fc000042016
0004206c000420be0004211200042176000421da00042230000422860004
22fc00042372000423b4000423f6000424380004247a000424bc000424fe
00042554000425aa000425fc00042650000426d80004275a000427fa0004
289c000428da000429180004295600042992000429d000042a0e00042a4c
00042a8800042b6c00042c5800042d6e00042e8a00042f540004301e0004
311800043212000433100004340e0004352c0004364a0004377000043896
0004399800043a9a00043b2c00043bbe00043bfc00043c3a00043c940004
3cee00043d2600043d5e00043e6e00043e7e00043ec600043f0e00043f66
00043fbe00043ff00004402200044064000440a6000440e00004411a0004
415e000441a20004421a000442940004432400044368000443a80004442a
000444ac000446040004461400044662000446b0000446ec000447280004
476e000447b40004480200044850000448a0000448f00004494c000449a8
00044b1e00044c8600044cbe00044cf800044d4400044d9000044de20004
4e3400044e8600044edc00044f1800044f5400044faa00044ffe00045136
000451d600045224000452640004529e000454340004569c000457600004
58f600045a5400045b2200045cc800045f1c000461540004619a000461cc
000462760004639a000463be000464580004656400046674000467840004
689200046a1800046a4a00046aec00046b1400046b7600046bd800046c3a
00046c9c00046cda00046d1800046d5200046d8c00046db800046e040004
6e3e00046e7800046fd40004712800047138000471f60004732c0004738a
000474a200047630000476d60004781c0004785a00047898000478d00004
79280004795400047996000479fa00047a4200047aa400047b0400047b76
00047bf200047c6e00047cf000047d7c00047e0800047e9200047f120004
7f4c00047f88000480ec000481b6000481e6000482160004838400048520
000485300004864c0004875e0004888a0004899e00048ae600048c660004
8c7600048d9a00048ee40004900600049178000492c20004944e00049596
0004971c000498ea00049a5000049b0000049bcc00049e720004a0a80004
a15a0004a3820004a5580004a6a80004a7a80004a7b80004a8dc0004aa0a
0004ab480004acca0004aede0004b08e0004b27e0004b28e0004b39c0004
b5000004b5ea0004b75e0004b8640004b9ba0004bae60004bc060004bd74
0004bebe0004c0160004c1520004c2ac0004c3f40004c5980004c7220004
c8820004ca080004cbd60004ccc80004cd060004cd5c0004ce040004ce14
0004ce660004cebe0004cf1c0004cf400004cf780004cfc80004cff80004
d0320004d0800004d1ac0004d1d60004d2540004d30c0004d3340004d3b4
0004d3ee0004d42a0004d5d20004d8c40004d9020004d9380004d9760004
d9c40004d9ea0004da100004da580004da9c0004dae20004db2a0004dc18
0004dc3c0004dc680004dca00004dcdc0004dd180004de7e0004dfbc0004
dffe0004e03a0004e0740004e0c20004e1060004e13a0004e1840004e1cc
0004e2120004e2460004e27e0004e2b60004e2ee0004e34e0004e3940004
e3dc0004e4100004e44a0004e4900004e4d40004e5120004e5480004e560
0004e5a80004e5dc0004e62c0004e65e0004e6940004e8040004ea160004
eb700004eca60004ecdc0004ed300004ee660004f0460004f1980004f278
0004f39c0004f3d00004f4020004f5e40004f7900004f7ba0004f8300004
f9740004f99c0004fa140004fa480004fa7c0004faa40004fb180004fb50
0004fb8a0004fd320004fe760004ffd40005011a00050252000503ca0005
051800050670000507b00005097800050aea00050c5000050e3400050f54
000510720005120a00051346000514840005165400051850000519860005
1ae800051c9600051d9000051da000051e7000051f8e0005207800052176
00052328000524f6000526c4000528ca00052a0400052b3e00052c900005
2ca000052e7a00052f9600053116000531ea000532be000533c8000534a8
000535ba0005368c000537500005392200053af800053d3e00053e5a0005
3fb2000540ae000542120005432a0005444e0005457c0005467c000547a2
000548d800054aa000054bf600054d1000054e960005502e000551620005
531a000554140005552000055622000556fe00055840000558500005597c
00055b1800055b2800055c6200055e4e00055f08000560a2000561da0005
631e000564f200056774000569cc00056bfe00056dfc00056fe600057228
00057492000575ac000577ba0005782c000579a000057b2600057c360005
7d4200057e6200057fb40005814c0005832a000584940005851000058610
000586a20005872e000587ba0005886000058906000589fc00058af20005
8b0200058b1200058bfc00058cea00058d2000058d7800058dce00058e30
00058e5e00058e9a00058ed800058f5800058fb400059052000590f00005
9174000591f800059290000592be0005935a0005940c00059620000596c8
000598f000059aca00059c0600059c3c00059c8000059cc400059d080005
9d3e00059d7000059db200059e0a00059e4e00059f5400059fcc0005a052
0005a0c20005a1240005a1aa0005a20a0005a2740005a2e80005a3580005
a3b60005a45c0005a4f40005a5600005a5ee0005a6480005a6b60005a760
0005a8060005a89c0005a90c0005a98e0005a9f20005aa9e0005ab5c0005
ac080005ac9a0005acf80005ad640005adba0005ae3c0005aeba0005af40
0005afcc0005b0260005b0920005b1020005b1700005b1e00005b2640005
b2f40005b35a0005b3d40005b4500005b4c80005b56e0005b6060005b696
0005b6f40005b7920005b80e0005b8a00005b9440005b9ee0005ba860005
bae20005bb360005bb9e0005bc440005bcee0005bdb80005be5e0005bec0
0005bf180005bf780005c0060005c08c0005c11a0005c17a0005c1de0005
c2480005c2b00005c3180005c3900005c4180005c4ac0005c5180005c580
0005c5e40005c6900005c7500005c7fe0005c88c0005c8ea0005c9560005
c9c60005ca6a0005cb100005cbd40005cc760005ccda0005cd6a0005cddc
0005ce740005cef20005cf6c0005cfd80005d0660005d0c20005d1200005
d1a60005d2220005d28a0005d2ee0005d3420005d3b00005d4180005d496
0005d50c0005d5860005d6060005d6620005d6c80005d72c0005d7cc0005
d86e0005d92c0005d9dc0005da380005dab00005db0e0005db980005dc30
0005dcbe0005dd240005dd820005de100005de820005df1c0005dfb00005
e0200005e0900005e1080005e1660005e1c60005e2400005e29a0005e2fa
0005e3540005e3b00005e4180005e4760005e4a60005e4ee0005e5620005
e5b60005e62e0005e71c0005e7ac0005e8100005e8440005e8920005e90e
0005e9d80005ea680005eae20005eb680005ebe20005ec580005ec920005
ecd00005ed500005edd00005ee060005eeb20005ef6c0005eff60005f07e
0005f10e0005f13a0005f1c40005f2500005f2bc0005f3de0005f45c0005
f4ee0005f56a0005f5ca0005f6180005f6b80005f7140005f7700005f7d8
0005f8440005f8d00005f8fe0005f92a0005f97e0005fa0c0005fa360005
fa5e0005faae0005fafe0005fbb80005fc040005fc420005fcf20005fd66
0005fdd20005fe400005fe7c0005febc0005ff520005ffde000600d00006
012c0006016e000601c20006023e000602b2000603d2000605280006062e
00060698000606f200060a2000060ac200060b3200060b8a00060cd00006
0e0400060ed600060fc0000611040006120a000613360006149000061660
000617540006180c0006194a00061b3000061b8800061bc400061c100006
1d2600061e4a00061f8e00061fe000062012000621360006229200062496
000625c0000626e2000627a8000628ae000629be00062abe00062bee0006
2c8c00062dcc00062f0200063122000633580006348200063588000636dc
0006382c000639d000063b3a00063cb400063e8600063fa6000640c60006
4200000642c20006446a000645a6000646d8000646e8000646f8000647a4
0006485400064884000648d0000649000006494400064b2600064cc40006
4e6e00064fd60006517600065330000654a0000656140006581c000659fa
00065bb200065d9600066006000662b2000664ac0006667a000668460006
69d600066b3400066c7200066d7e00066e860006700a00067174000672f4
000674aa000676040006775e000679a400067b7000067be400067c180006
7c5200067d6e00067e9600067fd600068050000680980006810e00068184
0006836200068576000687580006899400068aca00068bd200068d6e0006
8f0600069050000691b4000693b8000695a40006977a0006995a00069b0e
00069ce200069e1600069f7a0006a1040006a28a0006a3ea0006a5680006
a70a0006a89c0006a9a00006aa8e0006abfa0006ad360006aeb20006b018
0006b1680006b3040006b4680006b59c0006b5ac0006b5e00006b6060006
b7e60006b9840006bab80006bc0e0006bd8e0006bef00006c04a0006c1c4
0006c3440006c4ac0006c6780006c8620006c8e60006c91a0006c93e0006
c98e0006c9ce0006c9de0006c9ee0006ca300006ca580006ca9a0006cad0
0006cb080006cb440006cb860006cbbc0006cd240006cd340006cd680006
cd9c0006cdd40006ce120006ce4e0006ce8a0006cec60006cf020006cf40
0006cf8a0006cfc20006cffa0006d03e0006d08c0006d0e00006d1240006
d1660006d19e0006d1d60006d20e0006d3140006d3240006d4e80006d6de
0006d8c20006da600006dbd60006dd4a0006ded80006e0620006e1fc0006
e3700006e4be0006e5d20006e7340006e8620006e9180006e9ca0006eaa2
0006eb200006ebce0006ec460006ecb60006edc80006ee2a0006eed80006
efbc0006f0200006f0860006f1340006f30c0006f4080006f4880006f4c2
0006f56e0006f5e60006f6b00006f7380006f79c0006f8920006f94e0006
fa080006fa4a0006fac40006fbd00006fc680006fcb40006fd9a0006fe7a
0006ffde0007016e000702820007039600070490000704b8000704e20007
05160007054a0007057000070596000705be000705e40007065c000706b6
000706ea000707300007075a00070786000707ac000707d8000707fe0007
08280007084e000708760007089e0007090a000709320007098e000709b4
000709dc00070a0a00070a3000070a6400070a9600070aca00070b020007
0b3a00070b6e00070ba200070bd000070bfa00070c2000070c5800070c90
00070cbe00070cf200070d1800070d3e00070d6400070d8a00070db40007
0e1200070e4600070e8400070eb800070ee200070f0800070f3600070f5c
00070f8600070fd40007102e0007105a00071080000710ac000710d20007
110a0007113e00071172000711a6000711cc000711f20007122c00071260
0007128a000712b0000712d6000712fc0007132200071348000713700007
142600071450000714f00007151800071586000715ae0007160c00071640
0007167c000716bc000716f20007172e0007176000071788000717ae0007
17fa0007183c000718540007187a000718ae000718e00007190800071930
00071966000719ca000719f200071a4c00071a9400071ada00071b0e0007
1b5000071b7600071b9c00071bc200071be800071c0e00071c3400071c5c
00071c8600071cac00071cd200071cf800071d1e00071d4600071e0c0007
1e3600071ea000071ed400071f0800071f4000071f7400071fa800071fdc
000720060007202c0007206000072096000720ce0007210e0007214a0007
218e000721e20007222c00072252000722780007229e000722c4000722ea
000723340007236c000723a4000723f20007242e0007246a000724aa0007
24e80007252600072564000725a2000725e0000726220007265600072694
000726ce000727080007274800072788000727bc000727f00007283e0007
287a000728bc000728fe000729360007296e000729b6000729fe00072a56
00072aae00072b1400072b7a00072bb000072be600072c2000072c5a0007
2c9200072cca00072d1000072d5600072db600072e1600072e6e00072ec6
00072f2000072f7a00072fc20007300a000730440007307e000730bc0007
30fa0007313000073166000731a4000731e20007322a00073272000732ba
00073302000733500007339e000733e000073422000734560007348a0007
34c4000734fe0007353800073572000735d2000736320007366c000736a6
000737040007376200073798000737d80007381000073848000738820007
38bc000738f60007393a000739a200073a0e00073a7a00073ac400073af8
00073b2c00073b6600073ba000073be400073c2800073c6000073c980007
3cde00073d2000073d5800073d9000073de000073e3000073e8000073ed0
00073f0600073f4a00073f8400073fc40007400800074040000740780007
40ae000740f2000741360007416c000741b6000742020007423e0007428c
000742de0007432c0007437a000743c80007441600074466000744ba0007
45000007454e0007459a000745e6000746380007468a000746d000074716
0007475e000747a6000747f20007483e00074886000748ce000749240007
497a000749ec00074a5e00074ac800074b3200074b9e00074c0a00074c64
00074cbe00074d0200074d4600074d9200074dde00074e3200074e860007
4ece00074f1600074f6e00074fc20007500c00075056000750c00007512a
00075194000751fe0007523200075266000752ae000752d40007532a0007
535e000753a2000753d60007540a000754480007548e000754b40007552c
0007557c000755f4000756820007578e000757e200075808000758500007
5888000758d000075924000759a0000759f000075a7600075a9c00075b4c
00075bfe00075d1800075d4a00075d7c00075e0000075e6e00075ea00007
5f0a00075f3e00075f7200075fbc00076026000760d400076182000762ac
000762ea000763260007639c000764020007643e00076474000764aa0007
65100007654400076578000765d60007664a000766a80007676e00076834
0007687c000768da000769000007694e00076982000769c600076a140007
6a7000076ac200076b1c00076b4200076b9a00076c1000076e040007705c
000772280007745600077640000776660007799600077be800077d8a0007
7f9c000780da000782f0000783460007839a000784160007847c0007852c
000785dc000787c40007898400078aee00078bb000078ce000078dac0007
8eac00078fc2000790080007904e00079096000790da000791fc0007923a
000792ac00079338000793c40007942c0007945e0007948e000794be0007
94ee0007953a0007956c000795d40007961600079660000796e600079764
000797aa000797ec00079864000798ae00079914000799420007996e0007
997e0007998e00079aa000079c1e00079db800079ede00079f9c0007a042
0007a1140007a1fa0007a2d60007a37e0007a40a0007a5620007a6420007
a6520007a6620007a6720007a7200007a7d60007a8860007a98a0007aae6
0007abb80007ac380007acbc0007ad740007ad840007ae980007af3a0007
b0040007b0b40007b1ba0007b3140007b3240007b3340007b3440007b41e
0007b5080007b5ec0007b5fc0007b60c0007b61c0007b62c0007b78a0007
b79a0007b8e00007bab00007bc0c0007bd820007be7c0007bf860007c092
0007c1b60007c2c00007c3440007c3d00007c51e0007c5b40007c74a0007
c8560007c94c0007ca280007cb580007cc4e0007cdc40007ce660007cf88
0007d1bc0007d2a60007d3940007d47a0007d5f40007d6fc0007d8180007
d9260007da1e0007daf60007dbd20007dd1c0007ddc00007df3c0007e084
0007e17a0007e2700007e3520007e3d80007e4680007e5940007e6140007
e6d60007e78e0007e8ce0007ea260007ead60007ebd00007ec780007edd4
0007eeca0007efd20007f09e0007f18c0007f2460007f39c0007f48c0007
f52a0007f6840007f7740007f8740007f8d20007f9d80007fa6e0007fb30
0007fbd80007fc180007fdb60007fe620007ff1a00080042000801d00008
02dc00080326000804b60008053e0008055000080580000805b0000805e8
000806200008065600080692000806c8000807040008086c000809000008
09e200080a6600080b4e00080bea00080c5c00080d2400080d6600080e96
00080f4600081030000810680008108e000810c8000811c2000812e00008
13e20008142000081446000814a4000814b4000814c4000814d4000814e4
000814f40008150400081514000815240008153400081544000815540008
15540008162800081766000819ac00081adc00081c4c00081de800081fb0
00082134000821440008220c0008232e0008251e0008260c000826d40008
2716000827ce000828940008292c0008298c00082a8e00082b6200082c56
00082d5600082dfa00082e9200082ee800082f3000082f72000830120008
307200083164000831f200083228000832a20008331a0008336a00083476
0008356c00083616000836400008366a00083694000836be000836fe0008
373e00083776000837ae000837f80008384200083882000838c20008390c
0008395600083996000839d600083a3000083a8a00083ac400083afe0008
3b4200083b8600083bca00083c0e00083c6200083cb600083d0200083d4e
00083d8c00083dd000083e2000083e7000083eca00083f2800083f520008
3f7c00084016000840b0000840f4000841380008424e0008425e000842a6
000842ee0008434000084392000843fc000844500008449c000844fa0008
4584000845e80008462c00084676000846de0008472800084768000847b0
000847ec00084828000848640008489e000848e000084922000849620008
49a2000849ec00084a3600084a8c00084ae400084b3200084b8000084bc2
00084c1000084c5200084c9c00084cde00084d2200084d7e00084dda0008
4e2600084e7200084ebc00084f0600084f4400084f82000850000008507e
000850b8000850f20008518c00085226000852fa000853ce0008542a0008
5486000854fa0008556e000856cc000856dc000857c6000857d60008580c
000858420008587c000858b6000858f20008592e00085974000859ba0008
5b2a00085cce00085e220008602e000861aa0008635a0008649a00086598
0008675e00086892000869e000086b7a00086ca400086dc400086fc20008
7066000871080008728200087380000874dc000876060008774400087836
00087a3600087bb400087c5e00087df400087f16000880a4000881880008
8332000884340008855c0008870c000887dc0008891c00088a3c00088b66
00088c8400088dae00088ee000089016000890fa0008922e0008930e0008
94160008951e000896220008972a000898400008997c00089a5800089b0e
00089bd000089d1400089dfa00089ef000089f6400089fea0008a0b00008
a17e0008a2040008a2ae0008a3420008a4ce0008a61a0008a71a0008a81a
0008a9240008aa1c0008ab500008ad440008adee0008aea80008afa60008
b0e00008b19e0008b2540008b37a0008b4160008b4fa0008b6060008b704
0008b78a0008b82a0008b8ca0008b9c80008ba120008badc0008bbbc0008
bcc80008bdc60008bfb00008c0b40008c2a80008c4420008c5e80008c6fc
0008c7720008c7d20008c8320008c8920008c8f20008c9520008c9b20008
ca120008ca720008cad00008cb2e0008cb8c0008cbea0008cc480008cca6
0008cd040008cd620008cdc20008ce220008ce820008cee20008cf420008
cfa20008d0020008d0620008d0ee0008d17a0008d20a0008d29a0008d32a
0008d3ba0008d44c0008d4de0008d6f20008d8a40008d98c0008db0e0008
dc340008dc440008ddee0008df6e0008e0280008e10c0008e2100008e30a
0008e43c0008e5260008e6bc0008e83e0008e90c0008e9460008e9800008
e9900008ea780008eb660008ed120008ee900008f0480008f2000008f210
0008f2e80008f3cc0008f4a40008f4e60008f52a0008f56c0008f5b00008
f6220008f68e0008f7240008f76a0008f7e20008fa7a0008fb420008fb52
0008fc380008fcf60008fdf80008ff1c000900620009024e000903520009
036200090486000906020009076a000907ec00090876000909f800090ab8
00090b6800090c4400090c9200090d4200090d9200090dc200090e060009
0e4800090e7600090f9a000910b2000911d400091240000912ac0009135c
00091432000914aa0009156200091650000916a600091798000918840009
18f60009190600091916000919260009193600091a6600091a7800091b62
00091c3400091e0200091f6600091fd00009201a0009205a0009209a0009
20ea0009213a000921b20009222a000922a2000922fa0009235200010000
0d5700f2003c009d000700020010002f00560000062504eb0005000200>
<0000003a02be0000000300000000006a00000000000300000001001e006a
0000000300000002000e0088000000030000000300720096000000030000
0004001e006a0000000300000005001800d8000000030000000600220108
00000003000000070076012a00000003000000080030000e000000030000
0009008601a0000000030000000d029a02260001000000000000003504c0
0001000000000001000f04f5000100000000000200070504000100000000
00030039050b0001000000000004000f04f50001000000000005000c052c
0001000000000006001105440001000000000007003b0555000100000000
0008001804c7000100000000000900430590000100000000000d014d05d3
0003000104030002000c072000030001040500020010072c000300010406
0002000c073c000300010407000200100748000300010408000200100758
0003000104090000006a00000003000104090001001e006a000300010409
0002000e00880003000104090003007200960003000104090004001e006a
0003000104090005001800d8000300010409000600220108000300010409
00070076012a00030001040900080030000e0003000104090009008601a0
000300010409000d029a022600030001040a0002000c072000030001040b
00020010076800030001040c0002000c072000030001040e0002000c0778
0003000104100002000e0784000300010413000200120792000300010414
0002000c07200003000104150002001007a40003000104160002000c0720
0003000104190002000e07b400030001041b0002001007c200030001041d
0002000c072000030001041f0002000c07200003000104240002000e07d2
00030001042a0002000e07e000030001042d0002000e07ee00030001080a
0002000c07200003000108160002000c0720000300010c0a0002000c0720
000300010c0c0002000c072000a900200032003000310030002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0054
0069006d006500730020004e0065007700200052006f006d0061006e0052
006500670075006c00610072004d006f006e006f0074007900700065003a
00540069006d006500730020004e0065007700200052006f006d0061006e
00200052006500670075006c00610072003a00560065007200730069006f
006e00200035002e0030003700200028004d006900630072006f0073006f
00660074002900540069006d00650073004e006500770052006f006d0061
006e00500053004d005400540069006d006500730020004e006500770020
0052006f006d0061006e0020006900730020006100200074007200610064
0065006d00610072006b0020006f006600200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e002e004d006f006e006f0074007900700065002000540079
00700065002000440072006100770069006e00670020004f006600660069
006300650020002d0020005300740061006e006c006500790020004d006f
007200690073006f006e002c00200056006900630074006f00720020004c
0061007200640065006e0074002000310039003300320059006f00750020
006d0061007900200075007300650020007400680069007300200066006f
006e00740020006100730020007000650072006d00690074007400650064
0020006200790020007400680065002000450055004c004100200066006f
00720020007400680065002000700072006f006400750063007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e007400200069007300200069006e0063006c00750064006500640020
0074006f00200064006900730070006c0061007900200061006e00640020
007000720069006e007400200063006f006e00740065006e0074002e0020
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002ea920
3230313020546865204d6f6e6f7479706520436f72706f726174696f6e2e
20416c6c205269676874732052657365727665642e54696d6573204e6577
20526f6d616e526567756c61724d6f6e6f747970653a54696d6573204e65
7720526f6d616e20526567756c61723a56657273696f6e20352e30372028
4d6963726f736f66742954696d65734e6577526f6d616e50534d5454696d
6573204e657720526f6d616e20697320612074726164656d61726b206f66
20546865204d6f6e6f7479706520436f72706f726174696f6e2e4d6f6e6f
7479706520547970652044726177696e67204f6666696365202d20537461
6e6c6579204d6f7269736f6e2c20566963746f72204c617264656e742031
393332596f75206d617920757365207468697320666f6e74206173207065
726d6974746564206279207468652045554c4120666f7220746865207072
6f6475637420696e207768696368207468697320666f6e7420697320696e
636c7564656420746f20646973706c617920616e64207072696e7420636f
6e74656e742e2020596f75206d6179206f6e6c792028692920656d626564
207468697320666f6e7420696e20636f6e74656e74206173207065726d69
747465642062792074686520656d62656464696e67207265737472696374
696f6e7320696e636c7564656420696e207468697320666f6e743b20616e
6420286969292074656d706f726172696c7920646f776e6c6f6164207468
697320666f6e7420746f2061207072696e746572206f72206f7468657220
6f75747075742064657669636520746f2068656c70207072696e7420636f
6e74656e742e004e006f0072006d0061006c006f00620079010d0065006a
006e00e9006e006f0072006d0061006c005300740061006e006400610072
0064039a03b103bd03bf03bd03b903ba03ac004e006f0072006d00610061
006c0069004e006f0072006d00e1006c004e006f0072006d0061006c0065
005300740061006e00640061006100720064004e006f0072006d0061006c
006e0079041e0431044b0447043d044b0439004e006f0072006d00e1006c
006e0065004e0061007600610064006e006f0074006801b001a10300006e
00670041007200720075006e007400610000b9005403ecb3032a1f3f4115
03e4006003e9009f03e500df03e50004001003e4001003e5003f03e50070
03e400ff03e40005ffc003e1b345453240b803e1b32b2e3240b803e1b228
2932b9ffc003e1b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ff
c003deb2424232b9ffc003deb2363832b9ffc003deb32a2d32df410a03de
00ef03de000203de03df0028001fffc003dfb3282e32f0410d03df000103
7e000f0101001f00a003dd00b003dd0002004003dab32426329fbf03cc00
0103ca03c90064001fffc003c9b20d1132410a03c703b70012001f03b603
b50064001fffc003b5b30e1132004173038d000100c0038d00d0038d00e0
038d00f0038d0004006f03a7007f03a7008f03a700af03a70004000f03a7
001f03a7002f03a7004f03a7000403ab03ab00ef03a50001000f03a5002f
03a5006f03a5008f03a50004005403aa0001006b03aa000103a8036a0022
001f038c03940015001f038b03930015001f03a40393001a001f03a20394
001e001f03a10393001e001f039f0394001e001f039b0394001a001f039a
0393001e001f039903940016001f039803940016001f03970393001b001f
03960394001b001f03950393001b001f03760375001a001f03740375001a
001f03a00373b21e1f10411e039300200393003003930003002003940030
03940040039400030000039400010383036c001e001f03b1036c0032001f
036d036c0032001fffc0037db2212332b9ffc0037db3171932a0410a037d
00b0037d00c0037d00d0037d0004ffc0037cb2212332b9ffc0037cb31719
32a0412d037c00b0037c00c0037c00d0037c000400300373004003730002
000003730010037300200373000300e0037300f00373000200b0037300c0
037300d003730003008403730090037300a0037300030377036a0029001f
0389036ab2281f40b80367b33940323fbb0366000100400366b3191d328f
bb0366000100400366b3090a3240b80366b3090e3240b80366b3090f323f
bb0365000100400365b3090c3240b80365b31a1d3240b80365b3090e326b
410e0363007b036300020014036300240363003403630044036300040363
b2242f1fba034e006d0800400e1f7f027f037f047f050430440112bf0332
00500800001f0012032d003c080040291f5f3c0137600970098009031009
2009300940095009056f037f038f03031f032f033f034f035f0305b8ffc0
b2073a33b8ffc04047063a33900ba00bb00bc00bd00b05b006c006d006e0
06f0060520063006400650066006700680069006a006099006900702600b
700b800b03100b200b300b400b500b051f0701a041850362000100000362
001003620070036200900362000400f0035f00010020035e0020035f0030
035f0040035e00040000035e0000035f0010035f00d0035e00e0035f0005
0010030f0020030f0030030f00d0030f00e0030f00050000030f0010030f
0050030f0060030f0070030f00d0030f00060000030f0010030f0020030f
0030030f00e0030f00f0030f0006030f00270000030e0030030e000200e0
030e00f0030e0002030e004a00e0030d00f0030d0002030d002700d002fc
0001001002fc002002fc005002fc000300d002fc00e002fc0002000002fc
001002fc002002fc003002fc005002fc006002fc000600e002fc00f002fc
0002002002fc003002fc004002fc000302fc406127c02901b02901a02901
902901403c3f413240223f41321212125f235f255f285fa5046f236f256f
286fa5044f234f254f284fa5043f233f253f283fa5042f232f252f282fa5
041f231f251f281fa5048f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0
b3b22b3032b8ffc0b3b2222532b8ffc0b5b2191a32370f413b02af000100
5f02af009f02af00df02af0003001f02af002f02af003f02af006f02af00
0402af02af001f02ad002f02ad003f02ad004f02ad005f02ad000500df02
ad0001000f02ad001f02ad003f02ad005f02ad009f02ad0005005f02ad00
df02ad0002000f02ad001f02ad003f02ad0003004002acb23a334f414a02
ac005f02ac009f02ac0003002f02ac003f02ac0002000f02ac003f02ac00
af02ac000300b002ac00e002ac0002004f02ac005f02ac00a002ac000300
1f02ac002f02ac003f02ac0003000f035a0001000f035a001f035a003f03
5a005f035a0070035a000500cf035700df03570002000f0357001f035700
70035700af03570004035a035a0357035702ad02ad02ac02ac032c400d31
151f001616000000121108104110020c004a000d01a8004a000d0198004a
000d0189004a000d013f004a000d0124400e4a0df64a0dbe4a0d864a0d27
4a0dbe02280041000d01940041000d0121400b410db4410d4f410d29410d
411002170021000d02150021000d02060021000d01eb0021000d014e0021
000d012c4014210df9210df3210df1210d9d210d71210d3d210d4110021c
001f000d0214001f000d020b001f000d0196001f000d014a001f000d0126
400b1f0dc61f0d571f0d371f0d410d019e0141000d00420141000d001e01
41000d001b0141000d01f2b40f440f0009bb01f20044000d0201b23c291f
b80200b23c291fb801ffb23c411fb801feb23c471fb801fdb23c9e1fb801
fab23c931fbc01f9010f0101001f01f6b224e41f411501f401490401001f
01f301490401001f01f1014900ab001f01f001490067001f01a6003c0125
001f01a4b23c811f411501a3010f019a001f01a200220801001f01a10050
0401001f019f0149019a001f019d01490067001f019cb22c621fb8019bb2
2c791fbc019a002c0101001f0197b22ce41fb80193b22c891fb80192b22c
6c1fb8018fb2259e1fb8016ab23c2a1f4111016700240201001f01630025
02ab001f014c010f019a001f01480149006c001f0147b22c891fb80145b2
2c9e1fb80144b22c791fb80143b223311fb80127b23c811fbc0123005001
01001f011fb223e41f4115011d0023019a001f011c00230801001f011b00
250801001f010e010f0401001f010d00220401001f0108b223811fb80106
b425e41ff73cbb0125001f00f5010fb29e1fe3bc01490156001f00e20149
b2ab1fd1b901490401b21fcf2cb80125b61fce23bb1fc524b80156b21fc0
2cb80801b21fbf2cb80201b51fb124e41fb0b901490201b61faf2c671fad
23b80801b21fa523b80201400b1f9f3c2d1f9b235a1f9925b80201b21f81
2cbc0401001f006d010f0156400b1f592c3e1f4c3cab1f4625b80101b21f
403cb80125400a1f3a23721f393cab1f38b80149b3ab1f3124b80401b21f
3025b802abb61f2a24e41f2623b80156b21f5537ba023500070175402c07
74076207560751073b0733072d0720071d071c071408120810080e080c08
0a080808060804080208000814b8ffe0402b000001001406100000010006
04000001000410000001001002000001000200000001000002010802004a
00b013034b024b534201b0124b004b5442b0372b4bb807ff52b0382b4bb0
08505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb0
124358b90001012f858d1bb90001017c858d5959014bb0c063004b6220b0
f65323b8010a515ab0052342180016763f183f123e113946443e11394644
3e113946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b
2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b032
4b5358b0ff1d594bb04753205c58b90271026f4544b90270026f45445958
b9017a0271455258b90271017a4459594bb04753205c58b9002202704544
b9003c027045445958b901b30022455258b9002201b34459594bb04c5320
5c58b9014900224544b1222245445958b901c20149455258b9014901c244
59594bb06753205c58b9002402714544b90050027145445958b9021e0024
455258b90024021e4459594bb8020153205c58b9010f00224544b1222245
445958b90c00010f455258b9010f0c004459594bb01c53205c58b1252545
44b12c2545445958b13725455258b125374459594bb0ab53205c58b12525
4544b1232545445958b901590025455258b9002501594459594bb8010153
205c58b125254544b1282545445958b902080025455258b9002502084459
592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b01b361dc6463456523456023456560234560b08b766818b0806220
20b164dc4565234520b003266062636820b003266165b0dc236544b06423
4420b161634565234520b003266062636820b003266165b063236544b061
2344b10063455458b163406544b26140614523614459b3a67f434b456523
456023456560234560b089766818b080622020b1437f4565234520b00326
6062636820b003266165b07f236544b043234420b1a64b4565234520b003
266062636820b003266165b04b236544b0a62344b1004b455458b14b4065
44b2a640a645236144594b5242014b5058b108004259435c58b108004259
b3020b0a124358601b2159421610703eb0124358b93b21187e1bba040001
a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b
2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0
102342b0112342002b001845694445694445694445694473737374737373
7475752b7373747475184569447373742b4bb021534bb046515a58b03cb0
3c45b040604459012b2b2b2b757575757575757543584010bf3ccf3c026f
3c7f3c8f3c9f3caf3c0575755943584012bf22cf22025f226f227f228f22
9f22af2206757559435c58b6403c9f22ef220375592b2b01747474744544
737374747575454473454473744544737475737373737300757575737575
752b2b757575752b752b435841220063032d00010003032d0013032d0023
032d0033032d0053032d000500c3032d00d3032d00e3032d00f3032d0004
0083032d0093032d00a3032d00b3032d0004032d032d4518694474747575
592b4358b900180332b330353238b80332b361663238b80332b3535a3238
b80332b3454e3238b80332b33c413218b80332b23f330a410f0332000100
ba033200ca033200da033200ea033200fa03320005033203324518694474
752b2b2b2b2b2b597300732b012b7575002b2b2b74002b2b2b732b74012b
002b2b017373737474732b2b00732b2b002b2b2b017374732b012b2b012b
2b2b2b2b2b2b2b2b2b2b2b2b2b0001737500737300456944007373017374
2b2b2b2b2b732b00732b752b2b732b2b2b2b2b2b2b2b2b73742b2b000000
00>
[15785 11565 15133 15893 15981 14937 16337 15645 16353 14921 16353 16373 16237
16209 16373 15753 16373 16249 16273 16177 15933 15953 16221 16017 15885 15209
16261 15725 15813 16357 16209 16073 16169 16181 15929 16321 16045 11683 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 2802 11 <00010054fe4a027c058e0013003a40239611a71102860c8911020a980911
009801130100000a09a80e22500601068014545e182b10f65dedfd3c3c10
3c003fed3fed3130005d015d01152627260235100037150606021514171e
02027c9765909c0132f67b9e4e211a4a7dfe6f254c6691018ad4013601ff
6e2a44ecfe96c5d6af8aa79a>TimesNewRomanPSMT AddT42Char 
2 2934 12 <0001002efe4a0256058e00130039402429042a08480503009801110a9809
13000101090aa80e222006300640060306801558a4182b10f65dedfd3c3c
103c003fed3fed3130015d13351617161215100007353636123534272e02
2e98658f9cfecff77b9f4d21194b7c05642a4b6692fe77d5fecafe016e25
45eb016bc5d5b08aa69a>TimesNewRomanPSMT AddT42Char 
3 9360 68 <00020049ffed038903af0032003d0349b1020243545840203f400d0d0255
3f4013130255151b072e25080b0b0255250c0d0d025525000c33b8fff040
0b1212025533161313025533b8ffdeb41010025533b8fff440150f0f0255
330c0d0d02553339070c0d0d0255072d2eb8ffc04020091202552e33001e
04292c30340c40090b02550c401d1d02550c40111202550cb8ffd4401e09
1202550c0c047f180118401112025518401d1d02551810251e073c2c0400
2fed3fedc42b2b5d12392f2b2b2b2bcd2ffd11123939d42bcd012f2bcd2f
2b2b2b2b2bc0c0dd2b2bc410d4cd31302b2b1b406f0b1c8a330212533601
12201f39803fa809b60a03122b127d007d3386008b0b8b35061d12163a10
3f803f04091c4c054c06452045224c3a403f891d080a0e0720002249014b
0a490b49354b37433a493d570b670b8509840a840b0f54168316021f3f5f
3f0260083300343c2e292d34bb011b000c000cffc0b609390c280b390cb8
ffc0401a3a35100c500c02400c500c600c03200c500c600c760c040c3c18
b8ffd840290b394f185f186f18032f187f1802187e1f100110251e07303c
403c023c2c04702d802d022d35292c30b803464011040b2ec02d012d6025
00330d0c0c343433b8fffcb41010065533bb016700240025ffc0401a0e39
00251f2580259025044025f0250280250125101010065525bb0243000700
15ffc0b21f3915b80167401e1b2f393107400e3920075007800703100701
f0070150070107433e436e182b4e10f45d7172722b4dedf4ed2b10fd2b5d
71722b3cfd2b3c103c103c103c10f65d3c003ff4fde45d10ed713fed72fd
5d712b11395d71722b2b2b2fb10602435458b2030c01005d59ed11123911
123939313043794047353b1c23051337383638020609080a080206212220
220206350b392000111d131c0012130f1f0d1c0122233b05391c00380834
200135340b121c101c010e22101c013a063c1c002b2b2b3c103c2b012b10
3c2b103c2b2b2a2a2a818181017201710071017172005d4358b23f12015d
59015d2b0072435c58b431400e392eb8ffe0b210392eb8ffe0b60e393720
0e3920b8ffe8b20c3920b8ffe0400b0b3918200b3917200b391cb8fff040
1a0b390a280b3937280b390a280a3937280a390a28093937280939002b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b59005d5925060706232226353437363637
353426232207061517140623222635343633321716171615111416163332
3736371506232226271106070606151416333202478d24363d5f7b1e29cb
ec57533f2526022f26252fb09f7a4e3b1c120a170f100c153c7066313a01
972c4f4456384c846d1119826a433144785624896622222c3a2e32342d56
90291f422b85fec9833b14070d3c38964493015d3c192c6039485f00>TimesNewRomanPSMT AddT42Char 
3 10378 69 <0002fffbffe403b9058e0016002401d2b10202435458b11e05b8fff44010
1010025505140c00180a0d0d0255180cb8ffe6b4131302550cb8fffcb40d
0d02550cb8fffcb40f0f02550cb8fff4400d101002550c0c181700040209
13b803e240111440090d02551415001b25090b21590207003fed3fed3fdd
2bed11121739012f2b2b2b2bdd2bc010c62f2bcd31301bb1060243545840
2618170003020913141500215902071b25090b1e0505262500180c0d0d06
55180210100655180cb8fff8b40d0d06550cb8ffeeb7101006550c0c2625
1112392f2b2bdd2b2bc01112392fcd003fed3fed3fddcd1112173931301b
4079102601a406b606b507ea1f040526430d5d3620267503760486038704
a603ab08074707013a0814270d41131e144418170c00041b160010210121
5902071b25090b1e311f0590050260058005af050305eb0c16000018240c
0c100d500d700d900d04800d900db00d03000d100d200d300db00dc00dd0
0d070db8ffc0b73c350d6025c24b182b4e10f42b5d71723c4d10fd3c103c
10fd5d72ed003fed3fed723f111739f5edfc01f53130437940281920030b
072620031e20011a0a181c0019180b0c1c081e20011f04212001190b1b1c
001d061b2000002b2b2b012b103c103c2b2b2b81810071015d2b005d0172
595901363332161514070623222627113426262322072725331111161633
323635342623220706013b859a8dd2a28bab50a5560f20181c2a0e01132d
336d395b9d9d6435352802f6b9f1d1f495803a3a03b59c481a102370fd28
fddc3233c8bfb0bd1b14>TimesNewRomanPSMT AddT42Char 
2 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>TimesNewRomanPSMT AddT42Char 
TimesNewRomanPSMT /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/a 68 def
/b 69 def
end
TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 97 /a put
dup 98 /b put
pop
end
%ADOEndSubsetFont
/GFQXFX+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/GFQXFX+TimesNewRomanPSMT*1 
[40{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /b 157{/.notdef}rp]
GFQXFX+TimesNewRomanPSMT nf
GFQXFX+TimesNewRomanPSMT*1 [15.9998 0 0 -15.9998 0 0 ]msf
129.66 198.74 mo
(\()sh
134.99 198.74 mo
(a)sh
142.09 198.74 mo
(\))sh
132.12 465.483 mo
(\()sh
137.45 465.483 mo
(b)sh
145.45 465.483 mo
(\))sh
/GFQXFX+TimesNewRomanPSMT*1 uf
/GFQXFX+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
gsave
2.92992 404.51 mo
281.33 404.51 li
281.33 271.28 li
2.92992 271.28 li
cp
eclp
2.32991 405.11 mo
281.93 405.11 li
281.93 270.68 li
2.32991 270.68 li
cp
/1 
[/DeviceCMYK] /CSA add_res
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/0 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [365.97 114.97 365.97 249.4 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~#SS*V#SS*V#SS'U#SS'U#SS'U#SS'U#SS'U#SS'U#SS'U#SS$T#SIsS#SIsS#SIsS#SIsS#SIsS#SIsS
#SIpR#SIpR#SIpR#SIpR#SIpR#SIpR#S@jQ#S@jQ#8%^O#8%^O#8%^O#8%^O#8%^O#8%^O#8%[N#7qUM
#7qUM#7qUM#7qUM#7qUM#7qRL#7qRL#7qRL#7qRL"qMCJ"qMCJ"qM@I"qM@I"qM@I"qM@I"qM@I"qM@I
"qM@I"qD7G"qD7G"qD7G"qD7G"qD7G"qD7G"qD4F"V)+E"V)+E"Uu%D"Uu%D"Uu%D"Uu"C"Uu"C"Uu"C
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/0 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tG;"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1
~>
<~&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eP]f&J5Te&J5Te&J5Te&J5Te&J5Te
&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Qc&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.f?_
%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0\%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY
%LrsY%LrsY%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
<~)&X;0)&X;0)&O2-(`4),(`4),(`4),(`4),(`4),(`4),(`*u)(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl(
(Ddi&()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@W"'bqGu'bqGu'bqGu'bqGu'bqGu'bqDs'GM5q
'GM5q'GM5q'GM5q'GM5q'GM5p',)#m',)#m',)#m',)#m',)#m',)#l&eYfi&eYfi&eYfi&eYfi&eYfi
&eYfi&eYfi&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa%hB0]%hB0]
~>
0 ]
>>
365.97 114.97 365.97 249.4 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
.25 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
2.92992 404.51 mo
281.33 404.51 li
281.33 271.28 li
2.92992 271.28 li
cp
.684749 .498451 .383001 .113313 cmyk
@
6.34991 394.4 mo
197.73 394.4 li
197.73 281.01 li
6.34991 281.01 li
cp
.189731 .0212711 0 0 cmyk
ef
6.34991 394.4 mo
197.73 394.4 li
197.73 281.01 li
6.34991 281.01 li
cp
.684749 .498451 .383001 .113313 cmyk
@
gsave
175.83 34.4096 mo
264.575 34.4096 li
264.575 4.20056 li
175.83 4.20056 li
cp
eclp
175.23 35.0096 mo
265.175 35.0096 li
265.175 3.60059 li
175.23 3.60059 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/1 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [444.04 485.07 444.04 516.48 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&e5`Y&e5]X&IoTW&IoTW&IoTW&IfNV&IfNV&IfNV&IfNV&IfNV&IfKU&IfKU&IfKU&IfKU&IfKU&IfKU
&IfKU&IfKU&.K?S&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B6Q&.B6Q&.B6Q&.B6Q&.B6Q
%gs'O%gs'O%gs'O%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%LWmL%LNgK%LNgK
%LNgK%LNgK%LNgK%LNgK%LNgK%LNgK%LNdJ%LNdJ%LNdJ%13[I%13[I%1*UH%1*UH%1*UH%1*RG%1*RG
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /1 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/1 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&J5Te&J5Te&J,Kb&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa
&.fBa&.fBa&.f?_%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0\%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1EXR$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k*OQ$k*LO$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M
$O[=L$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A
~>
<~(Ddl((D[c%()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()7Q!'bqGu'bqGu'bqGu'bqGu'bqGu
'bqGu'bqGu'bqDs'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM2o',)#m',)#m',)#m',)#m
',)#m',)#m',)#m',)#l&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfh&J5Te&J5Te
&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa%hB0]
~>
0 ]
>>
444.04 485.07 444.04 516.48 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/1 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
175.83 34.4096 mo
264.575 34.4096 li
264.575 4.20056 li
175.83 4.20056 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+CALIBRI
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dcd7e8000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c796637371649000085000000267668656164ecde32e000000f640000
0036686865610dad06da00000f9c00000024686d74788adc0f3b00000fc0
0000257e6c6f636175d56e970000354000001e4e6d617870213124a10000
5390000000206e616d6519aa717b000053b000000d3e707265706baf02fe
000060f000002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
20100600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005b852b67baf535f0f3cf500190800
00000000bbeb7ccc00000000cbdab383fbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000399040e0000000000000000000001cf000004a1
002300000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000045a00ac044400610000
00000000000000000000000000000000000004ec00ac0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000050c005b0000000000000000
0000000000000000000000000000000000000000020400ac000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac00000000000000000000000000000000000000000000000003ad
0047000000000000000000000000000000000000000003e6000f00000000
0000000000000000052200aa000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000043400990362005a000000000000
000000000000000000000000000000000000000000000000000000000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000002710025
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000003c400350000000000000000000000000000000000000000
0000000000000000000000000000000004340099000000000000000001d6
008500000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000001d6009900000000000000000000000000000000
000000000664009904340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000043400990000
00000000000002ca00990000000000000000000000000321005100000000
000000000000000000000000000000000000000000000000000000000000
000002ae0021000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000004340094000000000000
000000000000000000000000000000000000000000000000000000000000
00000000039d002200000000000000000000000000000000000000000000
0000039f0022000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000031700010000000000000000000000000000000000000000
027300450000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000a100a100a100a1012f012f012f012f
012f012f012f012f012f012f012f012f012f01e502620262026202620262
026202cf02cf02cf02cf02cf02cf02cf02cf02cf02cf02cf02cf02cf02cf
02cf0376037603760376037603760376037603c103c103c103c103c103c1
03c103c103c103c103c103c103c103c103c103c103c103c103c103c103c1
046e046e046e046e046e046e046e046e046e046e046e046e046e046e046e
046e046e046e046e04e704e704e704e704e704e704e705b905b905b905b9
05b905b9062006200620062006ab06ab06ab06ab06ab06ab06ab06ab06ab
06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab
06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab
06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab
06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab
06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab
06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab
06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab
06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab
06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab
06ab06ab06ab06ab06ab06ab06ab06ab06ab06ab075a075a075a075a075a
075a075a075a075a075a075a075a075a07f3087f087f087f087f087f087f
087f087f087f087f091609160916091609b709b709b709b709b709b709b7
09b709b709b70a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a
0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a
0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0a3a0b270b27
0b270b270b270b270b270b270b270b270bab0bab0bab0c240c240c240c24
0c240c240c240c240c240c240c240c240c240c240c240c240c240c240c67
0c670c670c670c670c670d480dd90dd90dd90dd90dd90dd90dd90e670e67
0e670e670e670e670e670e670e670e670e670e670efe0efe0efe0f770f77
0f770f77103d103d103d103d103d103d103d103d103d103d10b910b910b9
10b910b910b910b910b910b910b910b910b910b910b910b910b910b910b9
10b910b910b910b910b910b910b910b910b9114911491149114911491149
114911491149114911491200120012001200120012001200126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
126512651265126512651265126512651265126512651265126512651265
12651265126512651265126512651265126512aa12aa12aa12aa12aa12aa
12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa
12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12d212d2
12d212d212d212d212f512f512f512f512f512f512f512f512f512f512f5
12f512f512f512f512f512f512f512f512f512f512f512f512f512f512f5
12f512f512f512f512f512f512f512f512f512f512f5133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
133b133b133b133b133b133b133b133b133b133b133b133b133b133b133b
0000000100000f26006000050000000000020010002f0065000011902410
000000000000002d02220000000300000000006400000000000300000001
000e00640000000300000002000e03040000000300000003002403120000
000300000004000e00640000000300000005001803360000000300000006
000e006400000003000000070076034e0000000300000008002a000e0000
000300000009002003c4000000030000000a02a00064000000030000000b
005603e4000000030000000c002a043a000000030000000d029804640000
00030000000e006c06fc0001000000000000003207680001000000000001
0007079a0001000000000002000708ea0001000000000003001208f10001
0000000000040007079a0001000000000005000c09030001000000000006
0007079a0001000000000007003b090f00010000000000080015076f0001
0000000000090010094a000100000000000a0150079a000100000000000b
002b095a000100000000000c00150985000100000000000d014c099a0001
00000000000e00360ae60003000104090000006400000003000104090001
000e00640003000104090002000e03040003000104090003002403120003
000104090004000e00640003000104090005001803360003000104090006
000e006400030001040900070076034e0003000104090008002a000e0003
000104090009002003c4000300010409000a02a00064000300010409000b
005603e4000300010409000c002a043a000300010409000d029804640003
00010409000e006c06fc00a9002000320030003100320020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e002e00200041006c006c0020005200690067006800740073
002000520065007300650072007600650064002e00430061006c00690062
00720069002000690073002000610020006d006f006400650072006e0020
00730061006e0073002000730065007200690066002000660061006d0069
006c00790020007700690074006800200073007500620074006c00650020
0072006f0075006e00640069006e006700730020006f006e002000730074
0065006d007300200061006e006400200063006f0072006e006500720073
002e00200049007400200066006500610074007500720065007300200072
00650061006c0020006900740061006c006900630073002c00200073006d
0061006c006c00200063006100700073002c00200061006e00640020006d
0075006c007400690070006c00650020006e0075006d006500720061006c
00200073006500740073002e0020004900740073002000700072006f0070
006f007200740069006f006e007300200061006c006c006f007700200068
00690067006800200069006d007000610063007400200069006e00200074
0069006700680074006c007900200073006500740020006c0069006e0065
00730020006f0066002000620069006700200061006e006400200073006d
0061006c006c0020007400650078007400200061006c0069006b0065002e
002000430061006c0069006200720069002700730020006d0061006e0079
002000630075007200760065007300200061006e00640020007400680065
0020006e0065007700200072006100730074006500720069007300650072
0020007400650061006d00200075007000200069006e0020006200690067
006700650072002000730069007a0065007300200074006f002000720065
007600650061006c002000610020007700610072006d00200061006e0064
00200073006f006600740020006300680061007200610063007400650072
002e0052006500670075006c00610072004d006900630072006f0073006f
00660074003a002000430061006c00690062007200690056006500720073
0069006f006e00200035002e0037003200430061006c0069006200720069
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200074006800650020004d006900630072006f0073006f
00660074002000670072006f007500700020006f006600200063006f006d
00700061006e006900650073002e004c0075006300280061007300290020
00640065002000470072006f006f00740068007400740070003a002f002f
007700770077002e006d006900630072006f0073006f00660074002e0063
006f006d002f007400790070006f006700720061007000680079002f0063
00740066006f006e007400730068007400740070003a002f002f0066006f
006e007400660061006200720069006b002e0063006f006d0059006f0075
0020006d0061007900200075007300650020007400680069007300200066
006f006e00740020006100730020007000650072006d0069007400740065
00640020006200790020007400680065002000450055004c004100200066
006f00720020007400680065002000700072006f00640075006300740020
0069006e0020007700680069006300680020007400680069007300200066
006f006e007400200069007300200069006e0063006c0075006400650064
00200074006f00200064006900730070006c0061007900200061006e0064
0020007000720069006e007400200063006f006e00740065006e0074002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002e0068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f0066006f006e00740073002f0064006500660061
0075006c0074002e0061007300700078a92032303132204d6963726f736f
667420436f72706f726174696f6e2e20416c6c2052696768747320526573
65727665642e43616c696272692069732061206d6f6465726e2073616e73
2073657269662066616d696c79207769746820737562746c6520726f756e
64696e6773206f6e207374656d7320616e6420636f726e6572732e204974
206665617475726573207265616c206974616c6963732c20736d616c6c20
636170732c20616e64206d756c7469706c65206e756d6572616c20736574
732e204974732070726f706f7274696f6e7320616c6c6f77206869676820
696d7061637420696e2074696768746c7920736574206c696e6573206f66
2062696720616e6420736d616c6c207465787420616c696b652e2043616c
696272692773206d616e792063757276657320616e6420746865206e6577
2072617374657269736572207465616d20757020696e2062696767657220
73697a657320746f2072657665616c2061207761726d20616e6420736f66
74206368617261637465722e526567756c61724d6963726f736f66743a20
43616c6962726956657273696f6e20352e373243616c6962726920697320
612074726164656d61726b206f6620746865204d6963726f736f66742067
726f7570206f6620636f6d70616e6965732e4c7563286173292064652047
726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f74
79706f6772617068792f6374666f6e7473687474703a2f2f666f6e746661
6272696b2e636f6d596f75206d617920757365207468697320666f6e7420
6173207065726d6974746564206279207468652045554c4120666f722074
68652070726f6475637420696e207768696368207468697320666f6e7420
697320696e636c7564656420746f20646973706c617920616e6420707269
6e7420636f6e74656e742e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e687474703a2f2f7777772e6d6963726f736f6674
2e636f6d2f7479706f6772617068792f666f6e74732f64656661756c742e
61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[9847 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> PBAAAA+CALIBRI AddT42Char 
2 1922 68 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>PBAAAA+CALIBRI AddT42Char 
2 3414 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>PBAAAA+CALIBRI AddT42Char 
2 4652 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>PBAAAA+CALIBRI AddT42Char 
2 5974 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>PBAAAA+CALIBRI AddT42Char 
2 6350 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>PBAAAA+CALIBRI AddT42Char 
2 6800 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>PBAAAA+CALIBRI AddT42Char 
2 7090 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>PBAAAA+CALIBRI AddT42Char 
2 7676 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>PBAAAA+CALIBRI AddT42Char 
2 9216 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>PBAAAA+CALIBRI AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/space 3 def
/M 68 def
/a 258 def
/e 286 def
/i 349 def
/m 373 def
/n 374 def
/o 381 def
/r 396 def
/y 455 def
end
PBAAAA+CALIBRI /Encoding get
dup 32 /space put
dup 77 /M put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/GFQXFY+CALIBRI /PBAAAA+CALIBRI findfont ct_VMDictPut
/GFQXFY+CALIBRI*1 
[32{/.notdef}rp /space 44{/.notdef}rp /M 19{/.notdef}rp /a 3{/.notdef}rp /e 
3{/.notdef}rp /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp /r 
6{/.notdef}rp /y 134{/.notdef}rp]
GFQXFY+CALIBRI nf
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
180.03 23.4996 mo
(M)sh
191.999 23.4996 mo
(a)sh
198.705 23.4996 mo
(i)sh
201.918 23.4996 mo
(n)sh
209.274 23.4996 mo
( )sh
212.439 23.4996 mo
(m)sh
223.622 23.4996 mo
(e)sh
230.588 23.4996 mo
(m)sh
241.772 23.4996 mo
(o)sh
249.155 23.4996 mo
(r)sh
254.036 23.4996 mo
(y)sh
gsave
48.9499 34.6596 mo
139.659 34.6596 li
139.659 3.49658 li
48.9499 3.49658 li
cp
eclp
48.3499 35.2596 mo
140.259 35.2596 li
140.259 2.89661 li
48.3499 2.89661 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/2 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [318.15 484.82 318.15 517.18 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&e5`Y&e5]X&IoTW&IoTW&IoTW&IfNV&IfNV&IfNV&IfNV&IfNV&IfKU&IfKU&IfKU&IfKU&IfKU&IfKU
&IfKU&IfKU&.K?S&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B6Q&.B6Q&.B6Q&.B6Q&.B6Q
%gs'O%gs'O%gs'O%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%LWmL%LNgK%LNgK
%LNgK%LNgK%LNgK%LNgK%LNgK%LNgK%LNdJ%LNdJ%LNdJ%13[I%13[I%1*UH%1*UH%1*UH%1*RG%1*RG
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/2 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&J5Te&J5Te&J,Kb&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa
&.fBa&.fBa&.f?_%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0\%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1EXR$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k*OQ$k*LO$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M
$O[=L$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A
~>
<~(Ddl((D[c%()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()7Q!'bqGu'bqGu'bqGu'bqGu'bqGu
'bqGu'bqGu'bqDs'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM2o',)#m',)#m',)#m',)#m
',)#m',)#m',)#m',)#l&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfh&J5Te&J5Te
&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa%hB0]
~>
0 ]
>>
318.15 484.82 318.15 517.18 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
48.9499 34.6596 mo
139.659 34.6596 li
139.659 3.49658 li
48.9499 3.49658 li
cp
.684749 .498451 .383001 .113313 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 970 18 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>PBAAAA+CALIBRI AddT42Char 
2 2268 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>PBAAAA+CALIBRI AddT42Char 
2 3136 104 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c0800>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/C 18 def
/P 87 def
/U 104 def
end
PBAAAA+CALIBRI /Encoding get
dup 67 /C put
dup 80 /P put
dup 85 /U put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFY+CALIBRI*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 9{/.notdef}rp /M 2{/.notdef}rp /P 
4{/.notdef}rp /U 11{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 
3{/.notdef}rp /m /n /o 2{/.notdef}rp /r 6{/.notdef}rp /y 
134{/.notdef}rp]
GFQXFY+CALIBRI nf
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
82.4699 23.2796 mo
(C)sh
89.9349 23.2796 mo
(P)sh
97.1673 23.2796 mo
(U)sh
gsave
19.0299 181.81 mo
169.24 181.81 li
169.24 71.9796 li
19.0299 71.9796 li
cp
eclp
18.4299 182.41 mo
169.84 182.41 li
169.84 71.3796 li
18.4299 71.3796 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/3 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [317.98 337.67 317.98 448.7 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*"W__*"W__*"NY^)\3P])\3P])\3M\)\3M\)\3M\)\3M\)\3M\)\3M\)\3M\)\3M\)@mD[)@mD[)@mD[
)@d>Z)@d;Y)@d;Y)@d;Y)@d;Y)@d;Y)%I2X)%I2X)%I2X)%I2X)%I2X)%I2X)%I2X)%I2X(_.&V(_.&V
(_$uU(_$uU(_$uU(_$uU(_$uU(_$uU(_$uU(C^lT(C^lT(C^lT(C^iS(C^iS(C^iS(C^iS(C^iS(CUcR
((:ZQ((:ZQ((:ZQ((:ZQ((:ZQ((:ZQ((:ZQ((:WP'atNO'atNO'atNO'atNO'atNO'atNO'akHN'akHN
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /3 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/3 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)]K_8)]K_8)]K_8)]BV5)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)AsD1)&X;0)&X;0
)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X8.(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4&*(Ddl(
(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl'()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$
()@Z$'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q
~>
<~%hB0]%hB0]%h9'Z%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY
%LrpW%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
%1NaT$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OP
$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$47+I
~>
<~&J5Te&J5Te&J5Te&J5Te&J5Te&J,Kb&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa
&.fBa&.f?_%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB-[%LrsY
%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU%1NaU%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
0 ]
>>
317.98 337.67 317.98 448.7 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/3 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
19.0299 181.81 mo
169.24 181.81 li
169.24 71.9796 li
19.0299 71.9796 li
cp
.684749 .498451 .383001 .113313 cmyk
@
gsave
24.5999 113.78 mo
164.61 113.78 li
164.61 88.2676 li
24.5999 88.2676 li
cp
eclp
23.9999 114.38 mo
165.21 114.38 li
165.21 87.6676 li
23.9999 87.6676 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/4 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [318.44 405.7 318.44 432.41 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&e5`Y&e5]X&IoTW&IoTW&IoTW&IfNV&IfNV&IfNV&IfNV&IfNV&IfKU&IfKU&IfKU&IfKU&IfKU&IfKU
&IfKU&IfKU&.K?S&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B6Q&.B6Q&.B6Q&.B6Q&.B6Q
%gs'O%gs'O%gs'O%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%LWmL%LNgK%LNgK
%LNgK%LNgK%LNgK%LNgK%LNgK%LNgK%LNdJ%LNdJ%LNdJ%13[I%13[I%1*UH%1*UH%1*UH%1*RG%1*RG
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /4 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/4 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&J5Te&J5Te&J,Kb&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa
&.fBa&.fBa&.f?_%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0\%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1EXR$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k*OQ$k*LO$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M
$O[=L$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A
~>
<~(Ddl((D[c%()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()7Q!'bqGu'bqGu'bqGu'bqGu'bqGu
'bqGu'bqGu'bqDs'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM2o',)#m',)#m',)#m',)#m
',)#m',)#m',)#m',)#l&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfh&J5Te&J5Te
&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa%hB0]
~>
0 ]
>>
318.44 405.7 318.44 432.41 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
24.5999 113.78 mo
164.61 113.78 li
164.61 88.2676 li
24.5999 88.2676 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 1438 39 <0001005bffee04780520003f00a2401d1c1c0f181810014d18100f014d18
100d014d180a0c014d18100b014d18b80211400d00bf2701202740276027
03270fb8ffe8b310014d0fb8fff0b30f014d0fb8ffecb30d014d0fb8ffee
b30c014d0fb8ffe8b30b014d0fb80232b42f34013418b8010ab42222392f
3ebb010a0005000a0129b2395314b8012cb12f56003fed3ffdd4ed111239
2fed012f5de12b2b2b2b2bd45d5dc4e12b2b2b2b2b12392f313001140e02
23222e0223220e0215141e02333236371121222635343e023321321e0215
11140e0423222e0235343e0233321e04047804080c070c385e835a6baa76
3f457aa9653c7b35fed4111104090c09019b0b16120a123a5c62643196ec
a3565da9ed904a8265451a0a045e131d1308262e264e8abe6f7cc084441d
1d01792224131b110808101c12fe131a261d22180c5dacf0949afab0611a
23291a22>PBAAAA+CALIBRI AddT42Char 
2 3764 271 <00020099ffed03d50571002a003d0085b53f3f010a2136b8fff6b30c014d
36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36b801f840
1b152b120c014d2b200d014d2b180b014d2b1810014d2b100f014d2bb802
0a400900150a363521040530b80105b6264a1b46104c39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b323931305d01
140e0223222e022715140e0223222e023511343e0233321e0215113e0333
321e0207342e0223220e020711161633323e0203d53363905d2b49464627
08121b15141c12060713201819201208284b484828628b5728ae15345640
203e404527447c433e58371901e775bb844611263a296e080c070404070c
080538080c080404080c08fde5293823104e83b0754582643d122a4232fe
9953573c637b>PBAAAA+CALIBRI AddT42Char 
2 5236 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>PBAAAA+CALIBRI AddT42Char 
2 6216 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/G 39 def
/b 271 def
/g 336 def
/l 367 def
end
PBAAAA+CALIBRI /Encoding get
dup 71 /G put
dup 98 /b put
dup 103 /g put
dup 108 /l put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFY+CALIBRI*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 3{/.notdef}rp /G 5{/.notdef}rp /M 
2{/.notdef}rp /P 4{/.notdef}rp /U 11{/.notdef}rp /a /b 2{/.notdef}rp 
/e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m 
/n /o 2{/.notdef}rp /r 6{/.notdef}rp /y 134{/.notdef}rp]
GFQXFY+CALIBRI nf
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
82.0799 97.5196 mo
(G)sh
90.9122 97.5196 mo
(P)sh
98.1446 97.5196 mo
(U)sh
107.127 97.5196 mo
( )sh
51.8199 111.52 mo
(g)sh
58.4098 111.52 mo
(l)sh
61.6227 111.52 mo
(o)sh
69.0056 111.52 mo
(b)sh
76.3611 111.52 mo
(a)sh
83.0672 111.52 mo
(l)sh
86.2801 111.52 mo
( )sh
89.445 111.52 mo
(m)sh
100.629 111.52 mo
(e)sh
107.595 111.52 mo
(m)sh
118.778 111.52 mo
(o)sh
126.161 111.52 mo
(r)sh
131.042 111.52 mo
(y)sh
gsave
98.3499 67.8596 mo
102.35 67.8196 li
94.3099 63.9196 li
86.3599 68.0096 li
90.3599 67.9596 li
90.5599 84.3196 li
86.5599 84.3696 li
94.5999 88.2696 li
102.55 84.1696 li
98.5499 84.2196 li
98.3499 67.8596 li
cp
eclp
85.7099 63.4196 mo
86.0199 88.9696 li
103.2 88.7596 li
102.89 63.2096 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/5 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [309.7 443.89 326.89 444.09 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /5 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/5 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
309.7 443.89 326.89 444.09 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/5 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
98.3499 67.8596 mo
102.35 67.8196 li
94.3099 63.9196 li
86.3599 68.0096 li
90.3599 67.9596 li
90.5599 84.3196 li
86.5599 84.3696 li
94.5999 88.2696 li
102.55 84.1696 li
98.5499 84.2196 li
98.3499 67.8596 li
cp
.684749 .498451 .383001 .113313 cmyk
@
gsave
24.6099 176.14 mo
164.6 176.14 li
164.6 130.786 li
24.6099 130.786 li
cp
eclp
24.0099 176.74 mo
165.2 176.74 li
165.2 130.186 li
24.0099 130.186 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/6 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [318.45 343.34 318.45 389.89 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&e5`Y&e5]X&IoTW&IoTW&IoTW&IfNV&IfNV&IfNV&IfNV&IfNV&IfKU&IfKU&IfKU&IfKU&IfKU&IfKU
&IfKU&IfKU&.K?S&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B6Q&.B6Q&.B6Q&.B6Q&.B6Q
%gs'O%gs'O%gs'O%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%LWmL%LNgK%LNgK
%LNgK%LNgK%LNgK%LNgK%LNgK%LNgK%LNdJ%LNdJ%LNdJ%13[I%13[I%1*UH%1*UH%1*UH%1*RG%1*RG
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /6 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/6 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&J5Te&J5Te&J,Kb&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa
&.fBa&.fBa&.f?_%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0\%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1EXR$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k*OQ$k*LO$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M
$O[=L$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A
~>
<~(Ddl((D[c%()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()7Q!'bqGu'bqGu'bqGu'bqGu'bqGu
'bqGu'bqGu'bqDs'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM2o',)#m',)#m',)#m',)#m
',)#m',)#m',)#m',)#l&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfh&J5Te&J5Te
&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa%hB0]
~>
0 ]
>>
318.45 343.34 318.45 389.89 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/6 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
24.6099 176.14 mo
164.6 176.14 li
164.6 130.786 li
24.6099 130.786 li
cp
@
gsave
22.9999 55.9196 mo
22.9999 51.9296 li
18.9999 59.9196 li
22.9999 67.9096 li
22.9999 63.9196 li
261.62 63.9196 li
261.62 67.9096 li
265.62 59.9196 li
261.62 51.9296 li
261.62 55.9196 li
22.9999 55.9196 li
cp
eclp
18.3999 68.5096 mo
266.21 68.5096 li
266.21 51.3216 li
18.3999 51.3216 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/7 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [366.15 451.57 366.15 468.75 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /7 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/7 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
366.15 451.57 366.15 468.75 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/7 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
22.9999 55.9196 mo
22.9999 51.9296 li
18.9999 59.9196 li
22.9999 67.9096 li
22.9999 63.9196 li
261.62 63.9196 li
261.62 67.9096 li
265.62 59.9196 li
261.62 51.9296 li
261.62 55.9196 li
22.9999 55.9196 li
cp
@
gsave
98.5999 117.77 mo
102.6 117.77 li
94.5999 113.78 li
86.6099 117.78 li
90.6099 117.78 li
90.6099 126.79 li
86.6199 126.79 li
94.6099 130.79 li
102.6 126.78 li
98.6099 126.79 li
98.5999 117.77 li
cp
eclp
86.0099 113.18 mo
86.0199 131.39 li
103.21 131.38 li
103.2 113.17 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/8 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [309.85 397.79 327.04 397.8 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /8 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/8 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
309.85 397.79 327.04 397.8 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
98.5999 117.77 mo
102.6 117.77 li
94.5999 113.78 li
86.6099 117.78 li
90.6099 117.78 li
90.6099 126.79 li
86.6199 126.79 li
94.6099 130.79 li
102.6 126.78 li
98.6099 126.79 li
98.5999 117.77 li
cp
@
gsave
216.2 51.9296 mo
212.21 51.9296 li
220.2 55.9196 li
228.19 51.9296 li
224.2 51.9296 li
224.2 38.3996 li
228.19 38.3996 li
220.2 34.4096 li
212.21 38.3996 li
216.2 38.3996 li
216.2 51.9296 li
cp
eclp
211.61 56.5196 mo
228.798 56.5196 li
228.798 33.8046 li
211.61 33.8046 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/9 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [452.63 474.92 435.45 474.92 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /9 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/9 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
452.63 474.92 435.45 474.92 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/9 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
216.2 51.9296 mo
212.21 51.9296 li
220.2 55.9196 li
228.19 51.9296 li
224.2 51.9296 li
224.2 38.3996 li
228.19 38.3996 li
220.2 34.4096 li
212.21 38.3996 li
216.2 38.3996 li
216.2 51.9296 li
cp
@
gsave
87.0499 159.68 mo
101.223 159.68 li
101.223 146.059 li
87.0499 146.059 li
cp
eclp
86.4499 160.28 mo
101.823 160.28 li
101.823 145.459 li
86.4499 145.459 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/10 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [317.98 359.8 317.98 374.62 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /10 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/10 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
317.98 359.8 317.98 374.62 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/10 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
87.0499 159.68 mo
101.223 159.68 li
101.223 146.059 li
87.0499 146.059 li
cp
1 /0 /CSD get_res sepcs
.353 sep
@
gsave
101.22 159.68 mo
115.393 159.68 li
115.393 146.059 li
101.22 146.059 li
cp
eclp
100.62 160.28 mo
115.993 160.28 li
115.993 145.459 li
100.62 145.459 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/11 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [332.15 359.8 332.15 374.62 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /11 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/11 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
332.15 359.8 332.15 374.62 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/11 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
101.22 159.68 mo
115.393 159.68 li
115.393 146.059 li
101.22 146.059 li
cp
@
gsave
115.4 159.68 mo
129.573 159.68 li
129.573 146.059 li
115.4 146.059 li
cp
eclp
114.8 160.28 mo
130.173 160.28 li
130.173 145.459 li
114.8 145.459 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/12 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [346.32 359.8 346.32 374.62 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /12 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/12 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
346.32 359.8 346.32 374.62 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/12 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
115.4 159.68 mo
129.573 159.68 li
129.573 146.059 li
115.4 146.059 li
cp
@
gsave
129.57 159.68 mo
143.743 159.68 li
143.743 146.059 li
129.57 146.059 li
cp
eclp
128.97 160.28 mo
144.343 160.28 li
144.343 145.459 li
128.97 145.459 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/13 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [360.49 359.8 360.49 374.62 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /13 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/13 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
360.49 359.8 360.49 374.62 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/13 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
129.57 159.68 mo
143.743 159.68 li
143.743 146.059 li
129.57 146.059 li
cp
@
gsave
87.0499 173.31 mo
101.223 173.31 li
101.223 159.689 li
87.0499 159.689 li
cp
eclp
86.4499 173.91 mo
101.823 173.91 li
101.823 159.089 li
86.4499 159.089 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/14 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [317.98 346.17 317.98 361 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /14 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/14 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
317.98 346.17 317.98 361 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/14 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
87.0499 173.31 mo
101.223 173.31 li
101.223 159.689 li
87.0499 159.689 li
cp
@
gsave
101.22 173.31 mo
115.393 173.31 li
115.393 159.689 li
101.22 159.689 li
cp
eclp
100.62 173.91 mo
115.993 173.91 li
115.993 159.089 li
100.62 159.089 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/15 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [332.15 346.17 332.15 361 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /15 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/15 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
332.15 346.17 332.15 361 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/15 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
101.22 173.31 mo
115.393 173.31 li
115.393 159.689 li
101.22 159.689 li
cp
@
gsave
115.4 173.31 mo
129.573 173.31 li
129.573 159.689 li
115.4 159.689 li
cp
eclp
114.8 173.91 mo
130.173 173.91 li
130.173 159.089 li
114.8 159.089 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/16 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [346.32 346.17 346.32 361 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /16 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/16 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
346.32 346.17 346.32 361 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/16 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
115.4 173.31 mo
129.573 173.31 li
129.573 159.689 li
115.4 159.689 li
cp
@
gsave
129.57 173.31 mo
143.743 173.31 li
143.743 159.689 li
129.57 159.689 li
cp
eclp
128.97 173.91 mo
144.343 173.91 li
144.343 159.089 li
128.97 159.089 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/17 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [360.49 346.17 360.49 361 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /17 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/17 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
360.49 346.17 360.49 361 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/17 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
129.57 173.31 mo
143.743 173.31 li
143.743 159.689 li
129.57 159.689 li
cp
@
gsave
44.5299 159.68 mo
58.7029 159.68 li
58.7029 146.059 li
44.5299 146.059 li
cp
eclp
43.9299 160.28 mo
59.3029 160.28 li
59.3029 145.459 li
43.9299 145.459 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/18 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [275.46 359.8 275.46 374.62 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /18 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/18 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
275.46 359.8 275.46 374.62 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/18 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
44.5299 159.68 mo
58.7029 159.68 li
58.7029 146.059 li
44.5299 146.059 li
cp
@
gsave
58.6999 159.68 mo
72.8729 159.68 li
72.8729 146.059 li
58.6999 146.059 li
cp
eclp
58.0999 160.28 mo
73.4729 160.28 li
73.4729 145.459 li
58.0999 145.459 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/19 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [289.63 359.8 289.63 374.62 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /19 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/19 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
289.63 359.8 289.63 374.62 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/19 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
58.6999 159.68 mo
72.8729 159.68 li
72.8729 146.059 li
58.6999 146.059 li
cp
@
gsave
72.8799 159.68 mo
87.0529 159.68 li
87.0529 146.059 li
72.8799 146.059 li
cp
eclp
72.2799 160.28 mo
87.6529 160.28 li
87.6529 145.459 li
72.2799 145.459 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/20 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [303.8 359.8 303.8 374.62 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /20 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/20 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
303.8 359.8 303.8 374.62 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/20 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
72.8799 159.68 mo
87.0529 159.68 li
87.0529 146.059 li
72.8799 146.059 li
cp
@
gsave
44.5299 173.31 mo
58.7029 173.31 li
58.7029 159.689 li
44.5299 159.689 li
cp
eclp
43.9299 173.91 mo
59.3029 173.91 li
59.3029 159.089 li
43.9299 159.089 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/21 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [275.46 346.17 275.46 361 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /21 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/21 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
275.46 346.17 275.46 361 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/21 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
44.5299 173.31 mo
58.7029 173.31 li
58.7029 159.689 li
44.5299 159.689 li
cp
@
gsave
58.6999 173.31 mo
72.8729 173.31 li
72.8729 159.689 li
58.6999 159.689 li
cp
eclp
58.0999 173.91 mo
73.4729 173.91 li
73.4729 159.089 li
58.0999 159.089 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/22 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [289.63 346.17 289.63 361 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /22 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/22 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
289.63 346.17 289.63 361 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/22 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
58.6999 173.31 mo
72.8729 173.31 li
72.8729 159.689 li
58.6999 159.689 li
cp
@
gsave
72.8799 173.31 mo
87.0529 173.31 li
87.0529 159.689 li
72.8799 159.689 li
cp
eclp
72.2799 173.91 mo
87.6529 173.91 li
87.6529 159.089 li
72.2799 159.089 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/23 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [303.8 346.17 303.8 361 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/ilu4/ilu4/NHf2/NHc1/NHc1/NHc1/NH`0/3$Q./3$Q./3$N-/3$N-/3$N-.lU<*.lU<*.lU<*.lU9)
.Q1*'.Q1*'.Q1'&.Q1'&.Q1'&.Q's$.5aj#.5aj#.5ag".5Xa!.5Xa!-o=Tt-o=Tt-o4Ns-o4Kr-o4Kr
-Sn?p-Se9o-Se9o-Se6n-Se6n-8J-m-8A$k-8A$k-8A$k-8A!j,qqgh,qqdg,qqdg,qqdg,qh[e,VMRd
,VMRd,VMOc,VDIb,;)=`,;)=`,:u4^+tZ+]+tZ+]+tZ(\+tQ"[+Y5kY+Y5kY+Y5kY+Y,bW+Y,bW+=fVU
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /23 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/23 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~/M/P+/M/P+/M&G(/1`>'/1`>'/1`>'/1`>'/1W5$.k<,#.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt
.Olkr.4H\p.4H\p.4H\p.4H\p.4H\p.4HYn-n$Jl-n$Jl-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h
-RU8g-71&d-71&d-71&d-71&d-71&c,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\,U=W[
,9nEX,9nEX,9nEX,9nEX+sJ3T+sJ3T+sJ3T+X&!P+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL
~>
<~3B9)[3B9)[3B/uX3&ilW3&ilW3&ilW3&ilW3&`cT2`EZS2`EZS2`EZS2`EZS2`<QP2E!HO2E!HO2E!HO
2E!EM2)R6K2)R6K2)R6K2)R6K2)R3I1c.$G1c.$G1c.$G1c.!E1G^gC1G^gC1G^gC1G^dA1,:U?1,:U?
1,:U?1,:U>0ekC;0ekC;0ekC;0ekC;0ekC:0JG170JG170JG170JG160/"t30/"t30/"t30/"t2/hSb/
/hSb//hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'.k<,#.k<,#.k<,#.k<,#.Olnt.Olnt
~>
<~<)cgr<)cgr<)cgr<)Z^o;c?Un;c?Un;c6Lk;GpCj;GpCj;Gg:g;,L1f;,L1f;,C(c:f'tb:f'tb:esk_
:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V9he;T9MA,R9MA,R9MA)P91qoN91qoN91qlL8kM]J
8kM]I8P)KF8P)KF8P)KE84Z9B84Z9B84Z9A7n6'>7n6'>7n6'=7Rfj:7Rfj977BX677BX677BX56psF2
6psF26psF26UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5s[e&5X7S"5X7S"5<h@s5<h@s5<h@s5!D.o5!D.o
~>
0 ]
>>
303.8 346.17 303.8 361 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/23 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
72.8799 173.31 mo
87.0529 173.31 li
87.0529 159.689 li
72.8799 159.689 li
cp
@
gsave
98.3099 38.6596 mo
102.3 38.6596 li
94.3099 34.6596 li
86.3099 38.6596 li
90.3099 38.6596 li
90.3099 51.9296 li
86.3099 51.9296 li
94.3099 55.9196 li
102.3 51.9296 li
98.3099 51.9296 li
98.3099 38.6596 li
cp
eclp
85.7099 56.5196 mo
102.898 56.5196 li
102.898 34.0596 li
85.7099 34.0596 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/24 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [309.55 474.79 326.74 474.79 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /24 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/24 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
309.55 474.79 326.74 474.79 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/24 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
98.3099 38.6596 mo
102.3 38.6596 li
94.3099 34.6596 li
86.3099 38.6596 li
90.3099 38.6596 li
90.3099 51.9296 li
86.3099 51.9296 li
94.3099 55.9196 li
102.3 51.9296 li
98.3099 51.9296 li
98.3099 38.6596 li
cp
.684749 .498451 .383001 .113313 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 4070 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>PBAAAA+CALIBRI AddT42Char 
2 5710 346 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>PBAAAA+CALIBRI AddT42Char 
2 7374 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>PBAAAA+CALIBRI AddT42Char 
2 7918 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>PBAAAA+CALIBRI AddT42Char 
2 8314 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>PBAAAA+CALIBRI AddT42Char 
2 8562 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/c 272 def
/h 346 def
/p 393 def
/s 400 def
/t 410 def
/u 437 def
end
PBAAAA+CALIBRI /Encoding get
dup 99 /c put
dup 104 /h put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFY+CALIBRI*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 3{/.notdef}rp /G 5{/.notdef}rp /M 
2{/.notdef}rp /P 4{/.notdef}rp /U 11{/.notdef}rp /a /b /c 
/.notdef /e /.notdef /g /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u 3{/.notdef}rp /y 134{/.notdef}rp]
GFQXFY+CALIBRI nf
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
51.1099 143.49 mo
(M)sh
63.0792 143.49 mo
(u)sh
70.4347 143.49 mo
(l)sh
73.6476 143.49 mo
(t)sh
78.3372 143.49 mo
(i)sh
81.5501 143.49 mo
(p)sh
88.9056 143.49 mo
(r)sh
93.7866 143.49 mo
(o)sh
101.169 143.49 mo
(c)sh
107.089 143.49 mo
(e)sh
114.055 143.49 mo
(s)sh
119.531 143.49 mo
(s)sh
125.006 143.49 mo
(o)sh
132.389 143.49 mo
(r)sh
137.27 143.49 mo
(s)sh
53.1999 49.9496 mo
(h)sh
60.5555 49.9496 mo
(o)sh
67.9383 49.9496 mo
(s)sh
73.4139 49.9496 mo
(t)sh
gsave
177.68 133.62 mo
262.875 133.62 li
262.875 97.7956 li
177.68 97.7956 li
cp
eclp
177.08 134.22 mo
263.475 134.22 li
263.475 97.1956 li
177.08 97.1956 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/25 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [444.12 385.86 444.12 422.88 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*CO36*CO05*CO05*CF'3*CF'3*CF$2*C<s1*(!j0*(!g/*'ma.*'m^-*'m^-*'dU+*'dU+*'dR*)aII)
)a@@')a@@')a@=&)a77%)a77%)a74$)a..#)Eh"!)Eh"!)Eh"!)E^mt)E^mt)E^js)E^js)*:Xp)*:Xp
)*:Uo)*:Uo)*1On)*1Lm)*1Lm)*(Ck(cb:j(cb7i(cY1h(cY.g(cY.g(H4qd(H4qd(H4nc(H+hb(H+ea
(,e\`(,\S^(,\S^(,\P](,SJ\'f8>Z'f8>Z'f/5X'f/5X'f/5X'f&,V'J`#U'J_uT'J_uT'JVlR'JVlR
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /25 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/25 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#oq<*#fh9)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]BV5
)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'J2)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X8.(`4),
(`4),(`4),(`4),(`4),(`4),(`4),(`4)+(Ddl((Ddl((Ddl((Ddl((Ddl'()@Z$()@Z$()@Z$()@Z$
()@Z$'bqGu'bqGu'bqGu'bqGu'bqGu'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q',)#m',)#m',)#m',)#m
~>
<~6UO4.6UO4.6UO4.6UF++6:+"*6:+"*6:!n'5s[e&5s[e&5sR\#5X7S"5X7S"5X.It5<h@s5<h@s5<h@s
5<h=q5!D.o5!D.o5!D+m4Ztqk4Ztqk4Ztni4?P_g4?P_g4?P_g4?P\e4$,Mc4$,Mc4$,Mc4$,Ja3]];_
3]];_3]];_3]];^3B9)[3B9)[3B9)Z3&ilW3&ilW3&ilV2`EZS2`EZS2`EZR2E!HO2E!HO2E!HN2)R6K
2)R6K2)R6K1c.$G1c.$G1c.$G1G^gC1G^gC1G^gC1,:U?1,:U?1,:U?0ekC;0ekC;0ekC;0ekC;0JG17
~>
<~?!U`A?!LW>>[1N=>[(E:>?b<9>?Y36>$>*5>$>*5>$5!2=]nm1=]ed.=BJ[-=BAR*='&I)=&r@&<`W7%
<`W4#<E3%!<E3!t<)cgr<)cgr<)cdp;c?Un;c?Rl;GpCj;GpCj;Gp@h;,L1f;,L.d:f'tb:f'q`:JXb^
:JXb]:/4PZ:/4PZ:/4PY9he>V9he>U9MA,R9MA,Q91qoN91qoM8kM]J8kM]I8P)KF8P)KE84Z9B84Z9A
7n6'>7n6'>7Rfj:7Rfj:77BX677BX66psF26psF26UO4.6UO4.6UO4.6:+"*6:+"*5s[e&5s[e&5X7S"
~>
0 ]
>>
444.12 385.86 444.12 422.88 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/25 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
177.68 133.62 mo
262.875 133.62 li
262.875 97.7956 li
177.68 97.7956 li
cp
.684749 .498451 .383001 .113313 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 2510 94 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/S 94 def
end
PBAAAA+CALIBRI /Encoding get
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFY+CALIBRI*1 
[32{/.notdef}rp /space 34{/.notdef}rp /C 3{/.notdef}rp /G 5{/.notdef}rp /M 
2{/.notdef}rp /P 2{/.notdef}rp /S /.notdef /U 11{/.notdef}rp /a 
/b /c /.notdef /e /.notdef /g /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
GFQXFY+CALIBRI nf
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
203.33 111.51 mo
(S)sh
209.762 111.51 mo
(m)sh
220.946 111.51 mo
(a)sh
227.652 111.51 mo
(r)sh
232.533 111.51 mo
(t)sh
237.223 111.51 mo
( )sh
191.56 128.31 mo
(C)sh
199.025 128.31 mo
(o)sh
206.408 128.31 mo
(n)sh
213.763 128.31 mo
(t)sh
218.453 128.31 mo
(r)sh
223.334 128.31 mo
(o)sh
230.717 128.31 mo
(l)sh
233.93 128.31 mo
(l)sh
237.142 128.31 mo
(e)sh
244.108 128.31 mo
(r)sh
gsave
177.68 96.2196 mo
262.875 96.2196 li
262.875 82.5986 li
177.68 82.5986 li
cp
eclp
177.08 96.8196 mo
263.475 96.8196 li
263.475 81.9986 li
177.08 81.9986 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/26 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [444.12 423.26 444.12 438.08 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*"W__*"W__*"NY^)\3P])\3P])\3M\)\3M\)\3M\)\3M\)\3M\)\3M\)\3M\)\3M\)@mD[)@mD[)@mD[
)@d>Z)@d;Y)@d;Y)@d;Y)@d;Y)@d;Y)%I2X)%I2X)%I2X)%I2X)%I2X)%I2X)%I2X)%I2X(_.&V(_.&V
(_$uU(_$uU(_$uU(_$uU(_$uU(_$uU(_$uU(C^lT(C^lT(C^lT(C^iS(C^iS(C^iS(C^iS(C^iS(CUcR
((:ZQ((:ZQ((:ZQ((:ZQ((:ZQ((:ZQ((:ZQ((:WP'atNO'atNO'atNO'atNO'atNO'atNO'akHN'akHN
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /26 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/26 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)]K_8)]K_8)]K_8)]BV5)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)AsD1)&X;0)&X;0
)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X8.(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4&*(Ddl(
(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl'()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$
()@Z$'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q
~>
<~%hB0]%hB0]%h9'Z%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY
%LrpW%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
%1NaT$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OP
$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$47+I
~>
<~&J5Te&J5Te&J5Te&J5Te&J5Te&J,Kb&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa
&.fBa&.f?_%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB-[%LrsY
%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU%1NaU%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
0 ]
>>
444.12 423.26 444.12 438.08 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/26 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
177.68 96.2196 mo
262.875 96.2196 li
262.875 82.5986 li
177.68 82.5986 li
cp
.684749 .498451 .383001 .113313 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 606 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>PBAAAA+CALIBRI AddT42Char 
2 1772 47 <000100acfffa0158051400150050b73f174f17af170300b8ffe8b310014d
00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b
014d00ba0211000affc0b715014d0a10520555003f3f012f2be12b2b2b2b
2b31305d25140e0223222e023511343e0233321e02150158081421191822
140809152117192114081a080c070505070c0804da080c070505070c0800
>PBAAAA+CALIBRI AddT42Char 
2 4974 296 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/B 17 def
/I 47 def
/f 296 def
end
PBAAAA+CALIBRI /Encoding get
dup 66 /B put
dup 73 /I put
dup 102 /f put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFY+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B /C 3{/.notdef}rp /G /.notdef 
/I 3{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S /.notdef 
/U 11{/.notdef}rp /a /b /c /.notdef /e /f 
/g /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u 3{/.notdef}rp /y 
134{/.notdef}rp]
GFQXFY+CALIBRI nf
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
182.83 93.6096 mo
(B)sh
190.445 93.6096 mo
(u)sh
197.801 93.6096 mo
(s)sh
203.276 93.6096 mo
( )sh
206.441 93.6096 mo
(I)sh
209.969 93.6096 mo
(n)sh
217.324 93.6096 mo
(t)sh
222.014 93.6096 mo
(e)sh
228.98 93.6096 mo
(r)sh
233.861 93.6096 mo
(f)sh
238.133 93.6096 mo
(a)sh
244.839 93.6096 mo
(c)sh
250.759 93.6096 mo
(e)sh
gsave
224.27 67.9096 mo
228.27 67.9096 li
220.28 63.9196 li
212.28 67.9096 li
216.28 67.9096 li
216.28 78.5996 li
212.28 78.5996 li
220.28 82.5996 li
228.27 78.5996 li
224.27 78.5996 li
224.27 67.9096 li
cp
eclp
211.68 83.1996 mo
228.868 83.1996 li
228.868 63.3196 li
211.68 63.3196 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/27 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [435.52 446.82 452.71 446.82 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /27 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/27 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
435.52 446.82 452.71 446.82 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/27 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
224.27 67.9096 mo
228.27 67.9096 li
220.28 63.9196 li
212.28 67.9096 li
216.28 67.9096 li
216.28 78.5996 li
212.28 78.5996 li
220.28 82.5996 li
228.27 78.5996 li
224.27 78.5996 li
224.27 67.9096 li
cp
.684749 .498451 .383001 .113313 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
23.5599 82.3696 mo
(G)sh
32.3922 82.3696 mo
(P)sh
39.6245 82.3696 mo
(U)sh
gsave
118.96 355.68 mo
187.685 355.68 li
187.685 303.685 li
118.96 303.685 li
cp
eclp
118.36 356.28 mo
188.285 356.28 li
188.285 303.085 li
118.36 303.085 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/28 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [377.17 163.8 377.17 216.99 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~G6$P$G6$M#Fo^A!Fo^=uFTC4tFTC1sF9(%qF9("pEraknEraknEWF_lEWF\kE<+PiE<+PiDueDgDueDg
DZJ8eDZJ5dDZJ5dD?/)bD?/&aD#hr`D#ho_C]Mc]C]M`\CB2W[CB2TZCB2QYC&lEWC&lBVB`Q6TB`Q3S
BE6*RBE6'QB)opOB)omNAcTaLAcT^KAH9RIAH9RIA,sFGA,sCF@fX7D@fX4C@K=(A@K=%@@0!n>@0!k=
?i[_;?i[_;?i[\:?N@P8?N@M7?3%A5?3%>4>l_53>l_22>QD&0>QD#/>6(l->6(i,=ob]*=TGQ(=TGN'
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /28 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/28 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~G'8%PG'8%PG'.qMF`hhLF`__IFEDVHFE;MEF)uDDF)l;AEcQ2@EcH)=EH,u<EH#l9E,]c8E,TZ5Df9Q4
Df9N2DJj?0DJj?0DJj<.D/F-,D/F**Ci!p(Ci!m&CMR^$CMR["C2.KuC2.KuC2.HsBk_9qBk_6oBP;'m
BP;'lB4kjiB4kjhAnGXeAnGXdAS#FaAS#F`A7T4]A7T4\@q0"Y@q0"X@U`eU@U`eT@:<SQ@:<SP?smAM
?smAM?XI/I?XI/I?XI/I?=$rE?=$rE?!U`A?!U`A>[1N=>[1N=>?b<9>?b<9>$>*5>$>*5=]nm1=BJ[-
~>
0 <~hr!>Khqm5HhVI#Dh;$f@gt^]?gtUT<gY1B8g=b04g"=s0f\"j/f[na,f@JO(f%&=$e^`4#e^W*ueC<!t
eC;sre'landaHRldaHOjdF$=fd*U.dd*U+bcd0n^cHa\Zc-=MXc-=JVbfn8RbKJ&Nb0%iJaiVWFaN2EB
a2c6@a2c6?`l?$;`Pog7`5KU3_o'C/_SX1+_83t(_83t'^qdb#^V@Ot^:q=p]tM+l]Y(nh]=Y\d]"5J`
\[f8]\@B&Y\@B&Y\$riU[^NWQ[C*EM['[3IZa7!EZa7!EZEgdAZ*CR=Yct@9YHP.5Y-+q1Xf\_-XK8M)
~>
0 ]
>>
377.17 163.8 377.17 216.99 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/28 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
118.96 355.68 mo
187.685 355.68 li
187.685 303.685 li
118.96 303.685 li
cp
.684749 .498451 .383001 .113313 cmyk
@
gsave
8.39992 377.41 mo
99.5139 377.41 li
99.5139 306.544 li
8.39992 306.544 li
cp
eclp
7.79991 378.01 mo
100.114 378.01 li
100.114 305.944 li
7.79991 305.944 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/29 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [277.8 142.07 277.8 214.14 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~G6$P$G6$M#Fo^A!Fo^=uFTC4tFTC1sF9(%qF9("pEraknEraknEWF_lEWF\kE<+PiE<+PiDueDgDueDg
DZJ8eDZJ5dDZJ5dD?/)bD?/&aD#hr`D#ho_C]Mc]C]M`\CB2W[CB2TZCB2QYC&lEWC&lBVB`Q6TB`Q3S
BE6*RBE6'QB)opOB)omNAcTaLAcT^KAH9RIAH9RIA,sFGA,sCF@fX7D@fX4C@K=(A@K=%@@0!n>@0!k=
?i[_;?i[_;?i[\:?N@P8?N@M7?3%A5?3%>4>l_53>l_22>QD&0>QD#/>6(l->6(i,=ob]*=TGQ(=TGN'
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /29 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/29 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~G'8%PG'8%PG'.qMF`hhLF`__IFEDVHFE;MEF)uDDF)l;AEcQ2@EcH)=EH,u<EH#l9E,]c8E,TZ5Df9Q4
Df9N2DJj?0DJj?0DJj<.D/F-,D/F**Ci!p(Ci!m&CMR^$CMR["C2.KuC2.KuC2.HsBk_9qBk_6oBP;'m
BP;'lB4kjiB4kjhAnGXeAnGXdAS#FaAS#F`A7T4]A7T4\@q0"Y@q0"X@U`eU@U`eT@:<SQ@:<SP?smAM
?smAM?XI/I?XI/I?XI/I?=$rE?=$rE?!U`A?!U`A>[1N=>[1N=>?b<9>?b<9>$>*5>$>*5=]nm1=BJ[-
~>
0 <~hr!>Khqm5HhVI#Dh;$f@gt^]?gtUT<gY1B8g=b04g"=s0f\"j/f[na,f@JO(f%&=$e^`4#e^W*ueC<!t
eC;sre'landaHRldaHOjdF$=fd*U.dd*U+bcd0n^cHa\Zc-=MXc-=JVbfn8RbKJ&Nb0%iJaiVWFaN2EB
a2c6@a2c6?`l?$;`Pog7`5KU3_o'C/_SX1+_83t(_83t'^qdb#^V@Ot^:q=p]tM+l]Y(nh]=Y\d]"5J`
\[f8]\@B&Y\@B&Y\$riU[^NWQ[C*EM['[3IZa7!EZa7!EZEgdAZ*CR=Yct@9YHP.5Y-+q1Xf\_-XK8M)
~>
0 ]
>>
277.8 142.07 277.8 214.14 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/29 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
8.39992 377.41 mo
99.5139 377.41 li
99.5139 306.544 li
8.39992 306.544 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 9556 876 <00010001fee7030a05be00150008b11005002f2f3130170e0323222e0237
013e0333321e0207a8040d141d151921120406025d040d131e1519201204
05f10d0f0804070d130d067b0d0f0903070c140d>PBAAAA+CALIBRI AddT42Char 
2 322 4 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>PBAAAA+CALIBRI AddT42Char 
2 1220 24 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>PBAAAA+CALIBRI AddT42Char 
2 4350 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/slash 876 def
/A 4 def
/D 24 def
/d 282 def
end
PBAAAA+CALIBRI /Encoding get
dup 47 /slash put
dup 65 /A put
dup 68 /D put
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFY+CALIBRI*1 
[32{/.notdef}rp /space 14{/.notdef}rp /slash 17{/.notdef}rp /A /B /C 
/D 2{/.notdef}rp /G /.notdef /I 3{/.notdef}rp /M 2{/.notdef}rp 
/P 2{/.notdef}rp /S /.notdef /U 11{/.notdef}rp /a /b 
/c /d /e /f /g /h /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u 3{/.notdef}rp /y 134{/.notdef}rp]
GFQXFY+CALIBRI nf
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
31.7799 320.97 mo
(S)sh
38.2124 320.97 mo
(o)sh
45.5953 320.97 mo
(u)sh
52.9508 320.97 mo
(r)sh
57.8318 320.97 mo
(c)sh
63.7517 320.97 mo
(e)sh
70.7199 320.97 mo
(/)sh
21.1299 337.77 mo
(D)sh
29.7433 337.77 mo
(e)sh
36.7091 337.77 mo
(s)sh
42.1847 337.77 mo
(t)sh
46.8742 337.77 mo
(i)sh
50.0872 337.77 mo
(n)sh
57.4427 337.77 mo
(a)sh
64.1488 337.77 mo
(t)sh
68.8383 337.77 mo
(i)sh
72.0512 337.77 mo
(o)sh
79.4341 337.77 mo
(n)sh
31.1499 354.57 mo
(A)sh
39.2506 354.57 mo
(d)sh
46.6062 354.57 mo
(d)sh
53.9617 354.57 mo
(r)sh
58.8427 354.57 mo
(e)sh
65.8085 354.57 mo
(s)sh
71.2841 354.57 mo
(s)sh
76.7597 354.57 mo
( )sh
24.6299 371.37 mo
(G)sh
33.4622 371.37 mo
(e)sh
40.428 371.37 mo
(n)sh
47.7835 371.37 mo
(e)sh
54.7494 371.37 mo
(r)sh
59.6303 371.37 mo
(a)sh
66.3364 371.37 mo
(t)sh
71.0259 371.37 mo
(o)sh
78.4088 371.37 mo
(r)sh
gsave
110.04 378.61 mo
178.549 378.61 li
178.549 312.5 li
110.04 312.5 li
cp
eclp
109.44 379.21 mo
179.149 379.21 li
179.149 311.9 li
109.44 311.9 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/30 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [368.13 140.87 368.13 208.18 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~G6$P$G6$M#Fo^A!Fo^=uFTC4tFTC1sF9(%qF9("pEraknEraknEWF_lEWF\kE<+PiE<+PiDueDgDueDg
DZJ8eDZJ5dDZJ5dD?/)bD?/&aD#hr`D#ho_C]Mc]C]M`\CB2W[CB2TZCB2QYC&lEWC&lBVB`Q6TB`Q3S
BE6*RBE6'QB)opOB)omNAcTaLAcT^KAH9RIAH9RIA,sFGA,sCF@fX7D@fX4C@K=(A@K=%@@0!n>@0!k=
?i[_;?i[_;?i[\:?N@P8?N@M7?3%A5?3%>4>l_53>l_22>QD&0>QD#/>6(l->6(i,=ob]*=TGQ(=TGN'
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /30 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/30 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~G'8%PG'8%PG'.qMF`hhLF`__IFEDVHFE;MEF)uDDF)l;AEcQ2@EcH)=EH,u<EH#l9E,]c8E,TZ5Df9Q4
Df9N2DJj?0DJj?0DJj<.D/F-,D/F**Ci!p(Ci!m&CMR^$CMR["C2.KuC2.KuC2.HsBk_9qBk_6oBP;'m
BP;'lB4kjiB4kjhAnGXeAnGXdAS#FaAS#F`A7T4]A7T4\@q0"Y@q0"X@U`eU@U`eT@:<SQ@:<SP?smAM
?smAM?XI/I?XI/I?XI/I?=$rE?=$rE?!U`A?!U`A>[1N=>[1N=>?b<9>?b<9>$>*5>$>*5=]nm1=BJ[-
~>
0 <~hr!>Khqm5HhVI#Dh;$f@gt^]?gtUT<gY1B8g=b04g"=s0f\"j/f[na,f@JO(f%&=$e^`4#e^W*ueC<!t
eC;sre'landaHRldaHOjdF$=fd*U.dd*U+bcd0n^cHa\Zc-=MXc-=JVbfn8RbKJ&Nb0%iJaiVWFaN2EB
a2c6@a2c6?`l?$;`Pog7`5KU3_o'C/_SX1+_83t(_83t'^qdb#^V@Ot^:q=p]tM+l]Y(nh]=Y\d]"5J`
\[f8]\@B&Y\@B&Y\$riU[^NWQ[C*EM['[3IZa7!EZa7!EZEgdAZ*CR=Yct@9YHP.5Y-+q1Xf\_-XK8M)
~>
0 ]
>>
368.13 140.87 368.13 208.18 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/30 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
110.04 378.61 mo
178.549 378.61 li
178.549 312.5 li
110.04 312.5 li
cp
.684749 .498451 .383001 .113313 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 9636 882 <0001004501b4022e023d000f000eb400070bed04002fed012fcd31300114
06232122263534363321321e02022e1211fe5e1212121201a2080d090501
f9271e1f26261e06111a>PBAAAA+CALIBRI AddT42Char 
2 2930 100 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/hyphen 882 def
/T 100 def
end
PBAAAA+CALIBRI /Encoding get
dup 45 /hyphen put
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFY+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash 17{/.notdef}rp /A 
/B /C /D 2{/.notdef}rp /G /.notdef /I 3{/.notdef}rp 
/M 2{/.notdef}rp /P 2{/.notdef}rp /S /T /U 11{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
GFQXFY+CALIBRI nf
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
115.61 332.96 mo
(P)sh
122.842 332.96 mo
(i)sh
126.055 332.96 mo
(n)sh
133.411 332.96 mo
(g)sh
140 332.96 mo
(-)sh
144.29 332.96 mo
(p)sh
151.645 332.96 mo
(o)sh
159.028 332.96 mo
(n)sh
166.384 332.96 mo
(g)sh
117.52 349.76 mo
(T)sh
124.342 349.76 mo
(a)sh
131.048 349.76 mo
(n)sh
138.404 349.76 mo
(s)sh
143.879 349.76 mo
(p)sh
151.235 349.76 mo
(o)sh
158.618 349.76 mo
(s)sh
164.093 349.76 mo
(e)sh
171.059 349.76 mo
( )sh
129.43 366.56 mo
(U)sh
138.413 366.56 mo
(n)sh
145.768 366.56 mo
(i)sh
148.981 366.56 mo
(t)sh
153.671 366.56 mo
(s)sh
185.13 428.554 mo
(G)sh
193.962 428.554 mo
(P)sh
201.195 428.554 mo
(U)sh
53.9599 377.41 mo
53.9599 411.07 li
.684749 .498451 .383001 .113313 cmyk
@
56.7299 410.38 mo
53.9599 418.69 li
51.1899 410.38 li
56.7299 410.38 li
cp
ef
53.9599 306.54 mo
53.9599 257.45 li
@
51.1899 258.14 mo
53.9599 249.83 li
56.7299 258.14 li
51.1899 258.14 li
cp
ef
gsave
2.92992 449.848 mo
286.39 449.848 li
286.39 418.685 li
2.92992 418.685 li
cp
eclp
2.32991 450.448 mo
286.99 450.448 li
286.99 418.085 li
2.32991 418.085 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
/31 
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [368.5 69.632 368.5 102 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&e5`Y&e5]X&IoTW&IoTW&IoTW&IfNV&IfNV&IfNV&IfNV&IfNV&IfKU&IfKU&IfKU&IfKU&IfKU&IfKU
&IfKU&IfKU&.K?S&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B6Q&.B6Q&.B6Q&.B6Q&.B6Q
%gs'O%gs'O%gs'O%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%LWmL%LNgK%LNgK
%LNgK%LNgK%LNgK%LNgK%LNgK%LNgK%LNdJ%LNdJ%LNdJ%13[I%13[I%1*UH%1*UH%1*UH%1*RG%1*RG
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /31 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
/31 {
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&J5Te&J5Te&J,Kb&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa
&.fBa&.fBa&.f?_%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0\%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1EXR$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k*OQ$k*LO$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M
$O[=L$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A
~>
<~(Ddl((D[c%()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()7Q!'bqGu'bqGu'bqGu'bqGu'bqGu
'bqGu'bqGu'bqDs'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM2o',)#m',)#m',)#m',)#m
',)#m',)#m',)#m',)#l&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfh&J5Te&J5Te
&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa%hB0]
~>
0 ]
>>
368.5 69.632 368.5 102 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/31 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
2.92992 449.848 mo
286.39 449.848 li
286.39 418.685 li
2.92992 418.685 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
21.3099 438.467 mo
(D)sh
29.9233 438.467 mo
(e)sh
36.8891 438.467 mo
(s)sh
42.3647 438.467 mo
(t)sh
47.0542 438.467 mo
(i)sh
50.2672 438.467 mo
(n)sh
57.6227 438.467 mo
(a)sh
64.3288 438.467 mo
(t)sh
69.0183 438.467 mo
(i)sh
72.2312 438.467 mo
(o)sh
79.6141 438.467 mo
(n)sh
86.9696 438.467 mo
( )sh
90.1345 438.467 mo
(p)sh
97.4901 438.467 mo
(r)sh
102.371 438.467 mo
(o)sh
109.754 438.467 mo
(c)sh
115.674 438.467 mo
(e)sh
122.64 438.467 mo
(s)sh
128.115 438.467 mo
(s)sh
133.591 438.467 mo
(o)sh
140.974 438.467 mo
(r)sh
145.85 438.467 mo
(/)sh
151.26 438.467 mo
(D)sh
159.873 438.467 mo
(e)sh
166.839 438.467 mo
(s)sh
172.315 438.467 mo
(t)sh
177.004 438.467 mo
(i)sh
180.217 438.467 mo
(n)sh
187.573 438.467 mo
(a)sh
194.279 438.467 mo
(t)sh
198.968 438.467 mo
(i)sh
202.181 438.467 mo
(o)sh
209.564 438.467 mo
(n)sh
216.92 438.467 mo
( )sh
220.085 438.467 mo
(m)sh
231.268 438.467 mo
(e)sh
238.234 438.467 mo
(m)sh
249.418 438.467 mo
(o)sh
256.801 438.467 mo
(r)sh
261.682 438.467 mo
(y)sh
160.5 241.33 mo
160.5 296.07 li
.684749 .498451 .383001 .113313 cmyk
@
163.27 295.38 mo
160.5 303.69 li
157.73 295.38 li
163.27 295.38 li
cp
ef
129.11 378.61 mo
129.41 411.07 li
@
132.17 410.35 mo
129.48 418.69 li
126.63 410.4 li
132.17 410.35 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Italic Initial
ct_T42Dict begin
-0.723 -0.273 1.258 1.012
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+CALIBRI,Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dfb846000000cc000000606376
7420ba7ecec70000012c000005146670676da1ea42ac0000064000000913
676c79663644826e0000732400001b3c68656164eb42388b00000f540000
0036686865610da90e4400000f8c00000024686d7478600b066000000fb0
0000260a6c6f6361e4c0e14f000035bc00001eda6d61787019cf118f0000
5498000000206e616d65cafd476d000054b800000d68707265705fc3ffe0
0000622000001102676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
0202040a0204e00002ff4000acff00000001000000004d53202000010000
00a00600fe0001c4079e02262000019f0000000003bd0511000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
00000000000000000000004a004c00540055005600570059004f004e004f
00500051004d005d005f00610063006400650066006700680069006a006b
006c006d006e006d0066006f007000710072007300740075007600710074
00700071007200740075007600780079007a007d00780079007a007b007c
007d0079007c007a007c007d007e007f00800081007e007f008000810082
007f008000810082007e007f008000810082008300850083008400850086
008700880089008600880089008300840085008600870088008900830084
00850086008700880089008a008b008c008d008e008f008a008b008c008d
008f008a008b008c008d008e008f008a008b008c008d008e008f00900095
00900091009200930094009500980099009a009b009c0090009100930096
0097009b009c009f00a20094009600900091009200930094009500960097
00980099009a009b009c009d009e009f00a000a100a200a300a600a70090
00910092009300940095009600980099009f00bc00bd00c100c600be00bf
00bf00c100c200b900be00c200df00e000e400e700e800e9012b01360147
00f200f400cf00640066006a006c006d0070006c006d0069006c00670073
00740075007600770078007a007b007c007d007e00810084008500860087
00880089008a0076007a007b007c007e007f008000820083008400870088
0089008a0077008500870079008200840085008600870088008a0079007a
007c007d007e0081008300840086008700880089008b008c008d008e008f
00900091009200940095008b008c008d008e008f0093009400950093008b
008c008d008e00900091009200930094008c008d008e008f009000910092
009300940095009700980099009a009b009c0096009700980099009a009b
009c009a009c009600980099009a009b009c00960097009b009c009d009e
009f00a000a100a2009d009e009f00a000a100a200a1009d009e009f00a0
00a100a2009d009e009f00a000a100a200a300a500a300a400a500a600a7
00a300a500a300a400a500a600a700a300a400a500a600a700a800a900a8
00a900aa00ab00ac00a800ab00ac00a800a900aa00ab00ac00a800a900aa
00ab00ac00ad00ae00af00b000b100b300b500b600b700b800af00b000b1
00b300b400b700ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700ba00bb00bc00bd
00bf00c000c100c200c300c400ba00bb00bf00c300b900ba00bb00bc00bf
00c100c200c300ba00bc00bf00c200c700c900cb00cc00cd00c500c600c7
00c600c700cb00ce00cf00d100d200db00dc00de00df00e000e400d600e8
00e90123012b00d000d1042600d8050e010503c000c2024e0078042600d7
02990092000005e4000e40465f5e5d5c5b5a59585554535251504f4e4d4c
4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c282625
2423221f181411100f0d0b0a090807060504030201002c4523466020b026
60b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061
b004262348482d2c45234660b0406120b06660b004262348482d2c452346
2361b0406020b02661b04061b004262348482d2c0110203c003c2d2c2045
2320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d4423
5920b0042651582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045b0
0325456164b050515845441b2121592d2c2045b0004360442d2c01b00643
b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c6423
64615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c
4565b02c234445b02b23442d2c4b525845441b2121592d2c01b005251023
208af500b0016023edec2d2c01b005251023208af500b0016123edec2d2c
01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161011020
3c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b0
8051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c
6423648bb81555621bb200802f2b59b002602d2c0c6423648bb840006260
23212d2c4523456023456023456023766818b08062202d2cb00426b00426
b00425b0042545234520b003266062636820b0032661658a2344442d2c20
45b0005458b040442045b04061441b2121592d2c45b1302f4523456160b0
016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b00325
45695358441b2121591b2121592d2c45b01443b0006063b0016069442d2c
b02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033ff
e0b134201bb3330034005944442d2cb0164358b00326458a586466b01f60
1b64b020606620581b21b04059b001615923586559b02923442310b029e0
1b2121212121592d2cb0164358b004254564b020606620581b21b04059b0
016123586559b0292344b00425b00725082058021b0359b0052510b00425
2046b0042523423cb0072510b006252046b00425b0016023423c2058011b
0059b0052510b00425b029e0b0072510b00625b029e0b00425b007250820
58021b0359b00425b003254348b00625b00325b0016043481b2159212121
212121212d2cb0164358b004254564b020606620581b21b04059b0016123
581b6559b0292344b00525b00825082058021b0359b0042510b005252046
b0042523423cb00425b0072508b0072510b006252046b00425b001602342
3c2058011b0059b0042510b00525b029e0b02920456544b0072510b00625
b029e0b00525b00825082058021b0359b00525b003254348b00425b00725
08b00625b00325b0016043481b2159212121212121212d2c02b004252020
46b004252342b0052508b003254548212121212d2c02b0032520b0042508
b0022543482121212d2c452320451820b00050205823652359236820b040
505821b04059235865598a60442d2c4b53234b515a5820458a60441b2121
592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d
2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d2c
b002435458b0472b1b212121592d2cb002435458b0482b1b21212121592d
2cb002435458b0492b1b212121592d2c208a08234b538a4b515a5823381b
2121592d2c0020b200400325b0062649618b3812342d2c01462346602346
6123201020468a61b8ff80628ab140408a704560683a2d2c208a2349648a
2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b94000020063b80400885458b20240
0243604259595959592d2c451868234b51582320452064b04050587c5968
8a6059442d2cb00016b00225b0022501b001233e00b002233eb10102060c
b00a236542b00b234201b001233f00b002233fb10102060cb006236542b0
072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b004
2510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58b0
092b5920b005254ab0042547b004254760b0062547b0806361b00225b000
5558b00325b00725496359b0082558001b0159b00425b0062549b009255c
b009255a58b0092b59b0072546b0806361b0032520b0005558631b215961
2320b0005558b080631b21b08059b0592bb006255c586959b00425202010
b00048233ab0062658001b0159b0052658b003252f598a12233221212d2c
b00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b007
2559b00225b00225070cb005256323b00625636020b94000040063535821
b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1bb0
0426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b
2eb00525b0052507595920b0005558b00525b0052587b00725b007250bb0
092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b00825
b00b254923b00625b0062587b00a2510b00b25c15920b00051b800522378
b00161b00225b00725b0072507b00a25b00d254961b08062b00525b00525
0bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b006
25b0062507b00925b00c2549b0032554b8ffa72379212121212121212121
2121212d2c23b0005458b9400000001bb900004000598ab0005458b94000
00001bb90000400059b05b2b2d2c08b0005458b9400000001bb900004000
590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b
2b2d2cb00426b00426080db00426b00426080db05b2b2d00000100000005
b85200c3569b5f0f3cf50019080000000000bbeb7ccc00000000cbdab888
fa34fdcb0a14081c000200090002000000000000000100000600fe0001c4
0aa0fa34fa0b0a140800019a0000000000000000000000000399040e0000
000000000000000001cf000004a1ffca0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004ec005800000000000000000000000003e800580000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000204005200000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000035d0058000000000000000000000000000000000000000006d7
005200000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000004220052000000000000000000000000
000000000000000000000000039e00040000000000000000000000000000
00000000000003e600a30000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000041d0051000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000354004c00000000000000000000000000000000000000000000
0000000000000000000000000000041d0051000000000000000000000000
03d2004d0000000000000000000000000000000000000000000000000000
000000000000000000000271ff3d00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000654003f041d003f00000000
0000000000000000000000000000000000000000041b004e000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000041dfff8000000000000000002be003f000000000000
000000000000031d00090000000000000000000000000000000000000000
0000000000000000000000000000000002ae007100000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000029b00bb00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0205004a0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000033500f70000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000a800a800a800a801460146
014601460146014601460146014601460146014601460146014601460146
01460146014601b401b401b401b4024d024d024d024d024d024d024d024d
024d024d024d024d024d024d024d024d024d024d024d0294029402940294
0294029402940294029402940294029402940294029402ed02ed02ed02ed
02ed02ed039e039e039e039e039e039e039e039e039e039e039e039e039e
039e039e039e039e039e039e042604260426042604260426042604e804e8
04e804e804e804e805440544054405440544054405440544054405440544
054405440544054405440544054405440544054405440544054405440544
054405440544054405440544054405440544054405440544054405440544
054405440544054405440544054405440544054405440544054405440544
054405440544054405440544054405440544054405440544054405440544
054405440544054405440544054405440544054405440544054405440544
054405440544054405440544054405440544054405440544054405440544
054405440544054405440544054405440544054405440544054405440544
054405440544054405440544054405440544054405440544054405440544
054405440544054405440544054405440544054405440544054405440544
05440544054405440544054405440544054405440544054405df05df05df
05df05df05df05df05df05df05df05df05df05df05df066a066a066a066a
066a066a066a066a066a066a0707070707070707079e079e079e079e079e
079e079e079e079e079e0857085708570857085708570857085708570857
085708570857085708570857085708570857085708570857085708570857
085708570857085708570857085708570857085708570857085708570857
085708570857085708570857085708570857085708570857085708570857
085708570857085708570857085708570857085708570857085708570857
0857085708570857085708570857092a09bd09bd09bd09bd09bd09bd09bd
0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0acf0acf0acf
0b500b500b500b500c050c050c050c050c050c050c050c050c050c050ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca9
0ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90ca90d0e0d0e0d0e0d0e
0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d0e0d420d420d420d420d42
0d420d420d420d420d420d420d420d420d420d420d420d420d420d420d42
0d420d420d420d420d420d420d420d420d420d420d420d420d420d420d42
0d420d420d420d420d420d420d420d420d420d420d420d420d420d420d42
0d420d420d420d420d420d420d420d420d420d420d420d420d420d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e
0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e0d9e000000010000
0f6c005c00050000000000020010002f0060000009ed1102000000000000
002d02220000000300000000006400000000000300000001000e00640000
000300000002000c032a0000000300000003003203040000000300000004
001c031a0000000300000005001803360000000300000006001c034e0000
0003000000070076036a0000000300000008002a000e0000000300000009
002003e0000000030000000a02a00064000000030000000b005604000000
00030000000c002a0456000000030000000d02980480000000030000000e
006c07180001000000000000003207840001000000000001000707b60001
000000000002000609190001000000000003001909060001000000000004
000e09110001000000000005000c091f0001000000000006000e092b0001
000000000007003b093900010000000000080015078b0001000000000009
00100974000100000000000a015007b6000100000000000b002b09840001
00000000000c001509af000100000000000d014c09c4000100000000000e
00360b100003000104090000006400000003000104090001000e00640003
000104090002000c032a0003000104090003003203040003000104090004
001c031a0003000104090005001803360003000104090006001c034e0003
0001040900070076036a0003000104090008002a000e0003000104090009
002003e0000300010409000a02a00064000300010409000b005604000003
00010409000c002a0456000300010409000d02980480000300010409000e
006c071800a9002000320030003100320020004d006900630072006f0073
006f0066007400200043006f00720070006f0072006100740069006f006e
002e00200041006c006c0020005200690067006800740073002000520065
007300650072007600650064002e00430061006c00690062007200690020
00690073002000610020006d006f006400650072006e002000730061006e
0073002000730065007200690066002000660061006d0069006c00790020
007700690074006800200073007500620074006c006500200072006f0075
006e00640069006e006700730020006f006e0020007300740065006d0073
00200061006e006400200063006f0072006e006500720073002e00200049
00740020006600650061007400750072006500730020007200650061006c
0020006900740061006c006900630073002c00200073006d0061006c006c
00200063006100700073002c00200061006e00640020006d0075006c0074
00690070006c00650020006e0075006d006500720061006c002000730065
00740073002e0020004900740073002000700072006f0070006f00720074
0069006f006e007300200061006c006c006f007700200068006900670068
00200069006d007000610063007400200069006e00200074006900670068
0074006c007900200073006500740020006c0069006e006500730020006f
0066002000620069006700200061006e006400200073006d0061006c006c
0020007400650078007400200061006c0069006b0065002e002000430061
006c0069006200720069002700730020006d0061006e0079002000630075
007200760065007300200061006e006400200074006800650020006e0065
007700200072006100730074006500720069007300650072002000740065
0061006d00200075007000200069006e0020006200690067006700650072
002000730069007a0065007300200074006f002000720065007600650061
006c002000610020007700610072006d00200061006e006400200073006f
006600740020006300680061007200610063007400650072002e004d0069
00630072006f0073006f00660074003a002000430061006c006900620072
00690020004900740061006c0069006300560065007200730069006f006e
00200035002e0037003200430061006c0069006200720069002d00490074
0061006c0069006300430061006c00690062007200690020006900730020
0061002000740072006100640065006d00610072006b0020006f00660020
0074006800650020004d006900630072006f0073006f0066007400200067
0072006f007500700020006f006600200063006f006d00700061006e0069
00650073002e004c00750063002800610073002900200064006500200047
0072006f006f00740068007400740070003a002f002f007700770077002e
006d006900630072006f0073006f00660074002e0063006f006d002f0074
00790070006f006700720061007000680079002f006300740066006f006e
007400730068007400740070003a002f002f0066006f006e007400660061
006200720069006b002e0063006f006d0059006f00750020006d00610079
00200075007300650020007400680069007300200066006f006e00740020
006100730020007000650072006d00690074007400650064002000620079
0020007400680065002000450055004c004100200066006f007200200074
00680065002000700072006f006400750063007400200069006e00200077
00680069006300680020007400680069007300200066006f006e00740020
0069007300200069006e0063006c007500640065006400200074006f0020
0064006900730070006c0061007900200061006e00640020007000720069
006e007400200063006f006e00740065006e0074002e00200059006f0075
0020006d006100790020006f006e006c0079002000280069002900200065
006d0062006500640020007400680069007300200066006f006e00740020
0069006e00200063006f006e00740065006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
00200065006d00620065006400640069006e006700200072006500730074
00720069006300740069006f006e007300200069006e0063006c00750064
0065006400200069006e0020007400680069007300200066006f006e0074
003b00200061006e006400200028006900690029002000740065006d0070
006f0072006100720069006c007900200064006f0077006e006c006f0061
00640020007400680069007300200066006f006e007400200074006f0020
00610020007000720069006e0074006500720020006f00720020006f0074
0068006500720020006f0075007400700075007400200064006500760069
0063006500200074006f002000680065006c00700020007000720069006e
007400200063006f006e00740065006e0074002e0068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f0066006f006e00740073002f00640065006600610075006c0074002e
0061007300700078a92032303132204d6963726f736f667420436f72706f
726174696f6e2e20416c6c205269676874732052657365727665642e4361
6c696272692069732061206d6f6465726e2073616e732073657269662066
616d696c79207769746820737562746c6520726f756e64696e6773206f6e
207374656d7320616e6420636f726e6572732e2049742066656174757265
73207265616c206974616c6963732c20736d616c6c20636170732c20616e
64206d756c7469706c65206e756d6572616c20736574732e204974732070
726f706f7274696f6e7320616c6c6f77206869676820696d706163742069
6e2074696768746c7920736574206c696e6573206f662062696720616e64
20736d616c6c207465787420616c696b652e2043616c696272692773206d
616e792063757276657320616e6420746865206e65772072617374657269
736572207465616d20757020696e206269676765722073697a657320746f
2072657665616c2061207761726d20616e6420736f667420636861726163
7465722e4d6963726f736f66743a2043616c69627269204974616c696356
657273696f6e20352e373243616c696272692d4974616c696343616c6962
726920697320612074726164656d61726b206f6620746865204d6963726f
736f66742067726f7570206f6620636f6d70616e6965732e4c7563286173
292064652047726f6f74687474703a2f2f7777772e6d6963726f736f6674
2e636f6d2f7479706f6772617068792f6374666f6e7473687474703a2f2f
666f6e7466616272696b2e636f6d596f75206d6179207573652074686973
20666f6e74206173207065726d6974746564206279207468652045554c41
20666f72207468652070726f6475637420696e2077686963682074686973
20666f6e7420697320696e636c7564656420746f20646973706c61792061
6e64207072696e7420636f6e74656e742e20596f75206d6179206f6e6c79
2028692920656d626564207468697320666f6e7420696e20636f6e74656e
74206173207065726d69747465642062792074686520656d62656464696e
67207265737472696374696f6e7320696e636c7564656420696e20746869
7320666f6e743b20616e6420286969292074656d706f726172696c792064
6f776e6c6f6164207468697320666f6e7420746f2061207072696e746572
206f72206f74686572206f75747075742064657669636520746f2068656c
70207072696e7420636f6e74656e742e687474703a2f2f7777772e6d6963
726f736f66742e636f6d2f7479706f6772617068792f666f6e74732f6465
6661756c742e61737078b10903b8027ab21e3e1fb80279b21e3e1fb80278
b21e0b1fb80277b21e0b1fb80276b21e3a1fb80275b21e3a1fb80274b21e
3e1fb80273b21e3b1fb80272b21e3c1fb80271b21e3c1fb80270b21e3c1f
b8026fb21e3d1fb8026eb21e3d1fb8026db21e3e1fb8026cb21e3e1fb802
6bb21d411fb8026ab21d411fb80269b21d421fb80268b21d431fb80267b2
1d431fb80266b21d431fb80265b21d431fb80264b21d431fb80263b21d41
1fb80262b21d421fb80261b21d421fb80260b21d431fb8025fb21d431fb8
025eb21c451fb8025db21c451fb8025cb21c451fb8025bb21c451fb8025a
b21c451fb80259b21c451fb80258b21c451fb80257b21c451fb80256b21c
451fb80255b21c451fb80254b21c451fb80252b21c451fb80251b21c451f
b80250b21c451fb8024fb21c451fb8024eb21c441fb8024db21c451fb802
4cb21c451fb8024bb21c451fb8024ab21c451fb80249b21c451fb80248b2
1c451fb80247b21c451fb80246b21c451fb80245b21c451fb80244b21b49
1fb80243b21b4a1fb80242b21b4a1fb80241b21b4a1fb80240b21b4b1fb8
023fb21b4b1fb8023eb21b4c1fb8023db21b4c1fb8023cb21b4c1fb8023b
b21b4c1fb8023ab21b4c1fb80253b21b4c1fb80239b21b491fb80238b21b
491fb80237b21b4a1fb80236b21b4a1fb80235b21b4a1fb80234b21b4b1f
b80233b21b4b1fb80232b21b4c1fb80231b21b4c1fb80230b21b4c1fb802
2fb21b4c1fb8022eb21b4c1fb8022db21b491fb8022cb21b4a1fb8022bb2
1b4b1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b49
1fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223b21b4b1fb8
0222b21b4c1fb80221b21b4c1fb80220b21b4c1fb8021fb21b4c1fb8021e
b21b4c1fb8021db21a4e1fb8021cb21a4e1fb8021bb21a4f1fb8021ab21a
4f1fb80219b21a4f1fb80218b21a4e1fb80217b21a4e1fb80216b21a4f1f
b80215b21a4f1fb80214b21a4f1fb80213b21a4e1fb80212b21a4e1fb802
11b21a4f1fb80210b21a4e1fb8020fb21a4e1fb8020eb21a4f1fb8020db2
1a4f1fb8020cb21a4f1fb8020bb21a4f1fb8020ab21a4f1fb80209b21950
1fb80208b219511fb80207b219511fb80206b219511fb80205b219511fb8
0204b219501fb80203b219511fb80202b219511fb80201b219511fb80200
b219511fb801ffb219511fb801feb219511fb801fdb219501fb801fcb219
511fb801fbb219511fb801fab219511fb801f9b219511fb801f8b219511f
b801f7b219511fb801f6b218531fb801f5b218531fb801f4b218541fb801
f3b218541fb801f2b218541fb801f1b218541fb801f0b218531fb801efb2
18531fb801eeb218541fb801edb218541fb801ecb218541fb801ebb21854
1fb801eab218531fb801e9b218531fb801e8b218531fb801e7b218541fb8
01e6b218541fb801e5b218541fb801e4b218541fb801e3b218531fb801e2
b218531fb801e1b218541fb801e0b218541fb801dfb218541fb801deb218
541fb801ddb217561fb801dcb217561fb801dbb217571fb801dab217571f
b801d9b217561fb801d8b217561fb801d7b217571fb801d6b217571fb801
d5b217571fb801d4b217571fb801d3b217561fb801d2b217571fb801d1b2
17561fb801d0b217561fb801cfb217571fb801ceb217571fb801cdb21757
1fb801ccb217571fb801cbb217571fb801cab217561fb801c9b217561fb8
01c8b217571fb801c7b217571fb801c6b217571fb801c5b217571fb801c4
b2163e1fb801c3b2163f1fb801c2b2163f1fb801c1b2165b1fb801c0b216
5b1fb801bfb2165b1fb801beb2165b1fb801bdb2165b1fb801bcb2165b1f
b801bbb2165b1fb801bab2163f1fb801b9b2163f1fb801b8b2165b1fb801
b7b2165b1fb801b6b2165b1fb801b5b2165b1fb801b4b2165b1fb801b3b2
165b1fb801b2b2165b1fb801b1b2163f1fb801b0b2163e1fb801afb2163f
1fb801aeb2163f1fb801adb2165b1fb801acb2165b1fb801abb2165b1fb8
01aab2165b1fb801a9b2165b1fb801a8b2163e1fb801a7b2163f1fb801a6
b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b216
5b1fb801a1b2165b1fb801a0b2165b1fb8019fb2165b1fb8019eb215621f
b8019db215621fb8019cb215631fb8019bb215641fb8019ab215651fb801
99b215661fb80198b215661fb80197b215661fb80196b215661fb80195b2
15661fb80194b215661fb80193b215661fb80192b215611fb80191b21562
1fb80190b215631fb8018fb215641fb8018eb215641fb8018db215651fb8
018cb215661fb8018bb215661fb8018ab215631fb80189b215641fb80188
b215551fb80187b215611fb80186b215621fb80185b215621fb80184b215
631fb80183b215651fb80182b215661fb80181b215661fb80180b215661f
b8017fb215661fb8017eb215661fb8017db215661fb8017cb215661fb801
7bb215661fb8017ab215451fb80179b215611fb80178b215621fb80177b2
15621fb80176b215631fb80175b215641fb80174b215641fb80173b21565
1fb80172b215661fb80171b215661fb80170b215661fb8016fb215661fb8
016eb215661fb8016db215661fb8016cb215661fb8016bb215551fb8016a
b215451fb80169b215451fb80168b215361fb80167b215361fb80166b214
821fb80165b214561fb80164b2147f1fb80163b214551fb80162b214561f
b80161b214401fb80160b214551fb8015fb214561fb8015eb2147e1fb801
5db214831fb8015cb214851fb8015bb2133d1fb8015ab2131e1fb80159b2
131e1fb80158b2130a1fb80157b2130a1fb80156b2130b1fb80155b2133a
1fb80154b2133a1fb80153b2133a1fb80152b2133b1fb80151b2133c1fb8
0150b2133c1fb8014fb212451fb8014eb212461fb8014db212461fb8014c
b212451fb8014bb212451fb8014ab212461fb80149b212461fb80148b212
461fb80147b212441fb80146b212451fb80145b212461fb80144b212461f
b80143b211471fb80142b211571fb80141b211581fb80140b211591fb801
3fb2115a1fb8013eb2115a1fb8013db2115b1fb8013cb2115b1fb8013bb2
115b1fb8013ab2115b1fb80139b2112b1fb80138b2112c1fb80137b21139
1fb80136b211391fb80135b211461fb80134b211471fb80133b211471fb8
0132b211551fb80131b211551fb80130b211561fb8012fb211561fb8012e
b211571fb8012db211571fb8012cb211581fb8012bb211591fb8012ab211
591fb80129b2115a1fb80128b2115a1fb80127b2115b1fb80126b2115b1f
b80125b2115b1fb80124b2115b1fb80123b211591fb80122b2115a1fb801
21b211391fb80120b211471fb8011fb211561fb8011eb211561fb8011db2
11591fb8011cb211591fb8011bb2115b1fb8011ab2115b1fb80119b2115b
1fb80118b211561fb80117b211561fb80116b211571fb80115b211571fb8
0114b211581fb80113b2115a1fb80112b2115a1fb80111b2115b1fb80110
b2115b1fb8010fb2115b1fb8010eb2115b1fb8010db2115a1fb8010cb211
5b1fb8010bb2105d1fb8010ab2105e1fb80109b2105f1fb80108b2105f1f
b80107b2105f1fb80106b2105f1fb80105b2105d1fb80104b2105e1fb801
03b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff105f1fff105d
1ffe105f1ffd105f1ffc105f1ffb105f1ffa105d1ff9105e1ff8105f1ff7
105f1ff6105f1ff5105f1ff40f621ff30f621ff20f631ff10f641ff00f64
1fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641fe90f641fe8
0f641fe70f641fe60f621fe50f621fe40f641fe30f621fe20f621fe10f63
1fe00f641fdf0f641fde0f641fdd0f641fdc0f641fdb0f641fda0e671fd9
0e681fd80e681fd70e681fd60e681fd50e671fd40e681fd30e681fd20e68
1fd10e671fd00e681fcf0e681fce0e681fcd0e681fcc0e681fcb0e681fca
0e681fc90e681fc80d6b1fc70d6c1fc60d2a1fc50d6c1fc40d2c1fc30d6b
1fc20d6c1fc10d6d1f40ffc00d6a1fbf0d691fbe0d681fbd0d6b1fbc0d31
1fbb0d311fba0d311fb90c711fb80c721fb70c731fb60c741fb50c741fb4
0c741fb30c731fb20c741fb10d311fb00d311faf0d311fae0d311fad0d31
1fac0d311fab0d311faa0d311fa90b7e1fa80b7a1fa70b791fa60b7a1fa5
0b7c1fa40b7d1fa30b7e1fa20b7e1fa10b7e1fa00b7e1f9f0b7e1f9e0b7e
1f9d0b7e1f9c0b7e1f9b0b7e1f9a0b2d1f990b2d1f980aa71f970aa51f96
0aa71f950aa71f940aa71f930aa71f920a681f910a821f900a9b1f8f0a9d
1f8e0a9f1f8d0aa71f8c0aa71f8503251f8403381f8301381f8255805581
ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a
7c557a557bab7a557955775578ab7755ba028900660288403c5576ab7555
04751475747503f47501ab750144750130750102007510752075030c7455
725573ab7255007250728072b072043bb072e072020072010ab8ffc0b372
1b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a03251f6938
675568ab67556638645565ab645563386255613860555f385d555eab5d55
5c385a555bab5a55593858555703251f5638545555ab54555338515552ab
51554f384e554e03251f4d384b554cab4b554a38485549ab485547384655
4503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b401be0
1bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f197f198f
19030f18cf18024018292c460f17cf17df17ef1704134017292e46001610
1620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8
ffc0404d162326460f15010f151f1502451f15010011e011f0110315bf10
cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e
3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c505446
0f0b1f0b02553f0b4f0b02400b3f4346400b2d3046000301200101000110
0120010308b8ffc0b301151f46b80100b316010501b80190b154532b2b4b
b807ff524bb008505bb00188b02553b00188b040515ab00688b000555a5b
58b101018e59b101024354b0144b515a58b101018e59858d8d00421d4bb0
1d5358b0a01d594bb0805358b0401d594bb0ff5358b0001db1160042592b
5e7375732b2b745e732b2b5e73742b73742b7374745e7301755e73742b2b
2b2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b
2b5e735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b185f5e000000>
[6973 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> HIBBAA+CALIBRI,Italic AddT42Char 
1 6684 856 <0001004afff7012a00e00017001fbc00000272000c00130155b2074c28ba
027f028000582b2b3fed012fed313025140e0423222e0235343e0433321e
02012a050a0f182c221c241408050b0f1729261d231407990e262822180c
08131b1110272621170d0a131a00>HIBBAA+CALIBRI,Italic AddT42Char 
1 336 4 <0002ffcafffa042705140022002600bdba027d027e00582bb10102435558
403a181013014d250c0d240d0d16260b0a230a23221824240a0116242326
25ed400b232218031d0a0d01160428000c0116030c0c121d521255055528
2b183f3f3f12392f005f5e5d2b1739121739331a4ded321133012fc43239
192f333333107d87c4c41101331087c4c43130012b1b402124232625ed40
0b232218031d0a0d01160428000c0116030c0c121d5212550555282b183f
3f3f12392f005f5e5d2b1739121739331a4ded32113331305925160e0223
222e02270321030e03232226263637013e0333321e021707230121042403
03132822162011080130fde5a9050d17251b1e240e060b02a207101a281d
2129190a028f01fea201c03d161b0e0403070c09013bfec80a0d0803050e
1b1604b20b0e080303080f0b8dfd7b00>HIBBAA+CALIBRI,Italic AddT42Char 
1 652 24 <00020058000004c5050e001800270064ba027d027e00582bb10102435558
b900000237400919201f100f100f091fb80105b2135120b80124b3400954
282b183f1a4ded3fed123939012fc63233d4ed31301bb3100f091fb80105
b2135120b80124b3400954282b183f1a4ded3fed12393931305901140e06
2321222e02371336363321321e0207342e0223230333323e0404c512273e
597596b881fee10d17100605e6072f1e011195c48341b629588971b4c9b2
7aa47e58381a033c418d8d887b684c2a07101b140482271f3f78ad7d4a7c
5933fc113b6586949b00>HIBBAA+CALIBRI,Italic AddT42Char 
1 3284 282 <00020051ffed0439056d002c003f0087ba027f028000582bb10102435558
400a212d3f222c003f092237b8021e401a15222c032746212d3f09080006
0e30f91c4a3af8400e4d034c282b183f3f1a4ded3fed1217393f12393901
2fedc4392f33327d870ec4c431301b4019222c032746212d3f090800060e
30f91c4a3af8400e4d034c282b183f3f1a4ded3fed1217393f1239393130
5925060623222e0237370e0323222e0435343e0433321e0217133e033332
1e020701262623220e0415141633323e0237032d03242a151a100502200d
445d723b3b573b25150716304b6a8b582b4c3e341566010a142019181f12
0502fed62f6d443555443120104249376f604a1219110e04070b09a8214b
3f291f3445494a1f3a90918b6b4213212e1901fe070d070505070d07fd62
454831526a716e2e61673c6a9257>HIBBAA+CALIBRI,Italic AddT42Char 
1 3598 286 <0002004dffed039d03ca002e003c0087ba027f028000582bb10102435558
b62a323706040009b8020e400923110c1e031414232fb8020d4015002306
be37372a1e11110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f11
12392fed012fd4ed12392f173910ed11173931301b401306be37372a1e11
110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f1112392fed3130
5901140e022323060615141633323e0233321615140e02070e0323222e02
35343e0433321e0207342623220e020733323e02039d4088d4946a070563
6f40664b3009090904080d080c3d5464325986592c193656779c6254754b
22a9504a41644d371166698d552302e5456e4e2a213e1b646a1316130d0c
0a1c1d1a090c17130c28537c5441959286663e2a425137333f2d4c65381a
2d3c>HIBBAA+CALIBRI,Italic AddT42Char 
1 3900 296 <0001ff3dfe93033105780055008eba027f028000582bb10102435558b312
1e111fbb01e5003b001101e54023493c4840493b4049161649403b04002a
0ce34e471e3ce33b1f2412484836e340244f282b183f1a4ded3fc4123939
fdc43fed012fc417392f2f2f2f1112393910ed10ed11393931301b40130c
e34e471e3ce33b1f2412484836e340244f282b183f1a4ded3fc4123939fd
c43fed31305901140e0423222e0223220e02070733321615140e04232303
0e0323222627262635343e0433321e0233323e02371323222635343e0433
33373e0333321e021716160331020306080a0607151c26172b3d2c1e0b11
c90b0d0406090b0e07caab113a546e452d39070404030406080a07070d0f
15102a3d2b1d0ca4800a0b0205080c0d0a7e19103c556f431630291f0606
06053704111517140c0809081a3754395a0f110b181715100afcac547b51
270e06050c0a04131517140c0303031a37543b03320d1208171816120b7d
527b502705090c060512>HIBBAA+CALIBRI,Italic AddT42Char 
1 4986 381 <0002004effed03d103ca0017002f0058ba027f028000582bb10102435558
b90000021f4009001810180213031824b8021e400b0c1df5134a29e34007
4d282b183f1a4ded3fed012fedd45f5e5ded31301b400a1df5134a29e340
074d282b183f1a4ded3fed31305901140e0423222e0235343e0433321e02
07342e0223220e0415141e0233323e0403d11c395877975d6089582a1b3a
5777975d6089592aae15314f383c624d39251216314e383d614d39251202
734a9a8f7e5e372e5880514a9a8e7f5e372f58805a3250371e2b49626f75
383250381e2b4a627074>HIBBAA+CALIBRI,Italic AddT42Char 
1 5534 396 <0001003ffffa02f203ca0033006cba027f028000582bb10102435558400a
2811111d121c001d1c0cb801184010402d4a121c11281d2706172249174c
282b183f3f1217393f1a4ded012f2fc411331133113331301bb9000c0118
4010402d4a121c11281d2706172249174c282b183f3f1217393f1a4ded31
305901140e0423222e0223220e0207030e0323222e0237133e0333321e02
07073e0333321e02171602f20304080c0d080813171e1422595647114f02
0a142118191f110502b3010a141d14151b0f040121173f4a512711231e17
0606039c04171e201b12070a073b688e53fe6f080b080404080b08038507
0c080303080c07a4294c3922050709060600>HIBBAA+CALIBRI,Italic AddT42Char 
1 5792 400 <00010009ffed02eb03ca004600adba027f028000582bb10102435558bc00
0f01fd003b0034020e402b163b163b1600230f34401b45cf282005300540
0503050acf404a20f928002a102a020c032a2fde401b4d282b183f1a4dfd
d4005f5e5d2bed3ffdd4005d2bed11123939012fc439392f2f10ed10ed31
301b40240f34401b45cf2820053005400503050acf404a20f928002a102a
020c032a2fde401b4d282b183f1a4dfdd4005f5e5d2bed3ffdd4005d2bed
1112393931305901140e0223222e0223220e0215141e0415140e0223222e
0227262635343e0433321e0233323e0235342e0435343e0233321e021716
02eb060b0f090c2130432e2c442e1835505d4f353767925a2f5343300d08
070206070a0a070c2237523d374f3419344f5c4f35345f855126473c2c0b
0b036c0a212016131814192b371e28352a293b533f467957310e161b0c08
110c08161816120b1b1f1b1b2d3c212a352b2a3953404271532e0c12160b
0a00>HIBBAA+CALIBRI,Italic AddT42Char 
1 6154 410 <00010071ffef02c504ad0045008aba027f028000582bb101024355584029
362c2b372b42080941094137092b2b30371737170030424837413c082ce3
092b2136480ff840214d282b183f1a4ded3f123939ed32cd39393f012fcd
39392f2f123911331133107d87c4c41087c4c431301b4013424837413c08
2ce3092b2136480ff840214d282b183f1a4ded3f123939ed32cd39393f31
305901140e04232303060615141633323e0233321615140e02070e032322
2e0235343e02371323222635343e023333373e0333321e02070733321602
c502060a0b0e09e66504062b301b281d1608080905080c0708202a2f1738
52381b02050503657d0b0c060c130d7e2b010b142118181f1105012be60f
0a039309151616110afe0a153411332f090a090b0f0d1f1e1807070e0b06
18334d360c1d20200e01fa0d130e252016d6070c090404090c07d616>HIBBAA+CALIBRI,Italic AddT42Char 
1 0 0 <00050000fe7303da050e00030007003b00550056004fb52d162d16083c41
0a01ed00490007016400020020018c000800010164401204022537060351
1b0d117051015144070254003fdddedd5ddeddcd3fdddecd012fddedd6ed
10fdd6ed1239392f2f3130011121110111211101140e020707060623222e
02373736363333323e0235342e0223220e0223222635343e02373e033332
1e0201140e0207060623222e0235343e0237363633321e020103dafc5b03
4ffd06027b1f456e4e24021f1b0e140c050120051f17083d4f2e130f2135
2828402f1f070a060205080608293a4422445e3a1afeb503070b070a2016
161a0e0504070c0809201913190e04fe46050efaf2050efb43046cfb9403
313467523605980a0802040606bc1b17253b4621192b20130f13100c0e05
131612060713120b263d4afd8b08171a17070a0a070c100a091818160809
0a060c10fd38>HIBBAA+CALIBRI,Italic AddT42Char 
HIBBAA+CALIBRI,Italic /CharStrings get begin
/space 3 def
/period 856 def
/A 4 def
/D 24 def
/d 282 def
/e 286 def
/f 296 def
/o 381 def
/r 396 def
/s 400 def
/t 410 def
end
HIBBAA+CALIBRI,Italic /Encoding get
dup 32 /space put
dup 46 /period put
dup 65 /A put
dup 68 /D put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/GFQXFZ+CALIBRI,Italic /HIBBAA+CALIBRI,Italic findfont ct_VMDictPut
/GFQXFZ+CALIBRI,Italic*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 18{/.notdef}rp /A 2{/.notdef}rp /D 
31{/.notdef}rp /d /e /f 8{/.notdef}rp /o 2{/.notdef}rp /r 
/s /t 139{/.notdef}rp]
GFQXFZ+CALIBRI,Italic nf
GFQXFZ+CALIBRI,Italic*1 [12.0002 0 0 -12.0002 0 0 ]msf
65.4399 407.21 mo
(A)sh
72.3833 407.21 mo
(d)sh
78.5532 407.21 mo
(d)sh
84.7231 407.21 mo
(r)sh
88.8399 407.21 mo
(.)sh
91.8691 407.21 mo
( )sh
94.5799 407.21 mo
(f)sh
98.2419 407.21 mo
(o)sh
104.4 407.21 mo
(r)sh
108.514 407.21 mo
( )sh
74.5599 421.609 mo
(D)sh
81.9428 421.609 mo
(e)sh
87.6732 421.609 mo
(s)sh
92.3432 421.609 mo
(t)sh
96.3699 421.609 mo
(.)sh
gsave
207.03 319.28 mo
273.745 319.28 li
273.745 288.099 li
207.03 288.099 li
cp
eclp
206.43 319.88 mo
274.345 319.88 li
274.345 287.499 li
206.43 287.499 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [464.22 200.2 464.22 232.58 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~G6$P$G6$M#Fo^A!Fo^=uFTC4tFTC1sF9(%qF9("pEraknEraknEWF_lEWF\kE<+PiE<+PiDueDgDueDg
DZJ8eDZJ5dDZJ5dD?/)bD?/&aD#hr`D#ho_C]Mc]C]M`\CB2W[CB2TZCB2QYC&lEWC&lBVB`Q6TB`Q3S
BE6*RBE6'QB)opOB)omNAcTaLAcT^KAH9RIAH9RIA,sFGA,sCF@fX7D@fX4C@K=(A@K=%@@0!n>@0!k=
?i[_;?i[_;?i[\:?N@P8?N@M7?3%A5?3%>4>l_53>l_22>QD&0>QD#/>6(l->6(i,=ob]*=TGQ(=TGN'
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~G'8%PG'8%PG'.qMF`hhLF`__IFEDVHFE;MEF)uDDF)l;AEcQ2@EcH)=EH,u<EH#l9E,]c8E,TZ5Df9Q4
Df9N2DJj?0DJj?0DJj<.D/F-,D/F**Ci!p(Ci!m&CMR^$CMR["C2.KuC2.KuC2.HsBk_9qBk_6oBP;'m
BP;'lB4kjiB4kjhAnGXeAnGXdAS#FaAS#F`A7T4]A7T4\@q0"Y@q0"X@U`eU@U`eT@:<SQ@:<SP?smAM
?smAM?XI/I?XI/I?XI/I?=$rE?=$rE?!U`A?!U`A>[1N=>[1N=>?b<9>?b<9>$>*5>$>*5=]nm1=BJ[-
~>
0 <~hr!>Khqm5HhVI#Dh;$f@gt^]?gtUT<gY1B8g=b04g"=s0f\"j/f[na,f@JO(f%&=$e^`4#e^W*ueC<!t
eC;sre'landaHRldaHOjdF$=fd*U.dd*U+bcd0n^cHa\Zc-=MXc-=JVbfn8RbKJ&Nb0%iJaiVWFaN2EB
a2c6@a2c6?`l?$;`Pog7`5KU3_o'C/_SX1+_83t(_83t'^qdb#^V@Ot^:q=p]tM+l]Y(nh]=Y\d]"5J`
\[f8]\@B&Y\@B&Y\$riU[^NWQ[C*EM['[3IZa7!EZa7!EZEgdAZ*CR=Yct@9YHP.5Y-+q1Xf\_-XK8M)
~>
0 ]
>>
464.22 200.2 464.22 232.58 []true true []
/DeviceCMYK
GenStrips
restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
207.03 319.28 mo
273.745 319.28 li
273.745 288.099 li
207.03 288.099 li
cp
.684749 .498451 .383001 .113313 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
219.2 299.49 mo
(C)sh
226.665 299.49 mo
(o)sh
234.048 299.49 mo
(n)sh
241.403 299.49 mo
(t)sh
246.093 299.49 mo
(r)sh
250.974 299.49 mo
(o)sh
258.357 299.49 mo
(l)sh
261.57 299.49 mo
( )sh
229.08 316.29 mo
(u)sh
236.435 316.29 mo
(n)sh
243.791 316.29 mo
(i)sh
247.004 316.29 mo
(t)sh
gsave
2.92992 249.83 mo
281.33 249.83 li
281.33 218.667 li
2.92992 218.667 li
cp
eclp
2.32991 250.43 mo
281.93 250.43 li
281.93 218.067 li
2.32991 218.067 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [365.97 269.65 365.97 302.01 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&e5`Y&e5]X&IoTW&IoTW&IoTW&IfNV&IfNV&IfNV&IfNV&IfNV&IfKU&IfKU&IfKU&IfKU&IfKU&IfKU
&IfKU&IfKU&.K?S&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B9R&.B6Q&.B6Q&.B6Q&.B6Q&.B6Q
%gs'O%gs'O%gs'O%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%gs$N%LWmL%LNgK%LNgK
%LNgK%LNgK%LNgK%LNgK%LNgK%LNgK%LNdJ%LNdJ%LNdJ%13[I%13[I%1*UH%1*UH%1*UH%1*RG%1*RG
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~&J5Te&J5Te&J,Kb&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa
&.fBa&.fBa&.f?_%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0\%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
~>
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1EXR$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k*OQ$k*LO$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M
$O[=L$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE
#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#RC\A#RC\A#RC\A#RC\A
~>
<~(Ddl((D[c%()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()7Q!'bqGu'bqGu'bqGu'bqGu'bqGu
'bqGu'bqGu'bqDs'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM2o',)#m',)#m',)#m',)#m
',)#m',)#m',)#m',)#l&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfi&eYfh&J5Te&J5Te
&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa%hB0]
~>
0 ]
>>
365.97 269.65 365.97 302.01 []true true []
/DeviceCMYK
GenStrips
restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
2.92992 249.83 mo
281.33 249.83 li
281.33 218.667 li
2.92992 218.667 li
cp
.684749 .498451 .383001 .113313 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
45.4999 238.45 mo
(S)sh
51.9324 238.45 mo
(o)sh
59.3153 238.45 mo
(u)sh
66.6708 238.45 mo
(r)sh
71.5518 238.45 mo
(c)sh
77.4717 238.45 mo
(e)sh
84.4376 238.45 mo
( )sh
87.6025 238.45 mo
(p)sh
94.958 238.45 mo
(r)sh
99.839 238.45 mo
(o)sh
107.222 238.45 mo
(c)sh
113.142 238.45 mo
(e)sh
120.108 238.45 mo
(s)sh
125.583 238.45 mo
(s)sh
131.059 238.45 mo
(o)sh
138.442 238.45 mo
(r)sh
143.32 238.45 mo
(/)sh
148.73 238.45 mo
(S)sh
155.162 238.45 mo
(o)sh
162.545 238.45 mo
(u)sh
169.901 238.45 mo
(r)sh
174.782 238.45 mo
(c)sh
180.702 238.45 mo
(e)sh
187.668 238.45 mo
( )sh
190.833 238.45 mo
(m)sh
202.016 238.45 mo
(e)sh
208.982 238.45 mo
(m)sh
220.166 238.45 mo
(o)sh
227.549 238.45 mo
(r)sh
232.43 238.45 mo
(y)sh
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+CALIBRI,Italic gcheck setglobal} if
1 2124 94 <00010004ffed03990521004a00c4ba027d027e00582bb10102435558bc00
110233003f00360239400d1a3f1a3f1a0025113628441f49bb0103000700
240100400e2c00071007020c03072c072c310cb80124b2445331b80128b3
401f56282b183f1a4ded3fed1139392f2f005f5e5d10ed10ed11122b3939
012fc439392f2f10ed10ed31301bb5113628441f49bb0103000700240100
400e2c00071007020c03072c072c310cb80124b2445331b80128b3401f56
282b183f1a4ded3fed1139392f2f005f5e5d10ed10ed11122b3939313059
01140e0423222e0223220e0215141e0615140e0223222e0335343e043332
1e0233323e0235342e0635343e0233321e0403990205070a0d080b273d54
373d5c3e1f273f5154523f274681b6703d69543a1a0306070b0d09103047
6242466e4b28263e5153503e273e72a26430574632120804ac0815171913
0c1a1d1a253f502b2c42363032394b614055956f41151f211a1906161a19
150d20252027435a332d43362e32394b61414f8a683c10171b121300>HIBBAA+CALIBRI,Italic AddT42Char 
1 2512 100 <000100a3fffa0473050e0022004eba027d027e00582bb101024355584009
000808181409130814b80126b5401f510e55282b183f3f1a4dfdc4012f33
d6cd3310cd31301bb10814b80126b5401f510e55282b183f3f1a4dfdc431
305901140e042321030e0323222e02371321222635343e04332132160473
0105080c110afe94e1020b1522191920120602e0fe960e0a0305080c0f0a
03840d0a04eb0615181b140dfb9e080c070505070c080462121007151a18
150d1300>HIBBAA+CALIBRI,Italic AddT42Char 
1 2696 258 <00020051ffed03e103ca0026003b008dba027f028000582bb10102435558
b3091d081eb801afb42627263b08b801aeb7000f260113032631b8021e40
171300093b271d26060321492af91a4a36f8400e4d034c282b183f3f1a4d
ed3fed3f121739012fedd45f5e5ddded33113310ed11393931301b401600
093b271d26060321492af91a4a36f8400e4d034c282b183f3f1a4ded3fed
3f12173931305925060623222e0237370e0323222e0235343e0433321617
37363633321e020707262623220e0415141e0233323e0237032c04242a14
1a100603210d445d723b50693e17152f4b6a8c59597f3213042628141b10
0401d32f6d44365743311f0f0b1f362b376f604a1219110e04070b09aa20
4c402a385c743d388e948c6f43483f5b100e03080c07ec454533546b726e
2c234539233d6c925800>HIBBAA+CALIBRI,Italic AddT42Char 
1 3006 272 <0001004cffed035603c900350087ba027f028000582bb10102435558b31c
1c0011b8021e401d2834f7281f0501050af62f4a20f62800191019020a03
1914fa40254d282b183f1a4dfdd4005f5e5d2bed3ffdd4005d2bed012fed
c4392f31301b401c34f7281f0501050af62f4a20f62800191019020a0319
14fa40254d282b183f1a4dfdd4005f5e5d2bed3ffdd4005d2bed31305901
140e0223222e0223220e0415141633323e0233321615140e062322263534
3e0433321e040356070e130c0e1e314b3a406349301e0d5a59415d412a10
080904090d183c4f5c31a19f15324e729661284a41351d07034e12262116
1d241e35556c6e6726676a2029200f0e0c21231e19241d13a4a23d91938a
6b400d16211a1200>HIBBAA+CALIBRI,Italic AddT42Char 
1 4692 374 <0001003ffffa03b003ca003a007bba027f028000582bb101024355584026
311a1a1b26040e03000f0114030f0e2515f940364a251b0e041a0f312608
202b49204c094c282b183f3f3f1217393f1a4ded012fc4c45f5e5d321133
c63332113331301b401615f940364a251b0e041a0f312608202b49204c09
4c282b183f3f3f1217393f1a4ded31305901140607030e0323222e023713
363635342623220e0207030e0323222e0237133e0333321e0207073e0333
321e0203b00807710209152019181f1105016f0705343d356f5f4b115002
0a142118191f110502b50109131d14151b0f0401220f445e713d435a3818
02d6234424fdce080b080404080b08022c1f3a163d4b3d6b9356fe6e080b
080404080b080385070c080303080c07ac224c402a294358>HIBBAA+CALIBRI,Italic AddT42Char 
1 5206 393 <0002fff8fe9403d003ca002a003f0092ba027f028000582bb10102435558
400d2135360c0d350d35180d171800b8021e401c2b170c363521040730f9
264a170d182004121b49124f39f840074d282b183f1a4ded3f3f1217393f
ed121739012fd4ed2f11331133107d870ec4c411013331301b401a0c3635
21040730f9264a170d182004121b49124f39f840074d282b183f1a4ded3f
3f1217393fed12173931305901140e0423222e0227030e0323222e023713
363633321e0207073e0333321e0207342e0223220e020707161633323e04
03d016304b6a8b582d4a3e3416550209142119171f120501fd02242a151a
100401220e435d723b4c67401cad0f2135273670604b11212f6c44355743
31210f02843a91948b6c4112202b1afe50080c080404080c0804ea100e03
070c08ab214b412a3457774f2b48341c3c6c9357a5464532546a7270>HIBBAA+CALIBRI,Italic AddT42Char 
HIBBAA+CALIBRI,Italic /CharStrings get begin
/S 94 def
/T 100 def
/a 258 def
/c 272 def
/n 374 def
/p 393 def
end
HIBBAA+CALIBRI,Italic /Encoding get
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 110 /n put
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFZ+CALIBRI,Italic*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 18{/.notdef}rp /A 2{/.notdef}rp /D 
14{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d 
/e /f 7{/.notdef}rp /n /o /p /.notdef /r 
/s /t 139{/.notdef}rp]
GFQXFZ+CALIBRI,Italic nf
GFQXFZ+CALIBRI,Italic*1 [12.0002 0 0 -12.0002 0 0 ]msf
25.5999 262.84 mo
(A)sh
32.5433 262.84 mo
(d)sh
38.7132 262.84 mo
(d)sh
44.8831 262.84 mo
(r)sh
48.9999 262.84 mo
(.)sh
52.0291 262.84 mo
( )sh
21.7099 277.24 mo
(f)sh
25.3719 277.24 mo
(o)sh
31.5303 277.24 mo
(r)sh
35.6436 277.24 mo
( )sh
38.3564 277.24 mo
(S)sh
43.7822 277.24 mo
(r)sh
47.8955 277.24 mo
(c)sh
52.8899 277.24 mo
(.)sh
55.9191 277.24 mo
( )sh
137.48 407.21 mo
(T)sh
143.328 407.21 mo
(r)sh
147.441 407.21 mo
(a)sh
153.611 407.21 mo
(n)sh
159.781 407.21 mo
(s)sh
164.451 407.21 mo
(p)sh
170.621 407.21 mo
(o)sh
176.779 407.21 mo
(s)sh
181.449 407.21 mo
(e)sh
187.179 407.21 mo
(d)sh
193.349 407.21 mo
( )sh
154.15 421.609 mo
(d)sh
160.32 421.609 mo
(a)sh
166.49 421.609 mo
(t)sh
170.509 421.609 mo
(a)sh
137.2 266.19 mo
(d)sh
143.37 266.19 mo
(a)sh
149.54 266.19 mo
(t)sh
153.559 266.19 mo
(a)sh
218.06 249.83 mo
218.06 280.48 li
.684749 .498451 .383001 .113313 cmyk
@
220.83 279.79 mo
218.06 288.1 li
215.29 279.79 li
220.83 279.79 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+CALIBRI,Italic gcheck setglobal} if
1 1178 47 <00010052fffa01fa051400150045ba027d027e00582bb10102435558400f
15000b0a150b000a040510520555282b183f3f121739012fc6333231301b
400b150b000a040510520555282b183f3f121739313059250e0323222e02
37133e0333321e02070100010b1622181a20120602f8010d162118182013
060219070c070505070c0704dc070c070505070c0700>HIBBAA+CALIBRI,Italic AddT42Char 
1 1852 87 <00020052fffa0428050e001f002f0082ba027d027e00582bb10102435558
b900000237400c201328080927092709141328b80103b71417130908080e
27b80104b54017510e55282b183f3f1a4ded12392f39391239ed012fcd33
32107d87c4c4011810d4ed31301bb900280103b71417130908080e27b801
04b54017510e55282b183f3f1a4ded12392f39391239ed31305901140e04
2323030e0323222e023713363633333216171e0307342627262623230333
323e040428193653769968b25d020a1721191720130702ee083221ff324d
2436573c20b63d40183a21a266a347624a33200f03de35746f634c2bfe2d
070c070504070c0804ab282207080c3249604c3e59120704fdf92034464b
4d00>HIBBAA+CALIBRI,Italic AddT42Char 
1 4270 373 <0001003ffffa05e703ca005b00a7ba027f028000582bb101024355584039
442d2d2e39171622214e225b005b0b000a0113030a38220b534a1128f940
494a382e21170a00162d0b225b4e44390e333e49334c1c4c054c282b183f
3f3f3f1217393f1a4dfdc43f012f2f2fc45f5e5d113332111239c4113332
c63332113331301b4021534a1128f940494a382e21170a00162d0b225b4e
44390e333e49334c1c4c054c282b183f3f3f3f1217393f1a4dfdc43f3130
59250e0323222e023713363635342623220e0207030e0323222e02371336
3635342623220e0207030e0323222e0237133e0333321e0207073e033332
1e02173e0333321e02151406070567010a152118181f1106026f0507313d
326b604a1150020a152118181f1006016f0705323c336a604a1150020a14
2118191f110502b50109131d14151b0f0401220f455c6d393c56371a0314
465c6c38435a3818080719080b080404080b08022c1d341a404c3d6b9356
fe6e080b080404080b08022c1e3a193d493d6b9356fe6e080b080404080b
080385070c080303080c07ac224c402a21394f2f234c3f2a264258342344
2400>HIBBAA+CALIBRI,Italic AddT42Char 
HIBBAA+CALIBRI,Italic /CharStrings get begin
/I 47 def
/P 87 def
/m 373 def
end
HIBBAA+CALIBRI,Italic /Encoding get
dup 73 /I put
dup 80 /P put
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFZ+CALIBRI,Italic*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 18{/.notdef}rp /A 2{/.notdef}rp /D 
4{/.notdef}rp /I 6{/.notdef}rp /P 2{/.notdef}rp /S /T 12{/.notdef}rp 
/a /.notdef /c /d /e /f 6{/.notdef}rp /m 
/n /o /p /.notdef /r /s /t 139{/.notdef}rp]
GFQXFZ+CALIBRI,Italic nf
GFQXFZ+CALIBRI,Italic*1 [12.0002 0 0 -12.0002 0 0 ]msf
244.3 265.48 mo
(A)sh
251.243 265.48 mo
(P)sh
257.443 265.48 mo
(I)sh
260.466 265.48 mo
( )sh
224.19 279.88 mo
(p)sh
230.36 279.88 mo
(a)sh
236.53 279.88 mo
(r)sh
240.643 279.88 mo
(a)sh
246.813 279.88 mo
(m)sh
256.305 279.88 mo
(e)sh
262.036 279.88 mo
(t)sh
266.055 279.88 mo
(e)sh
271.786 279.88 mo
(r)sh
275.899 279.88 mo
(s)sh
205.41 298.02 mo
195.31 298.02 li
.684749 .498451 .383001 .113313 cmyk
@
196 300.79 mo
187.69 298.02 li
196 295.25 li
196 300.79 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: QJJAAA+CALIBRI,Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.238 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+CALIBRI,Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f32fc0abab4000000cc000000606376
74202f4935490000012c000006086670676da1ea42ac0000073400000913
676c7966ef31c6530000778c0000145a68656164ecbf33e5000010480000
0036686865610d8d06c00000108000000024686d747843620609000010a4
0000257e6c6f6361b6d5b5360000362400001e4e6d6178701bff162d0000
5474000000206e616d65de4650830000549400000d5c70726570c7f0742e
000061f00000159c676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e00002ff4000acff00000001000000004d53202000200000
00a00600fe0001c4079e02262000019f0000000003c0050e000000200003
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b140465f5e5d5c5b5a5958555453525150
4f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d
2c2826252423221f181411100f0d0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b0042651582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b43
23430b2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d
2c2045b00325456164b050515845441b2121592d2c2045b0004360442d2c
01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810006260
2b0c642364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297a
e4182d2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2c00b00743b006430b2d2c21210c6423648bb8400062
2d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0
c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8
4000626023212d2c4523456023456023456023766818b08062202d2cb004
26b00426b00425b0042545234520b003266062636820b0032661658a2344
442d2c2045b0005458b040442045b04061441b2121592d2c45b1302f4523
456160b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b5158
20b0032545695358441b2121591b2121592d2c45b01443b0006063b00160
69442d2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158
b90033ffe0b134201bb3330034005944442d2cb0164358b00326458a5864
66b01f601b64b020606620581b21b04059b001615923586559b029234423
10b029e01b2121212121592d2cb0164358b004254564b020606620581b21
b04059b0016123586559b0292344b00425b00725082058021b0359b00525
10b004252046b0042523423cb0072510b006252046b00425b0016023423c
2058011b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0
0725082058021b0359b00425b003254348b00625b00325b0016043481b21
59212121212121212d2cb0164358b004254564b020606620581b21b04059
b0016123581b6559b0292344b00525b00825082058021b0359b0042510b0
05252046b0042523423cb00425b0072508b0072510b006252046b00425b0
016023423c2058011b0059b0042510b00525b029e0b02920456544b00725
10b00625b029e0b00525b00825082058021b0359b00525b003254348b004
25b0072508b00625b00325b0016043481b2159212121212121212d2c02b0
0425202046b004252342b0052508b003254548212121212d2c02b0032520
b0042508b0022543482121212d2c452320451820b0005020582365235923
6820b040505821b04059235865598a60442d2c4b53234b515a5820458a60
441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b
2121592d2cb000214b5458381b2121592d2cb002435458b0462b1b212121
21592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121
2121592d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a
5823381b2121592d2c0020b200400325b0062649618b3812342d2c014623
466023466123201020468a61b8ff80628ab140408a704560683a2d2c208a
2349648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b5442
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b94000020063b804008854
58b202400243604259595959592d2c451868234b51582320452064b04050
587c59688a6059442d2cb00016b00225b0022501b001233e00b002233eb1
0102060cb00a236542b00b234201b001233f00b002233fb10102060cb006
236542b0072342b00116012d2c20b82000628a6023622d2cb0072558001b
0159b0042510b00325b0022520b8ffff545821cd1bed5921b006255cb006
255a58b0092b5920b005254ab0042547b004254760b0062547b0806361b0
0225b0005558b00325b00725496359b0082558001b0159b00425b0062549
b009255cb009255a58b0092b59b0072546b0806361b0032520b000555863
1b2159612320b0005558b080631b21b08059b0592bb006255c586959b004
25202010b00048233ab0062658001b0159b0052658b003252f598a122332
21212d2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb0
0925b0072559b00225b00225070cb005256323b00625636020b940000400
63535821b00426b00426b00a1bb94000040063655158b0042665b0042665
b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725b007250b
0d0ab00b2eb00525b0052507595920b0005558b00525b0052587b00725b0
07250bb0092510b00b25b0092620b8ffff545821cd1bed59b00525b00525
07b00825b00b254923b00625b0062587b00a2510b00b25c15920b00051b8
00522378b00161b00225b00725b0072507b00a25b00d254961b08062b005
25b005250bb00a252338b00625b0062587b00825b008250bb00a2510b00b
25c4b00625b0062507b00925b00c2549b0032554b8ffa723792121212121
212121212121212d2c23b0005458b9400000001bb900004000598ab00054
58b9400000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9
00004000590db05b2b2d2c8a8a080d8ab0005458b9400000001bb9000040
0059b05b2b2d2cb00426b00426080db00426b00426080db05b2b2d000001
00000005b852450a311b5f0f3cf50019080000000000bbeb7ccc00000000
cbdab477fbdafd8d09ec07c5000100090002000000000000000100000600
fe0001c40aa0fbdafa8609ec000100000000000000000000000000000399
040e0000000000000000000001cf00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000043c004f0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000006fe008d000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000003f300470000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000003590048000000000000000000000000000000000000
000000000000000000000000000000000000044b004b0000000000000000
000000000407004a00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003cb001b0000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000001f7006b00000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000001f7
007e000000000000000000000000000000000000000000000000044b007e
000000000000000000000000000000000000000000000000044d00480000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000002d8007e0000
000000000000000000000331004900000000000000000000000000000000
000000000000000000000000000000000000000002c60017000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000029b00e6000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000037000020000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000382007900000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e01310131013101310131013101310131013101310131
013101310131013101310131013101310131013101310131013101310131
013101310131013101310131013101310131013101310131013101310131
01310131013101310131013101310131013101f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f501f501f501f501f501f501f501f501f501f501f501f5
01f501f501f501f502e102e102e102e102e102e102e102e102e102e102e1
02e102e102e1037703770377037703770377037703770377037704130413
0413041304df04df04df04df04df04df04df04df04df04df04df04df04df
04df04df04df04df04df04df04df04df04df04df04df04df04df04df04df
04df04df04df04df04df04df04df04df04df04df04df04df04df04df04df
04df04df04df04df04df04df04df05e505e505e505e505e505e505e505e5
05e505e505e505e505e5063a063a063a063a063a063a063a063a063a063a
063a063a063a063a063a063a063a063a067c067c067c067c067c067c067c
070307030703070307030703070307760776077607760776077607760776
077607760776077607760776077607f507f507f507f508c808c808c808c8
08c808c808c808c808c808c8095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f095f095f095f095f095f095f095f095f095f095f095f095f
095f095f095f09ad09ad09ad09ad09ad09ad09ad09ad09ad09ad09ad09ad
09ad09ad09ad09ad09ad09ad09ad09ad09ad09ad09ad09ad09ad09ad09ad
09ad09ad09ad09ad09ad09ad09ad09de09de09de09de09de09de09de09de
09de09de09de09de09de09de09de09de09de09de09de09de09de09de09de
09de09de09de09de09de09de09de09de09de09de09de09de09de09de09de
09de09de09de09de09de0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d
0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0a2d0000000100000f2600600005
0000000000020010002f006000000c63159c000000000000002d02220000
000300000000006400000000000300000001000e00640000000300000002
0008032a0000000300000003002e030400000003000000040018031a0000
0003000000050018033200000003000000060018034a0000000300000007
007603620000000300000008002a000e0000000300000009002003d80000
00030000000a02a00064000000030000000b005603f8000000030000000c
002a044e000000030000000d02980478000000030000000e006c07100001
0000000000000032077c0001000000000001000707ae0001000000000002
000409110001000000000003001708fe0001000000000004000c09090001
000000000005000c09150001000000000006000c09210001000000000007
003b092d0001000000000008001507830001000000000009001009680001
00000000000a015007ae000100000000000b002b0978000100000000000c
001509a3000100000000000d014c09b8000100000000000e00360b040003
000104090000006400000003000104090001000e00640003000104090002
0008032a0003000104090003002e030400030001040900040018031a0003
0001040900050018033200030001040900060018034a0003000104090007
007603620003000104090008002a000e0003000104090009002003d80003
00010409000a02a00064000300010409000b005603f8000300010409000c
002a044e000300010409000d02980478000300010409000e006c071000a9
002000320030003100320020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e00430061006c00690062007200690020006900730020
00610020006d006f006400650072006e002000730061006e007300200073
0065007200690066002000660061006d0069006c00790020007700690074
006800200073007500620074006c006500200072006f0075006e00640069
006e006700730020006f006e0020007300740065006d007300200061006e
006400200063006f0072006e006500720073002e00200049007400200066
00650061007400750072006500730020007200650061006c002000690074
0061006c006900630073002c00200073006d0061006c006c002000630061
00700073002c00200061006e00640020006d0075006c007400690070006c
00650020006e0075006d006500720061006c00200073006500740073002e
0020004900740073002000700072006f0070006f007200740069006f006e
007300200061006c006c006f00770020006800690067006800200069006d
007000610063007400200069006e002000740069006700680074006c0079
00200073006500740020006c0069006e006500730020006f006600200062
0069006700200061006e006400200073006d0061006c006c002000740065
0078007400200061006c0069006b0065002e002000430061006c00690062
00720069002700730020006d0061006e0079002000630075007200760065
007300200061006e006400200074006800650020006e0065007700200072
0061007300740065007200690073006500720020007400650061006d0020
0075007000200069006e0020006200690067006700650072002000730069
007a0065007300200074006f002000720065007600650061006c00200061
0020007700610072006d00200061006e006400200073006f006600740020
006300680061007200610063007400650072002e004d006900630072006f
0073006f00660074003a002000430061006c006900620072006900200042
006f006c006400560065007200730069006f006e00200035002e00370032
00430061006c0069006200720069002d0042006f006c006400430061006c
006900620072006900200069007300200061002000740072006100640065
006d00610072006b0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000670072006f007500700020006f0066
00200063006f006d00700061006e006900650073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
0070003a002f002f007700770077002e006d006900630072006f0073006f
00660074002e0063006f006d002f007400790070006f0067007200610070
00680079002f006300740066006f006e007400730068007400740070003a
002f002f0066006f006e007400660061006200720069006b002e0063006f
006d0059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e00200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e0068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f0066006f006e00740073002f
00640065006600610075006c0074002e0061007300700078a92032303132
204d6963726f736f667420436f72706f726174696f6e2e20416c6c205269
676874732052657365727665642e43616c696272692069732061206d6f64
65726e2073616e732073657269662066616d696c79207769746820737562
746c6520726f756e64696e6773206f6e207374656d7320616e6420636f72
6e6572732e204974206665617475726573207265616c206974616c696373
2c20736d616c6c20636170732c20616e64206d756c7469706c65206e756d
6572616c20736574732e204974732070726f706f7274696f6e7320616c6c
6f77206869676820696d7061637420696e2074696768746c792073657420
6c696e6573206f662062696720616e6420736d616c6c207465787420616c
696b652e2043616c696272692773206d616e792063757276657320616e64
20746865206e65772072617374657269736572207465616d20757020696e
206269676765722073697a657320746f2072657665616c2061207761726d
20616e6420736f6674206368617261637465722e4d6963726f736f66743a
2043616c6962726920426f6c6456657273696f6e20352e373243616c6962
72692d426f6c6443616c6962726920697320612074726164656d61726b20
6f6620746865204d6963726f736f66742067726f7570206f6620636f6d70
616e6965732e4c7563286173292064652047726f6f74687474703a2f2f77
77772e6d6963726f736f66742e636f6d2f7479706f6772617068792f6374
666f6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f7520
6d617920757365207468697320666f6e74206173207065726d6974746564
206279207468652045554c4120666f72207468652070726f647563742069
6e207768696368207468697320666f6e7420697320696e636c7564656420
746f20646973706c617920616e64207072696e7420636f6e74656e742e20
596f75206d6179206f6e6c792028692920656d626564207468697320666f
6e7420696e20636f6e74656e74206173207065726d697474656420627920
74686520656d62656464696e67207265737472696374696f6e7320696e63
6c7564656420696e207468697320666f6e743b20616e6420286969292074
656d706f726172696c7920646f776e6c6f6164207468697320666f6e7420
746f2061207072696e746572206f72206f74686572206f75747075742064
657669636520746f2068656c70207072696e7420636f6e74656e742e6874
74703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f677261
7068792f666f6e74732f64656661756c742e61737078b10903b802f9b21e
1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1f
b802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802
f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb2
1e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c
1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb8
02e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb802df
b21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d
191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1f
b802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802
d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb2
1d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802cab21d19
1fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb8
02c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1
b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bdb21d
2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1f
b802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802
b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b2
1c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802acb21c33
1fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b21c321fb8
02a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb802a3
b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8029fb21c
331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c311f
b8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c321fb802
96b21c321fb80295b21c331fb80294b21c331fb80293b21c331fb80292b2
1c331fb80291b21c331fb80290b21c331fb8028fb21c331fb8028eb21c31
1fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab21c321fb8
0289b21c321fb80288b21c331fb80287b21c331fb80286b21c331fb80285
b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb80281b21b
341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027db21b341f
b8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b341fb802
78b21b341fb80277b21b341fb80276b21b341fb80275b21b341fb80274b2
1b341fb80273b21b341fb80272b21b341fb80271b21b341fb80270b21b34
1fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb21a351fb8
026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a351fb80267
b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb80263b21a
351fb80262b21a351fb80261b21a351fb80260b21a351fb8025fb21a351f
b8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a351fb802
5ab21a351fb80259b219371fb80258b219371fb80257b219371fb80256b2
19371fb80255b219371fb80254b219371fb80253b219371fb80252b21937
1fb80251b219371fb80250b219371fb8024fb219371fb8024eb219371fb8
024db219371fb8024cb219371fb8024bb219371fb8024ab219371fb80249
b219371fb80248b219371fb80247b219371fb80246b219371fb80245b219
371fb80244b219371fb80243b219371fb80242b219371fb80241b219371f
b80240b219371fb8023fb219371fb8023eb219371fb8023db219371fb802
3cb219371fb8023bb219371fb8023ab219371fb80239b218391fb80238b2
18391fb80237b218391fb80236b218391fb80235b218391fb80234b21839
1fb80233b218391fb80232b218391fb80231b218391fb80230b218391fb8
0301b2182e1fb8022fb218391fb8022eb218391fb8022db218391fb8022c
b218391fb8022bb218391fb8022ab218391fb80229b218391fb80228b218
391fb80227b218391fb80226b218391fb80225b2173b1fb80224b2173b1f
b80223b217321fb80222b2173a1fb80221b2173b1fb80220b2173b1fb802
1fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2
173b1fb8021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2173b
1fb80216b2173b1fb80215b217321fb80214b2173a1fb80213b2173b1fb8
0212b2173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8020e
b2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab217
3b1fb80209b217321fb80208b217321fb80207b2173b1fb80206b2173b1f
b80205b2173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1fb802
01b2173b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2
173b1fb801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b
1fb801f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb8
01f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0
b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ecb217
3b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1f
b801e7b217321fb801e6b216231fb801e5b216231fb801e4b216371fb801
e3b216371fb801e2b216381fb801e1b216381fb801e0b216431fb801dfb2
16441fb801deb216441fb801ddb216441fb801dcb216451fb801dbb21646
1fb801dab216461fb801d9b216461fb801d8b216231fb801d7b216231fb8
01d6b216381fb801d5b216431fb801d4b216431fb801d3b216431fb801d2
b216441fb801d1b216461fb801d0b216461fb801cfb216461fb801ceb216
461fb801cdb216461fb801ccb216461fb801cbb216431fb801cab216231f
b801c9b216231fb801c8b216371fb801c7b216371fb801c6b216381fb801
c5b216421fb801c4b216431fb801c3b216441fb801c2b216451fb801c1b2
16461fb801c0b216461fb801bfb216461fb801beb216461fb801bdb21646
1fb801bcb216461fb801bbb216461fb801bab216371fb801b9b216381fb8
01b8b216421fb801b7b216431fb801b6b216431fb801b5b216431fb801b4
b216441fb801b3b216441fb801b2b216441fb801b1b216451fb801b0b216
451fb801afb216451fb801aeb216461fb801adb216461fb801acb216461f
b801abb216461fb801aab216461fb801a9b215341fb801a8b215411fb801
a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b2
15521fb801a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f
1fb8019eb215521fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8
019ab2154e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb80196
b215501fb80195b215521fb80194b215521fb80193b215521fb80192b215
411fb80191b2154f1fb80190b215501fb8018fb215501fb8018eb215511f
b8018db215521fb8018cb215521fb8018bb215521fb8018ab214581fb801
89b214591fb80188b2145c1fb80187b2145d1fb80186b2144a1fb80185b2
145b1fb80184b2145c1fb80183b214591fb80182b2145d1fb8018140af14
5d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561f
b20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b
561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b561f
a30b561fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a
681f980a681f970a681f960a681f950a681f940a681f930a681f920a681f
910a681f9009681f8f09681f8e09681f8d09681f8c09681f410902fc02fa
0056001f02fb02fa0068001f017fb213321fb8017eb212371fb80174b212
371fb80173b211421fb80172b211421fb80171b211421fb80170b211421f
b8016fb211421fb8016eb211421fb8016db211421fb8016cb211421fb801
6bb211421fb8016ab211421fb8013cb211421fb8013bb210421fb8013ab2
10421fb80139b210421fb80138b210421fb80137b210421fb80136b21042
1fb80135b210421fb80134b210421fb80133b210421fb80132b20f451fb8
0131b20f451fb80130b20f451fb80112b20f451fb80111b20f451fb80110
b20f451fb8010fb20f451fb8010eb20f451fb8010db20e481fb8010cb20e
481fb8010bb20e481fb8010ab20e481fb80109b20e481fb80108b20e481f
b80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb0d4a
1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda
0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb0b56
1fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab211401fb80179
b211421fb80178b211421fb80177b211421fb80176b211421fb80175b211
421fb80143b211421fb80142b210421fb80141b210421fb80140b210421f
b8013fb210421fb8013eb210421fb8013db20f451fb80115b20f451fb801
14b20f451fb80113b20f451fb903030302b2401fa4be030200b4030200c4
030200030300b213321fb8017bb213321fb80153b212371fb80152b21140
1fb80151b211401fb80150b211401fb8014fb211401fb8014eb211401fb8
014db211401fb8014cb211401fb8014bb211401fb8014ab211401fb80149
b211401fb80148b211401fb80147b211401fb80146b211401fb80145b211
401fb80144b211401fb80122b211401fb80121b210421fb80120b210421f
b8011fb210421fb8011eb210421fb8011db210421fb8011cb210421fb801
1bb210421fb8011ab210421fb80119b210421fb80118b20f451fb80117b2
0f451fb80116409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff90e48
1ff80e481ff70e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a1ff1
0d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe10c4e
1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc6
0c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb50b56
1fb40b561fb30b561f9b0a681fb802fdb212371fb8017db212371fb8017c
b212371fb80169b2112e1fb80168b2112e1fb80167b211401fb80166b211
401fb80165b211401fb80164b211401fb80163b211401fb80162b211401f
b80161b211401fb80160b211401fb8015fb211401fb8015eb211401fb801
5db211401fb8015cb211401fb8015bb211401fb8015ab211401fb80159b2
11401fb80158b211401fb80157b211401fb80156b211401fb80155b21140
1fb80154b211401fb8012fb211401fb8012eb210421fb8012db210421fb8
012cb210421fb8012bb210421fb8012ab210421fb80129b210421fb80128
b210421fb80127b210421fb80126b210421fb80125b20f451fb80124b20f
451fb80123b20f451fb80105b20f451fb80104b20f451fb80103b20f451f
b80102b20f451fb80101b20e481fb8010040a20e481fff0e481ffe0e481f
e80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00c
4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f82488055
81ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb
7d067c487a557bab7a55047a147a020a7948775578ab77550b77010c7648
75555475e475f4750314755475647574759475d475e47507a475b475c475
03b8ffc0401275383b46807590750214757475020075010fb8ffc0402175
0b0e467448725573ab725504723472023bf47201e0720102307201507260
7202b8ffc0b372242846b8ffc0403572161a461072307240720371486f55
70ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f090d46
6e486d55df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe000100ef
02fe40ff016b032e1f6a03251f692e675568ab6755662e645565ab645563
2e6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e5855570325
1f562e545555ab5455532e515552ab51554f2e4e554e03251f4d2e4b554c
ab4b554a2e485549ab4855504801472e46554503361f001f01001e01001e
701e801ef01e040b601d701d02701de01df01d03701cf01c027f1b010f1a
7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af19050f198f19
9f19030c7012801202701180110230114011d011e011040011a011020f8f
0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f
0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f0d4f
0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c262946
ef0aff0a02400a242746ef09ff0902ff0901000301200101000110012001
0308b8ffc0b301151f46b80100b316010501b80190b154532b2b4bb807ff
524bb008505bb00188b02553b00188b040515ab00688b000555a5b58b101
018e59b101024354b0144b515a58b101018e59858d8d00421d4bb01d5358
b0a01d594bb0805358b0401d594bb0ff5358b0001db1160042592b5e7375
7373742b732b73742b2b73745e732b5e7374757374755e73747573015e73
74737475757473745e737473002b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b2b73755f7575
5e732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b185f5e00>
[5211 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> QJJAAA+CALIBRI,Bold AddT42Char 
1 4954 876 <00010002fed1035605cf00150019bc0015024d000b0000024eb20a100500
2f2f012feddded3130130e0323222e0237013e0333321e0207fc05101d2b
2129341b0406025604101c2d202a331a0405fefd0d100a0508101911068f
0d110a0508101911>QJJAAA+CALIBRI,Bold AddT42Char 
1 316 18 <0001004fffeb040c05230039008bb10102435558b21c002bbe02c7000e00
18016100210026ffe8b40b0f014c26b80160b2135304b8015ab73530180b
0f014c30b80162b240095600183f1a4dfd2bd4ed3ffd2bd4ed012fedd4c4
31301bbc0018016100210026ffe8b40b0f014c26b80160b2135304b8015a
b73530180b0f014c30b80162b240095600183f1a4dfd2bd4ed3ffd2bd4ed
31305925140e0623222e02353412363633321e0615140e0223222e022322
0e0215141e0233323e0233321e02040c03060a163f5b754485d69650589e
dd85366455441b0a0603040a0e090f2e4965464d79552c2f577b4d466649
2f0d0a0c0804c4192319121724211652a3f4a2a50100ae5a121d261b121c
261c1e2a1a0c232b233f75a66872a76c3521282008182b00>QJJAAA+CALIBRI,Bold AddT42Char 
1 1002 258 <00020047ffe9037603d7003300400129b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f
5f5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed32393130
1b400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e
412ab80118401be02201037d228d2202402250226022030f221f22020c04
2222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe840091001
4d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f5f5e5d5d5d5f5ded
1112392f2b5d71ed5d7131305925140606232226263535060623222e0235
343e02333335342e0223220e0223222e0235343e0433321e02150723220e
02151416333236370376142b2a2d2911378d56477757303d79b477571127
41303f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35
592e1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a
26171f241d231e132955865cda122433213840363400>QJJAAA+CALIBRI,Bold AddT42Char 
1 1474 272 <00010048ffea032103d60035009db10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1a4dfd2bd42bed3f
fd2bd4ed012fedc43231301bbc0018011f001f0024ffe8b40b0f014c24b8
011fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b2
40094d00183f1a4dfd2bd42bed3ffd2bd4ed31305925140e0623222e0235
343e0233321e0615140623222e0223220615141e0233323e0233321e0203
21030507183a4a572e679f6c374378a462284d4335160905031410112634
483262681a334d33344b38260d090c0704b01a23180f17211a10407db474
86c3803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00
>QJJAAA+CALIBRI,Bold AddT42Char 
1 1774 282 <0002004bffe903cc056d002600390095b10102435558b20b1b39bb025e00
00002f0272400a1321460b39271b040e2ab8ffe8b40b0f014c2ab8014940
09184a34180b0f014c34b80149b4400e4d054c00183f3f1a4ded2b3fed2b
1217393f012fedd4ed323931301b400921460b39271b040e2ab8ffe8b40b
0f014c2ab801494009184a34180b0f014c34b80149b4400e4d054c00183f
3f1a4ded2b3fed2b1217393f31305925140e0223222e023535060623222e
0235343e023332161711343e0233321e021503262623220e0215141e0233
323e023703cc0a18291e2028190b45975c668d59283362925f4b7a3c0b1d
302525301c0cfa36633631472b15122944341a31333620220b0f0a04040a
0f0b634a524f86b36377be86483d3b01e30a100b06060b100afd34444831
526535386a53320f22372800>QJJAAA+CALIBRI,Bold AddT42Char 
1 2086 286 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>QJJAAA+CALIBRI,Bold AddT42Char 
1 2494 336 <0003001bfe9303a203d3003e004e005f0102b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1a4ded5f5e5d3fed5d5d1239
3fed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173931301b40550f30
070338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e53
0118530153f1cd150117150100151015021515603803f93c482a203c42cc
42020442010f00420142cd384a0f5b0110035bcc40204f00183f1a4ded5f
5e5d3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d
1217393130590114062323161615140e0223222627060615141617171e03
15140e0223222e0235343e0237262635343637262635343e023332161721
321601342623220e0215141633323e0213342627270e0315141633323e02
03a21610691613346189542b4e150c13332ed94c77512b3a74af7572a167
2f1121301f2b2f362b232a376288522a4d21011b1115febd504925382512
5047263825133b483fb31a1f1306655c394e30140360302e183d214e7953
2b150e0d24161d2502080325435e3c4275563224405935213c373217174f
2f3b61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d
3002051323201e10323417262f00>QJJAAA+CALIBRI,Bold AddT42Char 
1 3018 349 <0002006bfffa018d054e001500210045b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61a4ded012fedd4ed31
301bb9001f017bb540191049054c00183f3fd61a4ded31305925140e0223
222e023511343e0233321e0215131406232226353436333216017a0c1d30
2525301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f
0a037a0a0f0b06060b0f0a01304c3a38494c3b39>QJJAAA+CALIBRI,Bold AddT42Char 
1 3188 367 <0001007efffa017a05700015003fb10102435558400f0d15010b0b010b0a
010d00010b0400b80260b5400a1046054c00183f3f012f1a4ded31305f5e
5d5d5d5d1bb31046054c00183f3f31305925140e0223222e023511343e02
33321e0215017a0c1d302525301d0c0c1d302525301d0c220a0f0a05050a
0f0a05230a100b06060b100a>QJJAAA+CALIBRI,Bold AddT42Char 
1 3320 374 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
>QJJAAA+CALIBRI,Bold AddT42Char 
1 3590 381 <00020048ffe9040403d7001300270071b10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1a4ded2b3fed2b012fedd4ed31301bb90019ffe8b4
0b0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1a
4ded2b3fed2b31305901140e0223222e0235343e0233321e0205342e0223
220e0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fe
fd1532533f3854361b1631543e3954361a01e972bc884a427eb87672bd87
4a417eb881426f522e294f6f47426f522d294e6f>QJJAAA+CALIBRI,Bold AddT42Char 
1 3820 396 <0001007efffa02bb03d700330070b10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1a4ded2b5f5e5d012fc4ed3931301bb9000aff
e8b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1a
4ded2b31305901140e0223222e0223220e020711140e0223222e02351134
3e0233321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c
0c1d302525301d0c0a1a291f202a170a233e38381c0d1e20180b05040203
4b242e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a
0f0a6f3241260f0307090a0c152a>QJJAAA+CALIBRI,Bold AddT42Char 
1 4074 400 <00010049ffe902f203d7004900e9b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1a4ded5f5e5d2b3f123939ed2b5d
1139392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed31301b402004
2e012ee4370b0a010ae71137400b014d10372037020337113711160f3c01
3cb8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f2
40054d00183f1a4ded5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed
5d10ed5d31305901140e0223222e0435343e0233321e0233323e0235342e
0635343e0233321e0615140e0223222e0223220e0215141e0602f239688e
53325b4830160c04080c090b2b40553622352714253d4d514d3d25325e87
542a4f402c1308040303070c080926394b3022322010263e4f514f3e2601
1e4c744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a
3f406b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c
4059>QJJAAA+CALIBRI,Bold AddT42Char 
1 4496 410 <00010017ffec028e04b1003a0093b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1a4ded3fed2bcd3fed2b01
2f33fd32c4321112392f31301bb9002dffe8b40b0f014c2db8011fb32348
1d0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1a4d
ed3fed2bcd3fed2b31305925140e0423222e02351123222635343e023333
35343e0233321e02151533321e02151406232311141633323e0233321e02
028e0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a
0f0a051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c9
2f371d28170ac70a100b05050b100ac70a17281d372ffe5d494907090707
1524>QJJAAA+CALIBRI,Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>QJJAAA+CALIBRI,Bold AddT42Char 
QJJAAA+CALIBRI,Bold /CharStrings get begin
/space 3 def
/slash 876 def
/C 18 def
/a 258 def
/c 272 def
/d 282 def
/e 286 def
/g 336 def
/i 349 def
/l 367 def
/n 374 def
/o 381 def
/r 396 def
/s 400 def
/t 410 def
end
QJJAAA+CALIBRI,Bold /Encoding get
dup 32 /space put
dup 47 /slash put
dup 67 /C put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/GFQXGA+CALIBRI,Bold /QJJAAA+CALIBRI,Bold findfont ct_VMDictPut
/GFQXGA+CALIBRI,Bold*1 
[32{/.notdef}rp /space 14{/.notdef}rp /slash 19{/.notdef}rp /C 29{/.notdef}rp /a 
/.notdef /c /d /e /.notdef /g /.notdef /i 
2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t 139{/.notdef}rp]
GFQXGA+CALIBRI,Bold nf
GFQXGA+CALIBRI,Bold*1 [12.0002 0 0 -12.0002 0 0 ]msf
74.6699 282.5 mo
(C)sh
81.0217 282.5 mo
(o)sh
87.4729 282.5 mo
(a)sh
93.3967 282.5 mo
(l)sh
96.3441 282.5 mo
(e)sh
102.385 282.5 mo
(s)sh
107.172 282.5 mo
(c)sh
112.194 282.5 mo
(i)sh
115.141 282.5 mo
(n)sh
121.581 282.5 mo
(g)sh
127.27 282.5 mo
( )sh
60.1099 296.9 mo
(/)sh
65.2699 296.9 mo
(s)sh
70.0569 296.9 mo
(t)sh
74.2171 296.9 mo
(r)sh
78.4828 296.9 mo
(i)sh
81.4302 296.9 mo
(d)sh
87.8698 296.9 mo
(e)sh
93.9099 296.9 mo
(/)sh
99.0699 296.9 mo
(d)sh
105.51 296.9 mo
(i)sh
108.457 296.9 mo
(a)sh
114.381 296.9 mo
(g)sh
120.07 296.9 mo
(o)sh
126.521 296.9 mo
(n)sh
132.961 296.9 mo
(a)sh
138.885 296.9 mo
(l)sh
248.75 319.28 mo
248.75 337.19 li
.684749 .498451 .383001 .113313 cmyk
@
251.52 336.5 mo
248.75 344.81 li
245.98 336.5 li
251.52 336.5 li
cp
ef
225.73 387.75 mo
225.73 409.67 li
@
228.5 408.98 mo
225.73 417.29 li
222.96 408.98 li
228.5 408.98 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HIBBAA+CALIBRI,Italic gcheck setglobal} if
1 872 28 <000100580000040e050e002d00acba027d027e00582bb101024355584010
0915160816160828271a0d1a0d002709b801014012282b2728b015010015
f01502160315152108b80105b22b5116b80105b3402154282b183f1aed3f
ed12392f005f5e5d712b391239ed012fc439392f2f10c63233107d87c4c4
31301bb9000901014012282b2728b015010015f01502160315152108b801
05b22b5116b80105b3402154282b183f1aed3fed12392f005f5e5d712b39
1239ed31305901140e0423210321321615140e0423210321321615140e04
2321222e0237133636332132040e0105070c110afe075201b30c0c030408
0b100afe4e5e02030a0d0205070c110afd920b150f0605e7073017026517
04ed0515181a150dfe6a101005151918130dfe31101106161819150c0711
1b130482271f>HIBBAA+CALIBRI,Italic AddT42Char 
1 1320 62 <00010058000003010514001c0056ba027d027e00582bb10102435558400d
18190e000d0d180e0308135219b80129b3400854282b183f1a4ded3f1217
39012fcdc6333231301bb70d180e0308135219b80129b3400854282b183f
1a4ded3f12173931305925140e042321222e0237133e0333321e02070321
321603010305070c100afdc30c15100605ef010c1622181821120602df01
d00d0b7305161a1a160e07111b1304af070c070505070c07fba01200>HIBBAA+CALIBRI,Italic AddT42Char 
HIBBAA+CALIBRI,Italic /CharStrings get begin
/E 28 def
/L 62 def
end
HIBBAA+CALIBRI,Italic /Encoding get
dup 69 /E put
dup 76 /L put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFZ+CALIBRI,Italic*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 18{/.notdef}rp /A 2{/.notdef}rp /D 
/E 3{/.notdef}rp /I 2{/.notdef}rp /L 3{/.notdef}rp /P 2{/.notdef}rp 
/S /T 12{/.notdef}rp /a /.notdef /c /d /e 
/f 6{/.notdef}rp /m /n /o /p /.notdef /r 
/s /t 139{/.notdef}rp]
GFQXFZ+CALIBRI,Italic nf
GFQXFZ+CALIBRI,Italic*1 [12.0002 0 0 -12.0002 0 0 ]msf
235.02 413.01 mo
(E)sh
240.879 413.01 mo
(L)sh
245.924 413.01 mo
(L)sh
250.969 413.01 mo
( )sh
253.682 413.01 mo
(f)sh
257.344 413.01 mo
(o)sh
263.502 413.01 mo
(r)sh
267.615 413.01 mo
(m)sh
277.108 413.01 mo
(a)sh
283.278 413.01 mo
(t)sh
gsave
203.36 387.75 mo
277.1 387.75 li
277.1 344.813 li
203.36 344.813 li
cp
eclp
202.76 388.35 mo
277.7 388.35 li
277.7 344.212 li
202.76 344.212 li
cp
level3{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 2
/Shading
<<
/ShadingType 2 
/ColorSpace /1 /CSA get_res
/Coords [464.07 131.73 464.07 175.87 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!j!!!!j!!!!j!!!!i!!!!i!!!!i!!!!i!!!!h!!!!h!!!!h!!!!g!!!!g!!!!g!!!!f!!!!f!!!!f
!!!!f!!!!e!!!!e!!!!e!!!!d!!!!d!!!!d!!!!c!!!!c!!!!c!!!!b!!!!b!!!!b!!!!b!!!!a!!!!a
!!!!a!!!!`!!!!`!!!!`!!!!_!!!!_!!!!_!!!!_!!!!^!!!!^!!!!^!!!!]!!!!]!!!!]!!!!\!!!!\
!!!!\!!!![!!!![!!!![!!!![!!!!Z!!!!Z!!!!Z!!!!Y!!!!Y!!!!Y!!!!X!!!!X!!!!X!!!!X!!!!W
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>>> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -223.84 520.08 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/1 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~84Z9B84Z9B84Z9B84Q0?7n6'>7n6'>7n6'>7n,s;7Rfj:7Rfj:7R]a777BX677BX6779O36psF26psF2
6psF26psC06UO4.6UO4.6UO1,6:+"*6:+"*6:*t(5s[e&5s[e&5s[b$5X7S"5X7S"5X7S"5X7Ou5<h@s
5<h@s5<h@r5!D.o5!D.o5!D.n4Ztqk4Ztqk4Ztqk4Ztqj4?P_g4?P_g4?P_f4$,Mc4$,Mc4$,Mb3]];_
3]];_3]];_3B9)[3B9)[3B9)[3B9)[3&ilW3&ilW3&ilW2`EZS2`EZS2`EZS2E!HO2E!HO2E!HO2E!HO
~>
]
>>
464.07 131.73 464.07 175.87 []true true []
/DeviceCMYK
GenStrips
restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
203.36 387.75 mo
277.1 387.75 li
277.1 344.813 li
203.36 344.813 li
cp
.684749 .498451 .383001 .113313 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+CALIBRI gcheck setglobal} if
2 8850 448 <00010022fffa037b03bc002c00e3b90023fff840170b0c014c1f080b0c01
4c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b30b014d14
b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8fff040370b
014d37110126110127100128050122280b014d3d220124220121280b014d
3f210124210120280b014d3d2001242001270f0176210121b8ffd0400911
1548212013014d21b8ffe8400910014d21200f014d21b8ffe8b30c014d21
b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b2b2b2b2b
002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b5d2b5d2b
2b01140e0207010e0323222e0227012e0235343e0233321e021713173713
3e0333321e02037b01020302fecd040d1a281e1e28190e04fece04050108
131f171d23130904fe0403fb020a13211b171e1107039f04090a0c07fca9
0b0e080304080e0a03570c120903080c070203080c09fd1a0c0c02e6090c
080302080b00>PBAAAA+CALIBRI AddT42Char 
PBAAAA+CALIBRI /CharStrings get begin
/v 448 def
end
PBAAAA+CALIBRI /Encoding get
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GFQXFY+CALIBRI*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /.notdef /slash 17{/.notdef}rp /A 
/B /C /D 2{/.notdef}rp /G /.notdef /I 3{/.notdef}rp 
/M 2{/.notdef}rp /P 2{/.notdef}rp /S /T /U 11{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
GFQXFY+CALIBRI nf
GFQXFY+CALIBRI*1 [13.9997 0 0 -13.9997 0 0 ]msf
221.32 362.08 mo
(S)sh
227.752 362.08 mo
(p)sh
235.108 362.08 mo
(a)sh
241.814 362.08 mo
(r)sh
246.695 362.08 mo
(s)sh
252.171 362.08 mo
(e)sh
259.136 362.08 mo
( )sh
212.54 378.88 mo
(c)sh
218.46 378.88 mo
(o)sh
225.843 378.88 mo
(n)sh
233.198 378.88 mo
(v)sh
239.521 378.88 mo
(e)sh
246.487 378.88 mo
(r)sh
251.368 378.88 mo
(t)sh
256.058 378.88 mo
(e)sh
263.024 378.88 mo
(r)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 
/20 /21 /22 /23 /24 /25 /26 /27 /28 /29 
/30 /31 ]]
] del_res
/GFQXGA+CALIBRI,Bold*1 uf
/GFQXGA+CALIBRI,Bold uf
/QJJAAA+CALIBRI,Bold uf
/GFQXFY+CALIBRI*1 uf
/GFQXFY+CALIBRI uf
/PBAAAA+CALIBRI uf
/GFQXFZ+CALIBRI,Italic*1 uf
/GFQXFZ+CALIBRI,Italic uf
/HIBBAA+CALIBRI,Italic uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
